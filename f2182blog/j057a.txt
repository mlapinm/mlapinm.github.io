1
00:00:00,500 --> 00:00:02,830
Welcome to Jeremy’s IT Lab.

2
00:00:02,830 --> 00:00:05,930
This is a free, complete course for the CCNA.

3
00:00:05,930 --> 00:00:09,780
If you like these videos, please subscribe
to follow along with the series.

4
00:00:09,780 --> 00:00:13,760
Also, please like and leave a comment, and
share the video to help spread this free series

5
00:00:13,760 --> 00:00:14,880
of videos.

6
00:00:14,880 --> 00:00:16,779
Thanks for your help.

7
00:00:16,779 --> 00:00:19,180
In this video we’ll take a look at Wireshark.

8
00:00:19,180 --> 00:00:23,449
I have shown you Wireshark a couple times
in the course, but today I’ll spend a little

9
00:00:23,449 --> 00:00:25,350
bit more time on it.

10
00:00:25,350 --> 00:00:28,640
Although there is a lot you can learn about
Wireshark, it’s quite easy to get started

11
00:00:28,640 --> 00:00:30,240
using it.

12
00:00:30,240 --> 00:00:34,260
Network engineers use it as a tool in their
job all the time, and it’s also a fantastic

13
00:00:34,260 --> 00:00:36,190
study tool.

14
00:00:36,190 --> 00:00:40,531
Using Packet Tracer’s ‘simulation’ mode
you can analyze packets to some extent, but

15
00:00:40,531 --> 00:00:43,440
not at the same level as Wireshark.

16
00:00:43,440 --> 00:00:47,600
Packet Tracer is a network simulator, but
Wireshark lets you capture and analyze real

17
00:00:47,600 --> 00:00:49,600
network traffic.

18
00:00:49,600 --> 00:00:53,140
Up here you can see the packets as they are
sent or received by the network interface

19
00:00:53,140 --> 00:00:57,850
you are capturing traffic from, and if you
click on a packet you can see more details

20
00:00:57,850 --> 00:00:59,840
down here.

21
00:00:59,840 --> 00:01:04,000
Note that this kind of software is called
‘packet capture’ software.

22
00:01:04,000 --> 00:01:10,000
Packet is just a general term we use, it doesn’t
mean it only captures the Layer 3 PDU.

23
00:01:10,000 --> 00:01:14,290
As you can see here, the entire frame is indeed
captured.

24
00:01:14,290 --> 00:01:17,740
To download Wireshark, go to wireshark.org.

25
00:01:17,740 --> 00:01:21,080
It’s totally free, so you really should
get it.

26
00:01:21,080 --> 00:01:25,770
At the end of this demonstration I’ll give
you a few basic tasks to try out in Wireshark,

27
00:01:25,770 --> 00:01:29,760
so you’ll need to download it if you want
to do them.

28
00:01:29,760 --> 00:01:33,910
Usually in my lab videos I give a shoutout
to Boson NetSim, Boson’s amazing network

29
00:01:33,910 --> 00:01:37,760
simulator with a ton of guided practice labs.

30
00:01:37,760 --> 00:01:41,720
Since I’m not doing a regular configuration
lab this time, I decided to let you know about

31
00:01:41,720 --> 00:01:45,570
Boson’s CCNA courseware, which they released
recently.

32
00:01:45,570 --> 00:01:50,110
Basically, this is Boson’s complete course
for the CCNA.

33
00:01:50,110 --> 00:01:52,240
What do you get in the courseware?

34
00:01:52,240 --> 00:01:56,770
You get the curriculum, which is the main
CCNA course in PDF format.

35
00:01:56,770 --> 00:02:02,310
You get a PDF lab guide, and on top of that
a lab pack you can do in NetSim.

36
00:02:02,310 --> 00:02:06,799
These are not the labs included in NetSim
for CCNA, these are completely new and unique

37
00:02:06,799 --> 00:02:09,009
labs made for the courseware.

38
00:02:09,009 --> 00:02:13,870
Here’s the table of contents for the curriculum,
covering everything you need to know for the

39
00:02:13,870 --> 00:02:14,870
CCNA.

40
00:02:14,870 --> 00:02:20,230
I always recommend using multiple resources
to study for the exam, and I think Boson’s

41
00:02:20,230 --> 00:02:21,670
courseware is a great option.

42
00:02:21,670 --> 00:02:27,430
I didn’t use their courseware for the previous
edition of the CCNA, but I did use their CCNP

43
00:02:27,430 --> 00:02:31,170
courseware to study for my exams and it was
excellent.

44
00:02:31,170 --> 00:02:35,040
If you want to get Boson’s courseware, follow
the link in the video description.

45
00:02:35,040 --> 00:02:37,430
You can download a sample from their website.

46
00:02:37,430 --> 00:02:40,890
Okay, back to Wireshark.

47
00:02:40,890 --> 00:02:44,989
First up I’m just going to show you a brief
video of me using Wireshark to capture traffic

48
00:02:44,989 --> 00:02:49,680
being sent and received by the network interface
of my PC.

49
00:02:49,680 --> 00:02:53,390
When the capture starts you’ll see there’s
already a lot of network traffic going through

50
00:02:53,390 --> 00:02:55,330
the interface.

51
00:02:55,330 --> 00:02:59,940
Then I open a YouTube page and start watching
a video, and you’ll see some more traffic.

52
00:02:59,940 --> 00:03:04,330
Okay, let’s just watch the video, it’s
about 45 seconds long, and then I’ll walk

53
00:03:04,330 --> 00:03:07,060
through an actual analysis of some of the
traffic.

54
00:03:55,280 --> 00:03:57,860
Okay, so that was a lot of traffic that went
passing by.

55
00:03:57,860 --> 00:04:00,400
Let’s analyze some of it.

56
00:04:00,400 --> 00:04:03,840
Notice that in Wireshark you are able to filter
output.

57
00:04:03,840 --> 00:04:06,360
There are many ways you can do so.

58
00:04:06,360 --> 00:04:11,599
This video isn’t about how to master Wireshark,
so I won’t cover anything like that.

59
00:04:11,599 --> 00:04:15,280
Just notice that I filtered by the TCP port
number.

60
00:04:15,280 --> 00:04:20,940
If you do want to learn more about Wireshark,
David Bombal has a fantastic course on Udemy,

61
00:04:20,940 --> 00:04:25,330
and also a free Wireshark and ethical hacking
course here on YouTube, check them out if

62
00:04:25,330 --> 00:04:27,070
you’re curious.

63
00:04:27,070 --> 00:04:32,300
Okay, notice the first message here, under
‘protocol’ you can see that TCP is the

64
00:04:32,300 --> 00:04:35,550
Layer 4 protocol being used.

65
00:04:35,550 --> 00:04:40,270
Under ‘info’ you can see the source and
destination ports.

66
00:04:40,270 --> 00:04:48,220
From 62652 to 443 in the first message, and
reversed in the second message, which is the

67
00:04:48,220 --> 00:04:50,240
reply.

68
00:04:50,240 --> 00:04:53,460
What is 62652?

69
00:04:53,460 --> 00:04:58,790
It’s the random source port my PC selected
from the ephemeral port range.

70
00:04:58,790 --> 00:05:00,750
How about 443?

71
00:05:00,750 --> 00:05:09,620
That’s HTTPS, Hypertext Transfer Protocol
Secure, it’s used to access webpages.

72
00:05:09,620 --> 00:05:12,830
Look here, do you recognize this series of
messages?

73
00:05:12,830 --> 00:05:16,530
SYN, SYN-ACK, followed by ACK.

74
00:05:16,530 --> 00:05:19,830
That’s the TCP 3-way handshake.

75
00:05:19,830 --> 00:05:27,810
So, in these first three messages my PC and
the remote server established a TCP connection.

76
00:05:27,810 --> 00:05:33,620
You can also see the sequence number, acknowledgment number, and window length.

77
00:05:33,620 --> 00:05:37,440
Remember that I said the initial sequence
number is randomly selected?

78
00:05:37,440 --> 00:05:41,630
You might be thinking it’s a big coincidence
that 0 was randomly selected as the sequence

79
00:05:41,630 --> 00:05:43,290
number.

80
00:05:43,290 --> 00:05:48,470
In Wireshark it is displayed as 0 here to
make it easier to look at and understand,

81
00:05:48,470 --> 00:05:51,160
but that’s not the actual sequence number.

82
00:05:51,160 --> 00:05:55,580
When we look further at the details of the
segment you’ll see the real sequence number.

83
00:05:55,580 --> 00:06:01,100
So, sequence number 0 is acknowledged with
1, there’s the forward acknowledgment I

84
00:06:01,100 --> 00:06:03,000
told you about.

85
00:06:03,000 --> 00:06:05,350
Then my PC sends sequence number 1.

86
00:06:05,350 --> 00:06:09,860
Once again, these aren’t the real sequence
numbers, Wireshark just displays them like

87
00:06:09,860 --> 00:06:15,050
this to make it easier to look at and analyze
the data exchange.

88
00:06:15,050 --> 00:06:18,520
Then there is the actual exchange of data
here.

89
00:06:18,520 --> 00:06:22,650
Notice that most of these display SSL in the
protocol column.

90
00:06:22,650 --> 00:06:29,290
SSL is what gives the security to HTTPS, Hypertext
Transfer Protocol Secure.

91
00:06:29,290 --> 00:06:35,570
TCP is still being used, but Wireshark displays
SSL in the column here.

92
00:06:35,570 --> 00:06:41,050
Finally, you can see the exchange of FINs
and ACKs to terminate the connection at the

93
00:06:41,050 --> 00:06:42,840
end.

94
00:06:42,840 --> 00:06:46,000
You probably noticed that the flags are a
little different than I introduced in the

95
00:06:46,000 --> 00:06:51,330
lecture, there is an extra ACK in the first
and third messages.

96
00:06:51,330 --> 00:06:55,360
There are some nuances to the connection termination
process which you don’t need to worry about

97
00:06:55,360 --> 00:06:57,560
at the CCNA level.

98
00:06:57,560 --> 00:07:04,780
I recommend just remembering the basic FIN,
ACK, FIN, ACK sequence.

99
00:07:04,780 --> 00:07:08,400
Now let’s briefly look inside one of those
segments.

100
00:07:08,400 --> 00:07:14,220
This is the very first SYN message at the
beginning of the three-way handshake.

101
00:07:14,220 --> 00:07:19,530
First up, notice that the segment is of course
encapsulated in an Ethernet frame and IP packet.

102
00:07:19,530 --> 00:07:25,110
We’re just looking deeper than we did before,
but don’t forget about Layers 2 and 3.

103
00:07:25,110 --> 00:07:29,550
Okay, I want to point out the sequence number
here.

104
00:07:29,550 --> 00:07:33,550
Notice that ‘0’ is the relative sequence
number.

105
00:07:33,550 --> 00:07:37,180
Wireshark does this to make it easier to analyze
the traffic.

106
00:07:37,180 --> 00:07:40,380
Below you can see the real sequence number.

107
00:07:40,380 --> 00:07:45,039
As you can probably imagine, it is much harder
to analyze when using sequence and acknowledgment

108
00:07:45,039 --> 00:07:50,009
numbers like 1 billion 224 million 315 thousand
781.

109
00:07:50,009 --> 00:07:55,270
Okay, there are just a couple other things
I wanted to point out.

110
00:07:55,270 --> 00:08:00,560
Because this is a SYN message, under the ‘flags’
section you can see that the SYN bit is set,

111
00:08:00,560 --> 00:08:01,970
it’s 1.

112
00:08:01,970 --> 00:08:05,760
All of the other flags are not set, they are
0.

113
00:08:05,760 --> 00:08:09,879
Finally, you can see the TCP window size down
here.

114
00:08:09,879 --> 00:08:16,990
Okay, before wrapping up this brief demonstration
let’s look at a UDP segment.

115
00:08:16,990 --> 00:08:21,740
First up, notice that this is a DNS, Domain
Name System, message.

116
00:08:21,740 --> 00:08:24,780
This is from my PC to a DNS server.

117
00:08:24,780 --> 00:08:28,300
So, what will the destination port be?

118
00:08:28,300 --> 00:08:33,599
As you can see here, my PC selected a random
source port from the ephemeral range, and

119
00:08:33,599 --> 00:08:39,720
used 53 as the destination port, because that’s
the port number DNS uses.

120
00:08:39,720 --> 00:08:44,830
Within the segment you can indeed see that
a DNS message is encapsulated inside.

121
00:08:44,830 --> 00:08:49,600
This is a DNS query message, you’ll learn
more about DNS later in the course.

122
00:08:49,600 --> 00:08:54,620
That’s all I wanted to point out about UDP,
as you already know it’s much simpler than

123
00:08:54,620 --> 00:08:55,779
TCP.

124
00:08:55,779 --> 00:09:01,600
Finally, here’s a little bit of homework
for you to get familiar with Wireshark.

125
00:09:01,600 --> 00:09:05,290
You don’t have to do this, of course, but
it won’t take too much time.

126
00:09:05,290 --> 00:09:09,769
First, download Wireshark from wireshark.org.

127
00:09:09,769 --> 00:09:13,930
Then use it to capture network traffic sent
and received by your PC.

128
00:09:13,930 --> 00:09:17,160
Visit some websites while Wireshark is running.

129
00:09:17,160 --> 00:09:19,730
Then stop the Wireshark capture.

130
00:09:19,730 --> 00:09:24,600
Check out the packet captures, and find a
TCP three-way handshake, a TCP connection

131
00:09:24,600 --> 00:09:26,570
establishment.

132
00:09:26,570 --> 00:09:30,660
Then find a TCP four-way handshake, a TCP
connection termination.

133
00:09:30,660 --> 00:09:34,990
Again, if you really want to learn how to
use Wireshark I recommend checking out David

134
00:09:34,990 --> 00:09:39,640
Bombal’s free videos on YouTube or getting
his Wireshark course on Udemy.

135
00:09:39,640 --> 00:09:44,480
I’m no Wireshark expert myself, David Bombal
is much more knowledgeable about it than I

136
00:09:44,480 --> 00:09:45,480
am.

137
00:09:45,480 --> 00:09:49,290
Okay, that’s all for the video, I hope it
was interesting to look inside some packet

138
00:09:49,290 --> 00:09:55,290
captures and see some of the things we studied
in the lecture video.

139
00:09:55,290 --> 00:09:59,660
Before finishing today’s video I want to
thank my JCNP-level channel members.

140
00:09:59,660 --> 00:10:03,370
To join, please click the ‘Join’ button
under the video.

141
00:10:03,370 --> 00:10:10,450
Thank you to Benjamin, Deepak, Tshepiso, Justin,
Loki, TheGunguy, Nil, Alex, Prakaash, Nasir,

142
00:10:10,450 --> 00:10:16,029
Erlison, Apogee, Wasseem, Marko, Florian,
Daming, Kone, Joshua, Jhilmar, Samil, Ed,

143
00:10:16,029 --> 00:10:22,120
Value, John, Funnydart, Scott, Hassan, Gerrard,
Joyce, Marek, Velvijaykum, C Mohd, Johan,

144
00:10:22,120 --> 00:10:28,070
Mark, Yousif, Sidi, Boson Software, Charlesetta,
Devin, Lito, Yonatan, and Vance.

145
00:10:28,070 --> 00:10:32,820
Sorry if I pronounced your name incorrectly,
but thank you so much for your support.

146
00:10:32,820 --> 00:10:37,209
One of you is still displaying as Channel
failed to load, if this is you please let

147
00:10:37,209 --> 00:10:40,360
me know and I’ll see if YouTube can fix
it.

148
00:10:40,360 --> 00:10:44,730
This is the list of JCNP-level members at
the time of recording by the way, September

149
00:10:44,730 --> 00:10:49,630
29th 2020, if you signed up recently and your
name isn’t on here don’t worry, you’ll

150
00:10:49,630 --> 00:10:53,870
be in future videos.

151
00:10:53,870 --> 00:10:55,450
Thank you for watching.

152
00:10:55,450 --> 00:10:59,360
Please subscribe to the channel, like the
video, leave a comment, and share the video

153
00:10:59,360 --> 00:11:02,700
with anyone else studying for the CCNA.

154
00:11:02,700 --> 00:11:05,910
If you want to leave a tip, check the links
in the description.

155
00:11:05,910 --> 00:11:11,329
I'm also a Brave verified publisher and accept
BAT, or Basic Attention Token, tips via the

156
00:11:11,329 --> 00:11:12,800
Brave browser.

157
00:11:12,800 --> 00:11:13,940
That's all for now.
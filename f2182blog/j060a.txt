1
00:00:01,280 --> 00:00:07,680
Welcome to Jeremy’s IT Lab. This is a free,&nbsp;
complete course for the CCNA. If you like these&nbsp;&nbsp;

2
00:00:07,680 --> 00:00:13,600
videos, please subscribe to follow along with the&nbsp;
series. Also, please like and leave a comment,&nbsp;&nbsp;

3
00:00:13,600 --> 00:00:17,440
and share the video to help spread this&nbsp;
free series of videos. Thanks for your help.

4
00:00:18,560 --> 00:00:23,680
In this video we will continue our&nbsp;
studies of IPv6. As a reminder,&nbsp;&nbsp;

5
00:00:23,680 --> 00:00:31,040
these are the specific exam topics relevant to&nbsp;
IPv6. In today’s video, we will focus on 1.9,&nbsp;&nbsp;

6
00:00:31,040 --> 00:00:38,080
learning about various IPv6 address types. In Day&nbsp;
31 I briefly introduced Global unicast and Link&nbsp;&nbsp;

7
00:00:38,080 --> 00:00:43,840
local IPv6 addresses, but this time let’s go more&nbsp;
in depth and also learn about the other types.

8
00:00:45,680 --> 00:00:50,880
Here’s what we’ll cover. First up, we’ll&nbsp;
continue with the topic of IPv6 address&nbsp;&nbsp;

9
00:00:50,880 --> 00:00:56,240
configuration. I’ll show you one more way to&nbsp;
configure an IPv6 address on an interface,&nbsp;&nbsp;

10
00:00:56,800 --> 00:01:02,320
specifically using something called ‘modified&nbsp;
EUI-64’, which if you were looking carefully&nbsp;&nbsp;

11
00:01:02,320 --> 00:01:09,440
you might have noticed is exam topic 1.9.f.&nbsp;
Next I’ll go into the other IPv6 address types.&nbsp;&nbsp;

12
00:01:10,160 --> 00:01:15,440
Global unicast, unique local, link&nbsp;
local, multicast, and some others.&nbsp;&nbsp;

13
00:01:16,960 --> 00:01:22,160
This is going to be a very information-dense&nbsp;
video, but it’s all important information so&nbsp;&nbsp;

14
00:01:22,160 --> 00:01:28,640
take your time, use the flashcards, and make sure&nbsp;
you know the topics in this video. As always, make&nbsp;&nbsp;

15
00:01:28,640 --> 00:01:34,080
sure to watch until the end of the video for a&nbsp;
bonus practice question from Boson ExSim for CCNA.&nbsp;&nbsp;

16
00:01:35,200 --> 00:01:40,480
ExSim, made by Boson Software, is the best and&nbsp;
most accurate set of practice exams out there.&nbsp;&nbsp;

17
00:01:41,280 --> 00:01:46,560
In my experience they simulate the style&nbsp;
and difficulty of the real CCNA and CCNP&nbsp;&nbsp;

18
00:01:46,560 --> 00:01:53,840
exams very well. If you want to check out Boson&nbsp;
ExSim, follow the link in the video description.

19
00:01:54,400 --> 00:01:59,920
Let’s get right into the topic. First up is&nbsp;
configuring IPv6 addresses using a method&nbsp;&nbsp;

20
00:01:59,920 --> 00:02:08,880
called EUI-64. EUI stands for Extended Unique&nbsp;
Identifier. When using this concept in IPv6,&nbsp;&nbsp;

21
00:02:08,880 --> 00:02:16,000
the technically correct term is ‘modified’ EUI-64,&nbsp;
but usually it’s just referred to as EUI-64.&nbsp;&nbsp;

22
00:02:17,840 --> 00:02:22,080
This topic can actually go quite deep and it’s&nbsp;
really not necessary to know all the details&nbsp;&nbsp;

23
00:02:22,080 --> 00:02:27,440
for the CCNA, so just be aware that you&nbsp;
might hear the name ‘modified EUI-64’&nbsp;&nbsp;

24
00:02:27,440 --> 00:02:36,000
or just ‘EUI-64’. For our purpose, they are the&nbsp;
same. EUI-64 is a method of converting a 48-bit&nbsp;&nbsp;

25
00:02:36,000 --> 00:02:42,560
MAC address into a 64-bit interface identifier,&nbsp;
and this interface identifier can then become&nbsp;&nbsp;

26
00:02:42,560 --> 00:02:50,560
the ‘host portion’ of a /64 IPv6 address.&nbsp;
An IPv6 address, as you know, is 128 bits,&nbsp;&nbsp;

27
00:02:51,200 --> 00:02:57,920
so /64 means 64 bits are the network portion&nbsp;
and 64 bits are the host portion of the address.&nbsp;&nbsp;

28
00:02:59,280 --> 00:03:03,840
Let’s walk through how to convert the MAC&nbsp;
address to the EUI-64 interface identifier.&nbsp;&nbsp;

29
00:03:05,200 --> 00:03:08,800
When you actually configure this on the&nbsp;
router, this will be done automatically,&nbsp;&nbsp;

30
00:03:08,800 --> 00:03:14,480
but you should know how to do it. The first step&nbsp;
is to divide the MAC address, the MAC address of&nbsp;&nbsp;

31
00:03:14,480 --> 00:03:24,080
the interface, in half. For example, if the MAC&nbsp;
address is 1234 5678 90AB, the middle is here&nbsp;&nbsp;

32
00:03:24,080 --> 00:03:30,960
in between 6 and 7. Now we have the two halves&nbsp;
of the MAC address. The next step is to insert&nbsp;&nbsp;

33
00:03:30,960 --> 00:03:39,600
hexadecimal FFFE in the middle. So, in between&nbsp;
6 and 7 insert FFFE. Now there’s one more step.&nbsp;&nbsp;

34
00:03:40,240 --> 00:03:47,680
Invert the 7th bit. If the 7th bit is a 0, make&nbsp;
it a 1. If the 7th bit is a 1, make it a 0.&nbsp;&nbsp;

35
00:03:48,560 --> 00:03:53,280
This is trickier than the first two steps, but&nbsp;
after Day 31’s video you should feel comfortable&nbsp;&nbsp;

36
00:03:53,280 --> 00:03:59,840
working with hexadecimal and binary. So, where&nbsp;
is the 7th bit in this modified MAC address?&nbsp;&nbsp;

37
00:04:00,880 --> 00:04:05,520
It’s the 3rd bit of this ‘2’. Remember,&nbsp;
each hexadecimal digit is 4 bits,&nbsp;&nbsp;

38
00:04:06,080 --> 00:04:14,640
so the ‘1’ is bits 1, 2, 3, and 4. Then the&nbsp;
‘2’ is bits 5, 6, 7, and 8. So, this bit here,&nbsp;&nbsp;

39
00:04:14,640 --> 00:04:20,720
the 3rd bit of the hexadecimal 2, is the&nbsp;
7th bit. It’s a 1, so I converted it to 0.&nbsp;&nbsp;

40
00:04:21,600 --> 00:04:27,840
Convert it back to hexadecimal, and now the&nbsp;
process is complete. This is the interface ID, and&nbsp;&nbsp;

41
00:04:27,840 --> 00:04:34,000
it’s 64 bits. It will simply be added on to the&nbsp;
network prefix to make the complete IPv6 address.

42
00:04:35,840 --> 00:04:41,760
Before I move on to explain more, here are a few&nbsp;
practice questions. Convert each MAC address to&nbsp;&nbsp;

43
00:04:41,760 --> 00:04:50,560
an EUI-64 interface identifier. Remember the three&nbsp;
steps. 1, split the MAC address in half. 2, insert&nbsp;&nbsp;

44
00:04:50,560 --> 00:04:58,080
FFFE in the middle. And 3, invert the 7th bit.&nbsp;
Pause the video now to convert the MAC addresses.

45
00:05:02,560 --> 00:05:05,920
Okay, here are the answers. If&nbsp;
you want some more practice,&nbsp;&nbsp;

46
00:05:05,920 --> 00:05:10,960
try writing out some random MAC addresses&nbsp;
and finding the EUI-64 interface identifier.

47
00:05:12,640 --> 00:05:20,560
Here’s how to configure an interface using EUI-64.&nbsp;
First on G0/0, I used the command IPV6 ADDRESS,&nbsp;&nbsp;

48
00:05:21,200 --> 00:05:28,560
followed by the network prefix,&nbsp;
2001:DB8::/64, and then finally EUI-64.&nbsp;&nbsp;

49
00:05:29,360 --> 00:05:35,440
That’s it. That tells the router to use this&nbsp;
prefix plus the EUI-64 interface identifier&nbsp;&nbsp;

50
00:05:35,440 --> 00:05:40,640
to generate an IPv6 address.&nbsp;
I also did the same on G0/1&nbsp;&nbsp;

51
00:05:40,640 --> 00:05:45,920
and G0/2. So, let’s check the actual&nbsp;
IPv6 addresses that were configured.

52
00:05:47,760 --> 00:05:51,840
First up, I used SHOW INTERFACES to&nbsp;
check the MAC address of each interface.&nbsp;&nbsp;

53
00:05:52,640 --> 00:05:57,040
Here they are. Note that the MAC address&nbsp;
of each interface is nearly identical,&nbsp;&nbsp;

54
00:05:57,040 --> 00:06:03,520
only the last digit is different. So, their EUI-64&nbsp;
interface identifiers will be very similar too.&nbsp;&nbsp;

55
00:06:04,480 --> 00:06:08,560
If you want, try pausing the video here&nbsp;
to figure out the IPv6 address that&nbsp;&nbsp;

56
00:06:08,560 --> 00:06:15,600
was generated on each interface. But let’s&nbsp;
check now. Here’s SHOW IPV6 INTERFACE BRIEF.&nbsp;&nbsp;

57
00:06:16,480 --> 00:06:24,240
And here’s G0/0’s IPv6 address. Notice that&nbsp;
EUI-64 changed the C of the MAC address to an E.&nbsp;&nbsp;

58
00:06:25,200 --> 00:06:30,720
And here’s the FFFE inserted in the middle of&nbsp;
the MAC address to make it 64 bits in length.&nbsp;&nbsp;

59
00:06:32,000 --> 00:06:38,320
And here are the addresses of G0/1 and G0/2. As&nbsp;
I said, they are very similar, because the MAC&nbsp;&nbsp;

60
00:06:38,320 --> 00:06:44,800
addresses used to generate the IPv6 addresses&nbsp;
were very similar too. So, to summarize,&nbsp;&nbsp;

61
00:06:44,800 --> 00:06:51,280
EUI-64 allows routers to automatically generate an&nbsp;
IPv6 address by expanding their MAC address to a&nbsp;&nbsp;

62
00:06:51,280 --> 00:06:56,960
64-bit interface ID, which is then combined&nbsp;
with the specified IPv6 address prefix.

63
00:06:59,040 --> 00:07:03,920
Before moving on, let me briefly explain something&nbsp;
you might be wondering. I don’t think you need&nbsp;&nbsp;

64
00:07:03,920 --> 00:07:08,480
to know this for the CCNA, but I’m sure I’ll&nbsp;
get some questions so let me briefly explain&nbsp;&nbsp;

65
00:07:08,480 --> 00:07:15,840
why the 7th bit is inverted from 1 to 0 or 0 to&nbsp;
1. MAC addresses can be divided into two types.&nbsp;&nbsp;

66
00:07:17,120 --> 00:07:21,920
UAAs, universally administered addresses,&nbsp;
which are the unique MAC addresses assigned&nbsp;&nbsp;

67
00:07:21,920 --> 00:07:28,960
to the device by the manufacturer. There are&nbsp;
also LAAs, locally administered addresses.&nbsp;&nbsp;

68
00:07:29,600 --> 00:07:33,360
These are MAC addresses which are manually&nbsp;
assigned by an admin or a protocol.&nbsp;&nbsp;

69
00:07:34,400 --> 00:07:39,280
In Cisco IOS you can manually configure a&nbsp;
MAC address with the MAC-ADDRESS command on&nbsp;&nbsp;

70
00:07:39,280 --> 00:07:47,360
an interface. These MAC addresses don’t have to&nbsp;
be globally unique. You can identify a UAA or LAA&nbsp;&nbsp;

71
00:07:47,360 --> 00:07:54,960
by the 7th bit of the MAC address, which is called&nbsp;
the U/L bit, Universal/Local bit. If the U/L bit&nbsp;&nbsp;

72
00:07:54,960 --> 00:08:03,920
is set to 0, it’s a UAA. If the U/L bit is set to&nbsp;
1, it’s an LAA. However, in the context of IPv6&nbsp;&nbsp;

73
00:08:03,920 --> 00:08:11,280
addresses and EUI-64, the meaning of the U/L&nbsp;
bit is reversed. If the U/L bit is set to 0,&nbsp;&nbsp;

74
00:08:11,280 --> 00:08:19,280
it means that the MAC address the EUI-64 interface&nbsp;
ID was made from was an LAA. If it’s set to 1,&nbsp;&nbsp;

75
00:08:19,280 --> 00:08:25,360
it means that the MAC address the EUI-64&nbsp;
interface ID was made from was a UAA. Note&nbsp;&nbsp;

76
00:08:25,360 --> 00:08:31,280
that this doesn’t actually effect the function of&nbsp;
the IPv6 address itself. It doesn’t mean the IPv6&nbsp;&nbsp;

77
00:08:31,280 --> 00:08:36,800
address is universal or local. If you want&nbsp;
to know the exact reasons for this switch,&nbsp;&nbsp;

78
00:08:36,800 --> 00:08:44,240
do a Google search for ‘eui-64 packetlife.net’,&nbsp;
there is a great explanation there. It’s fun to&nbsp;&nbsp;

79
00:08:44,240 --> 00:08:49,520
get into the details, but we’re moving outside of&nbsp;
the scope of a CCNA course now, so let’s move on.

80
00:08:51,840 --> 00:08:57,840
So, ‘EUI-64’ isn’t really a ‘type’ of IPv6&nbsp;
address, it’s a method of automatically&nbsp;&nbsp;

81
00:08:57,840 --> 00:09:02,560
generating an IPv6 address using a&nbsp;
specified prefix and a MAC address.&nbsp;&nbsp;

82
00:09:03,680 --> 00:09:06,800
Now let’s talk about an actual&nbsp;
defined type of IPv6 address.

83
00:09:07,440 --> 00:09:14,560
That is the global unicast address, exam topic&nbsp;
1.9.a. I briefly mentioned them in Day 31.&nbsp;&nbsp;

84
00:09:15,680 --> 00:09:22,080
Global unicast IPv6 addresses are public&nbsp;
addresses which can be used over the Internet.&nbsp;&nbsp;

85
00:09:22,080 --> 00:09:27,280
We haven’t talked about public and private IPv4&nbsp;
addresses yet, but that will be coming up soon.&nbsp;&nbsp;

86
00:09:28,480 --> 00:09:34,800
You must register to use global unicast addresses.&nbsp;
Because they are public addresses, it is expected&nbsp;&nbsp;

87
00:09:34,800 --> 00:09:40,080
that they are globally unique. If two companies&nbsp;
use the same global unicast address range,&nbsp;&nbsp;

88
00:09:40,080 --> 00:09:44,560
there are going to be problems, like two&nbsp;
homes having the exact same street address.&nbsp;&nbsp;

89
00:09:46,480 --> 00:09:51,520
The range of addresses to be used for global&nbsp;
unicast addresses was originally defined as&nbsp;&nbsp;

90
00:09:51,520 --> 00:10:02,000
2000::/3, which includes all addresses from&nbsp;
2000, followed by 7 quartets of 0s, through 3FFF,&nbsp;&nbsp;

91
00:10:02,000 --> 00:10:08,160
followed by seven quartets of Fs. That’s a lot of&nbsp;
addresses, but this was later updated to include&nbsp;&nbsp;

92
00:10:08,160 --> 00:10:14,000
many more addresses. Now all addresses which&nbsp;
aren’t reserved for other purposes are global&nbsp;&nbsp;

93
00:10:14,000 --> 00:10:20,160
unicast addresses. Here’s an example of a global&nbsp;
unicast address which I showed you in day 31,&nbsp;&nbsp;

94
00:10:20,160 --> 00:10:26,880
let’s go over it again. This blue part is the&nbsp;
48-bit ‘global routing prefix’, which is assigned&nbsp;&nbsp;

95
00:10:26,880 --> 00:10:33,120
to the company by the ISP. The company is free to&nbsp;
use this /48 block of addresses however they want.&nbsp;&nbsp;

96
00:10:33,920 --> 00:10:40,640
However, because IPv6 addresses usually use a /64&nbsp;
prefix length, that means that these remaining 16&nbsp;&nbsp;

97
00:10:40,640 --> 00:10:45,840
bits in the prefix are the ‘subnet identifier’,&nbsp;
which can be used to make various subnets.&nbsp;&nbsp;

98
00:10:47,040 --> 00:10:52,240
16 bits allows for over 65,000 subnets,&nbsp;
more than enough for almost any purpose.&nbsp;&nbsp;

99
00:10:54,080 --> 00:10:57,680
These two parts together make&nbsp;
up the IPv6 network prefix.&nbsp;&nbsp;

100
00:10:59,200 --> 00:11:04,000
Finally, the second half of the address,&nbsp;
the ‘host portion’ of the address in IPv4,&nbsp;&nbsp;

101
00:11:04,000 --> 00:11:11,600
is called the ‘interface identifier’ in IPv6.&nbsp;
This can be generated with EUI-64 as shown before,&nbsp;&nbsp;

102
00:11:11,600 --> 00:11:16,640
or manually configured however you want.&nbsp;
So, remember these three parts of an IPv6&nbsp;&nbsp;

103
00:11:16,640 --> 00:11:23,200
global unicast address. Global routing prefix,&nbsp;
subnet identifier, and interface identifier.

104
00:11:24,880 --> 00:11:28,800
Next up we’ll look at unique&nbsp;
local addresses, topic 1.9.b.&nbsp;&nbsp;

105
00:11:30,080 --> 00:11:35,040
Unique local IPv6 addresses are private&nbsp;
addresses which cannot be used over the Internet.&nbsp;&nbsp;

106
00:11:35,760 --> 00:11:40,640
These are like private IPv4 addresses. Again,&nbsp;
we haven’t covered them yet, but they’re coming&nbsp;&nbsp;

107
00:11:40,640 --> 00:11:47,280
up soon. You do not need to register to use them.&nbsp;
They can be used freely within internal networks&nbsp;&nbsp;

108
00:11:47,280 --> 00:11:52,480
and don’t need to be globally unique. I put&nbsp;
an asterisk next to that sentence because, as&nbsp;&nbsp;

109
00:11:52,480 --> 00:11:58,320
you’ll see soon, you should still try to make the&nbsp;
addresses unique. Note that these addresses can’t&nbsp;&nbsp;

110
00:11:58,320 --> 00:12:03,920
be routed over the Internet, your ISP will simply&nbsp;
drop packets destined for unique local addresses.&nbsp;&nbsp;

111
00:12:06,000 --> 00:12:14,400
The address block FC00::/7 is reserved for unique&nbsp;
local addresses, however a later update requires&nbsp;&nbsp;

112
00:12:14,400 --> 00:12:19,520
that the 8th bit be set to 1, so really all&nbsp;
unique local addresses will begin with FD.&nbsp;&nbsp;

113
00:12:20,960 --> 00:12:27,280
Here’s an example of a unique local address.&nbsp;
Let’s break down the parts. First up, FD&nbsp;&nbsp;

114
00:12:27,280 --> 00:12:32,320
simply indicates that this is a unique local&nbsp;
address, FD is the unique local address range.&nbsp;&nbsp;

115
00:12:33,440 --> 00:12:39,360
The next 40 bits are called the ‘global ID’.&nbsp;
It is recommended that this part of the address&nbsp;&nbsp;

116
00:12:39,360 --> 00:12:45,040
be randomly generated. Why randomly generated&nbsp;
and not just use something simple like all 0s?&nbsp;&nbsp;

117
00:12:46,160 --> 00:12:50,480
The global ID should be unique so that&nbsp;
addresses don’t overlap when companies merge.&nbsp;&nbsp;

118
00:12:51,280 --> 00:12:56,800
If all companies use the simple global ID of&nbsp;
all 0s, when two companies merge and connect&nbsp;&nbsp;

119
00:12:56,800 --> 00:13:01,040
their networks they might have the same subnet&nbsp;
in different parts of the network, which can&nbsp;&nbsp;

120
00:13:01,040 --> 00:13:06,640
cause a lot of problems. By randomly generating&nbsp;
this global ID, the chances of having duplicate&nbsp;&nbsp;

121
00:13:06,640 --> 00:13:12,720
subnets are very low. So, even though these unique&nbsp;
local addresses don’t have to be globally unique,&nbsp;&nbsp;

122
00:13:12,720 --> 00:13:17,360
it’s still a good idea to randomly generate the&nbsp;
global ID and try to make it globally unique.&nbsp;&nbsp;

123
00:13:18,720 --> 00:13:23,600
Okay, the next part of the address is the subnet&nbsp;
identifier, just like in a global unicast address.&nbsp;&nbsp;

124
00:13:25,200 --> 00:13:29,360
And these first 64 bits make up&nbsp;
the network prefix. Once again,&nbsp;&nbsp;

125
00:13:29,360 --> 00:13:34,720
you don’t have to use a /64 prefix length, but&nbsp;
that’s the standard prefix length for IPv6.&nbsp;&nbsp;

126
00:13:35,840 --> 00:13:40,640
Then the last 64 bits are the interface&nbsp;
ID, just like global unicast addresses.

127
00:13:43,760 --> 00:13:51,680
Next up, link local addresses, topic 1.9.c on&nbsp;
the exam topics list. Link local IPv6 addresses&nbsp;&nbsp;

128
00:13:51,680 --> 00:13:57,680
are automatically generated on IPv6-enabled&nbsp;
interfaces, as you have already seen. Note&nbsp;&nbsp;

129
00:13:57,680 --> 00:14:03,280
that you can use the command IPV6 ENABLE to&nbsp;
enable IPv6 on an interface without actually&nbsp;&nbsp;

130
00:14:03,280 --> 00:14:09,920
configuring an IPv6 address on it. It will then&nbsp;
automatically generate a link-local IPv6 address,&nbsp;&nbsp;

131
00:14:09,920 --> 00:14:16,160
and that will be the only IPv6 address on the&nbsp;
interface. Link local addresses use the address&nbsp;&nbsp;

132
00:14:16,160 --> 00:14:26,240
block FE80::/10. However, the standard states&nbsp;
that the 54 bits after FE80/10 should all be 0,&nbsp;&nbsp;

133
00:14:26,240 --> 00:14:33,040
so you won’t actually see any link local addresses&nbsp;
beginning with FE9, FEA, or FEB. Only FE8.&nbsp;&nbsp;

134
00:14:34,320 --> 00:14:38,000
Then, the interface ID is&nbsp;
generated using EUI-64 rules.&nbsp;&nbsp;

135
00:14:39,040 --> 00:14:45,200
Here’s the same output of SHOW IPV6 INTERFACE&nbsp;
BRIEF that I showed you before. Notice that each&nbsp;&nbsp;

136
00:14:45,200 --> 00:14:51,440
link local address uses the same interface ID as&nbsp;
the global unicast address we configured. That’s&nbsp;&nbsp;

137
00:14:51,440 --> 00:14:58,160
because both used EUI-64 to generate the interface&nbsp;
ID. Link local means that these addresses are&nbsp;&nbsp;

138
00:14:58,160 --> 00:15:04,080
used for communication within a single link, a&nbsp;
single subnet. Routers will not route packets&nbsp;&nbsp;

139
00:15:04,080 --> 00:15:09,120
with a link-local destination IPv6 address, they&nbsp;
will not forward the packets between subnets.&nbsp;&nbsp;

140
00:15:10,320 --> 00:15:15,760
So, what are some actual uses of link-local&nbsp;
addresses? For example, routing protocol&nbsp;&nbsp;

141
00:15:15,760 --> 00:15:23,920
peerings. OSPFv3, used for IPv6, uses link-local&nbsp;
addresses for neighbor adjacencies, sending LSAs,&nbsp;&nbsp;

142
00:15:23,920 --> 00:15:31,040
etc. They can also be used as the next-hop&nbsp;
address for static routes. And neighbor discovery&nbsp;&nbsp;

143
00:15:31,040 --> 00:15:36,960
protocol, NDP, which is IPv6’s replacement for&nbsp;
ARP, uses link-local addresses to function.&nbsp;&nbsp;

144
00:15:37,920 --> 00:15:43,600
I’ll talk about NDP as well as IPv6 routing in&nbsp;
Day 33, but let me show you a small example.

145
00:15:45,840 --> 00:15:54,960
This is just an example of one use for link-local&nbsp;
addresses. So, PC1 in the 2001:DB8:0:1::/64&nbsp;&nbsp;

146
00:15:54,960 --> 00:16:04,400
subnet wants to send this packet to PC2 in the&nbsp;
2001:DB8:0:2::/64 subnet. It sends the packet&nbsp;&nbsp;

147
00:16:04,400 --> 00:16:15,520
to its default gateway 2001:DB8:0:1::1, which is&nbsp;
R1. R1 looks up the destination 2001:DB8:0:2::2&nbsp;&nbsp;

148
00:16:15,520 --> 00:16:23,760
in its routing table, and the next hop is FE80::3,&nbsp;
so it forwards the packet to R2. R2 looks up the&nbsp;&nbsp;

149
00:16:23,760 --> 00:16:32,560
destination 2001:DB8:0:2::2 in its routing table&nbsp;
and finds a next hop of FE80::5, so it forwards&nbsp;&nbsp;

150
00:16:32,560 --> 00:16:41,040
the packet to R3. R3 looks up the destination&nbsp;
2001:DB8:0:2::2 in its routing table and finds&nbsp;&nbsp;

151
00:16:41,040 --> 00:16:48,080
a next hop address of FE80::7, so it forwards&nbsp;
the packet to R4, which forwards it to PC2.&nbsp;&nbsp;

152
00:16:49,200 --> 00:16:55,760
Notice that in this part of the network, the&nbsp;
routers only have link-local addresses. So R1, for&nbsp;&nbsp;

153
00:16:55,760 --> 00:17:04,400
example, couldn’t send a ping to R3. If R1 tried&nbsp;
to ping R3 at FE80::5, the packet would simply&nbsp;&nbsp;

154
00:17:04,400 --> 00:17:10,880
be dropped because the destination is a link-local&nbsp;
address, it won’t be routed. However, for next-hop&nbsp;&nbsp;

155
00:17:10,880 --> 00:17:16,160
addresses these link-local addresses work just&nbsp;
fine, no need for any global unicast or unique&nbsp;&nbsp;

156
00:17:16,160 --> 00:17:22,800
local addresses on these interfaces. Anyway, as I&nbsp;
said I’ll talk more about IPv6 routing in Day 33,&nbsp;&nbsp;

157
00:17:23,440 --> 00:17:26,320
I just wanted to show you one&nbsp;
use for link-local addresses.

158
00:17:28,720 --> 00:17:33,680
Next up let’s look at multicast&nbsp;
addresses in IPv6, which is topic 1.9.e.&nbsp;&nbsp;

159
00:17:35,040 --> 00:17:38,960
For review, unicast addresses are&nbsp;
used for ‘one-to-one’ communication.&nbsp;&nbsp;

160
00:17:40,000 --> 00:17:45,840
A unicast packet is from one source to&nbsp;
one destination. Broadcast addresses are&nbsp;&nbsp;

161
00:17:45,840 --> 00:17:51,520
used for ‘one-to-all’ communication. From one&nbsp;
source to ALL destinations within the subnet.&nbsp;&nbsp;

162
00:17:52,720 --> 00:17:58,480
Multicast addresses are used for ‘one-to-many’&nbsp;
communications. From one source to multiple&nbsp;&nbsp;

163
00:17:58,480 --> 00:18:02,320
destinations, those hosts that have&nbsp;
joined the specific multicast group.&nbsp;&nbsp;

164
00:18:03,680 --> 00:18:11,600
IPv6 uses the range FF00::/8 for multicast. In&nbsp;
the next slide I’ll summarize some important&nbsp;&nbsp;

165
00:18:11,600 --> 00:18:16,880
multicast addresses, but let me tell you one&nbsp;
different thing about IPv6 compared to IPv4.&nbsp;&nbsp;

166
00:18:17,680 --> 00:18:24,640
IPv6 doesn’t use broadcast. There is no&nbsp;
‘broadcast address’ in IPv6. But there is a way&nbsp;&nbsp;

167
00:18:24,640 --> 00:18:29,360
to send a message to all hosts in the subnet using&nbsp;
multicast, which I’ll show you in the next slide.

168
00:18:31,200 --> 00:18:36,640
Here’s a chart of some important multicast&nbsp;
addresses, both IPv6 and IPv4 versions.&nbsp;&nbsp;

169
00:18:37,520 --> 00:18:42,720
You should know all of these multicast addresses&nbsp;
for the CCNA. Here’s something that might help&nbsp;&nbsp;

170
00:18:42,720 --> 00:18:48,800
you remember them. Notice that the IPv4&nbsp;
and IPv6 versions use the same last digit.&nbsp;&nbsp;

171
00:18:49,680 --> 00:19:00,000
For example, the all OSPF routers multicast&nbsp;
address is FF02::5 in IPv6 and 224.0.0.5 in IPv4.&nbsp;&nbsp;

172
00:19:00,960 --> 00:19:10,080
The all EIGRP routers multicast address is FF02::A&nbsp;
in IPv6, remember hexadecimal A is 10 in decimal,&nbsp;&nbsp;

173
00:19:10,080 --> 00:19:17,040
and it’s 224.0.0.10 in IPv4. Now let&nbsp;
me point out this multicast address,&nbsp;&nbsp;

174
00:19:17,040 --> 00:19:24,080
the all nodes multicast address. You also might&nbsp;
hear it called the all hosts multicast address.&nbsp;&nbsp;

175
00:19:24,080 --> 00:19:30,400
Basically, it functions like a broadcast, since&nbsp;
it’s destined for all hosts like a broadcast. So,&nbsp;&nbsp;

176
00:19:30,400 --> 00:19:35,360
that’s how IPv6 can perform broadcasts, by&nbsp;
sending traffic to this multicast address.

177
00:19:37,680 --> 00:19:44,000
Here’s another aspect of IPv6 multicast&nbsp;
addresses, called ‘scopes’. IPv6 defines&nbsp;&nbsp;

178
00:19:44,000 --> 00:19:49,280
multiple multicast ‘scopes’ which indicate how&nbsp;
far the multicast packet should be forwarded.&nbsp;&nbsp;

179
00:19:50,480 --> 00:19:55,200
By the way, the addresses in the previous&nbsp;
slide all use the ‘link-local’ scope, which&nbsp;&nbsp;

180
00:19:55,200 --> 00:20:01,760
stays in the local subnet. Note that this is a&nbsp;
different concept than an IPv6 link-local address,&nbsp;&nbsp;

181
00:20:01,760 --> 00:20:07,520
which begins with FE80. These are IPv6&nbsp;
multicast addresses with a link-local&nbsp;&nbsp;

182
00:20:07,520 --> 00:20:14,880
scope. Here are a few of the IPv6 multicast&nbsp;
scopes. First up, interface-local multicast&nbsp;&nbsp;

183
00:20:14,880 --> 00:20:21,520
addresses begin with FF01. These multicast&nbsp;
messages don’t actually leave the local device.&nbsp;&nbsp;

184
00:20:22,560 --> 00:20:26,160
It can be used to send traffic to a&nbsp;
service running within the local device,&nbsp;&nbsp;

185
00:20:26,160 --> 00:20:31,200
but the router won’t actually send traffic out&nbsp;
of a physical interface. You might see the term&nbsp;&nbsp;

186
00:20:31,200 --> 00:20:39,760
‘node-local’ used for this scope also. Next is the&nbsp;
link-local scope, using FF02. As I said before,&nbsp;&nbsp;

187
00:20:39,760 --> 00:20:44,640
these multicast addresses stay within the local&nbsp;
subnet and are not routed between subnets.&nbsp;&nbsp;

188
00:20:46,000 --> 00:20:51,600
Okay, the next few scopes are a little less&nbsp;
simple. Interface-local and link-local are&nbsp;&nbsp;

189
00:20:51,600 --> 00:20:57,520
clearly defined and don’t need any special&nbsp;
configuration. However, site-local multicasts,&nbsp;&nbsp;

190
00:20:57,520 --> 00:21:04,000
beginning with FF05, can actually be forwarded by&nbsp;
routers. By definition, they should be limited to&nbsp;&nbsp;

191
00:21:04,000 --> 00:21:09,520
a single physical location and not forwarded&nbsp;
over a WAN. However, it’s up to the network&nbsp;&nbsp;

192
00:21:09,520 --> 00:21:14,320
engineer to configure the actual scope, how far&nbsp;
the site-local multicast will actually travel.&nbsp;&nbsp;

193
00:21:15,600 --> 00:21:20,400
This is way beyond the scope of the CCNA, so&nbsp;
just remember the name and that site-local&nbsp;&nbsp;

194
00:21:20,400 --> 00:21:27,040
multicasts begin with FF05. Same for the&nbsp;
next type, organization-local multicasts,&nbsp;&nbsp;

195
00:21:27,040 --> 00:21:33,040
which begin with FF08. These are intended to&nbsp;
be wider in scope than site-local multicasts.&nbsp;&nbsp;

196
00:21:33,920 --> 00:21:37,600
For example, the scope might be to all&nbsp;
subnets in the company or organization.&nbsp;&nbsp;

197
00:21:38,400 --> 00:21:42,080
Once again, it’s up to the network engineers&nbsp;
to configure the boundaries of the scope.&nbsp;&nbsp;

198
00:21:43,440 --> 00:21:50,160
One more scope you should be aware of is global,&nbsp;
using FF0E. Basically, it’s a wider scope than&nbsp;&nbsp;

199
00:21:50,160 --> 00:21:55,120
organization-local, and these multicast messages&nbsp;
can even be routed over the public Internet.&nbsp;&nbsp;

200
00:21:56,240 --> 00:22:00,960
They are defined as having ‘no boundaries’, but&nbsp;
that doesn’t mean a global multicast message will&nbsp;&nbsp;

201
00:22:00,960 --> 00:22:06,960
actually be sent to every destination all over the&nbsp;
Internet. Exactly how these scopes work is beyond&nbsp;&nbsp;

202
00:22:06,960 --> 00:22:12,480
the CCNA, but Cisco expects you to be aware&nbsp;
of these different scopes, know their names,&nbsp;&nbsp;

203
00:22:12,480 --> 00:22:16,560
and know how to identify them using the&nbsp;
4th hexadecimal character in the address.

204
00:22:18,000 --> 00:22:24,240
To help you visualize those different scopes,&nbsp;
here’s a diagram. From PC1’s perspective,&nbsp;&nbsp;

205
00:22:24,240 --> 00:22:29,520
if it sends a link-local multicast it would&nbsp;
reach these devices, all on the local subnet.&nbsp;&nbsp;

206
00:22:30,720 --> 00:22:33,520
A site-local multicast might reach these devices.&nbsp;&nbsp;

207
00:22:34,240 --> 00:22:40,560
Wider than link-local, but not being sent over&nbsp;
the WAN to another of the company’s sites. An&nbsp;&nbsp;

208
00:22:40,560 --> 00:22:46,080
organization-local multicast might reach these&nbsp;
devices, including the devices in another office&nbsp;&nbsp;

209
00:22:46,080 --> 00:22:51,920
connected with a WAN link. Finally, the global&nbsp;
scope can reach beyond the organization itself.&nbsp;&nbsp;

210
00:22:53,040 --> 00:22:58,000
Again, aside from interface-local and link-local&nbsp;
the actual boundaries of each scope needs&nbsp;&nbsp;

211
00:22:58,000 --> 00:23:03,200
to be defined by the network engineer, and&nbsp;
multicast configuration is way beyond the CCNA.&nbsp;&nbsp;

212
00:23:04,160 --> 00:23:08,720
So, that brief introduction to IPv6&nbsp;
multicast scopes should be enough for now.

213
00:23:10,720 --> 00:23:14,880
Before moving on to the next address type, I&nbsp;
want to point out something from the output&nbsp;&nbsp;

214
00:23:14,880 --> 00:23:21,920
of SHOW IPV6 INTERFACE. This is the same router&nbsp;
we configured the EUI-64 addresses on earlier,&nbsp;&nbsp;

215
00:23:21,920 --> 00:23:28,320
and we’re looking at its G0/0 interface. Here’s&nbsp;
what I want to show you, ‘joined group addresses’.&nbsp;&nbsp;

216
00:23:29,040 --> 00:23:32,640
These are the multicast groups that&nbsp;
R1 has joined on this interface.&nbsp;&nbsp;

217
00:23:33,600 --> 00:23:42,080
FF02::1, which multicast address is this? It’s&nbsp;
the ‘all nodes’ or ‘all hosts’ multicast address,&nbsp;&nbsp;

218
00:23:42,720 --> 00:23:51,360
and notice that the scope is link-local. R1’s&nbsp;
G0/0 is a host in the 2001:DB8::/64 subnet,&nbsp;&nbsp;

219
00:23:51,920 --> 00:23:55,760
so it joins the ‘all hosts’ multicast&nbsp;
group in that subnet automatically.&nbsp;&nbsp;

220
00:23:56,720 --> 00:24:04,000
It also joined multicast group FF02::2. What’s&nbsp;
that one? It’s the ‘all routers’ multicast&nbsp;&nbsp;

221
00:24:04,000 --> 00:24:10,320
group. R1 is a router, so it joins this&nbsp;
multicast group automatically also. It&nbsp;&nbsp;

222
00:24:10,320 --> 00:24:15,120
also joins this multicast group. This is&nbsp;
a special one, I’ll talk about this kind&nbsp;&nbsp;

223
00:24:15,120 --> 00:24:20,720
of multicast address in Day 33. Now let’s&nbsp;
move on to the next kind of IPv6 address.

224
00:24:22,480 --> 00:24:29,920
The next kind of address is anycast, which is&nbsp;
topic 1.9.d of the exam topics list. Anycast&nbsp;&nbsp;

225
00:24:29,920 --> 00:24:37,360
is a new feature of IPv6. Anycast messaging is&nbsp;
‘one-to-one-of-many’. To help you understand that,&nbsp;&nbsp;

226
00:24:37,360 --> 00:24:44,080
here are some helpful diagrams from Wikipedia.&nbsp;
The top 3 we just reviewed. Unicast at the top&nbsp;&nbsp;

227
00:24:44,080 --> 00:24:50,480
is one-to-one. Broadcast is one-to-all.&nbsp;
Multicast is one to many, or one to multiple.&nbsp;&nbsp;

228
00:24:51,280 --> 00:24:55,360
And anycast is one-to-one-of-many,&nbsp;
or you could say one-of-multiple.&nbsp;&nbsp;

229
00:24:56,480 --> 00:25:02,560
There are multiple possible destinations, but the&nbsp;
traffic is only sent to one. How does that work?&nbsp;&nbsp;

230
00:25:03,520 --> 00:25:08,560
Multiple routers are configured with the same&nbsp;
IPv6 address. They use a routing protocol&nbsp;&nbsp;

231
00:25:08,560 --> 00:25:13,280
to advertise the address. So, when hosts&nbsp;
send packets to that destination address,&nbsp;&nbsp;

232
00:25:13,840 --> 00:25:17,440
other routers will forward it to the nearest&nbsp;
router configured with that IP address.&nbsp;&nbsp;

233
00:25:18,560 --> 00:25:21,280
‘Nearest’ refers to the smallest&nbsp;
routing protocol metric.&nbsp;&nbsp;

234
00:25:22,640 --> 00:25:27,840
Unlike the other address types I introduced today,&nbsp;
there is no specified range for anycast addresses.&nbsp;&nbsp;

235
00:25:28,800 --> 00:25:33,760
Use a regular unicast address, for example&nbsp;
a global unicast or unique local address,&nbsp;&nbsp;

236
00:25:34,400 --> 00:25:41,360
and specify it as an anycast address. Here’s&nbsp;
an example. I configured it using /128,&nbsp;&nbsp;

237
00:25:41,360 --> 00:25:48,400
which is like a /32 IPv4 address. So, if I&nbsp;
activate a routing protocol on this interface,&nbsp;&nbsp;

238
00:25:48,400 --> 00:25:52,720
a host route to this specific address&nbsp;
will be advertised to other routers.

239
00:25:54,080 --> 00:26:00,720
Here’s that example in the CLI. Configure it like&nbsp;
a regular IPv6 address and add the word ANYCAST&nbsp;&nbsp;

240
00:26:00,720 --> 00:26:08,160
to the end of the command. Looking at SHOW IPV6&nbsp;
INTERFACE G0/0, it now has two IPv6 addresses.&nbsp;&nbsp;

241
00:26:09,360 --> 00:26:15,600
On top is the EUI-64 address we configured&nbsp;
earlier, as indicated by EUI at the end here.&nbsp;&nbsp;

242
00:26:16,720 --> 00:26:20,720
Under it is the anycast address we&nbsp;
just configured, indicated by ANY&nbsp;&nbsp;

243
00:26:20,720 --> 00:26:26,320
at the end. Note that, even though this is&nbsp;
an anycast address, it is still listed under&nbsp;&nbsp;

244
00:26:26,320 --> 00:26:31,920
‘global unicast addresses’ in this command,&nbsp;
but this ANY at the end tells us it is anycast.

245
00:26:33,600 --> 00:26:41,840
To finish up, here are two other IPv6 addresses.&nbsp;
First up, the unspecified IPv6 address of all 0s,&nbsp;&nbsp;

246
00:26:41,840 --> 00:26:46,400
usually just written as a double colon.&nbsp;
It can be used when a device doesn’t know&nbsp;&nbsp;

247
00:26:46,400 --> 00:26:54,320
its IPv6 address yet. IPv6 default routes are&nbsp;
configured to ::/0, which you’ll see in Day 33.&nbsp;&nbsp;

248
00:26:55,440 --> 00:26:59,200
The IPv4 equivalent of this address is 0.0.0.0.&nbsp;&nbsp;

249
00:27:00,400 --> 00:27:08,240
The last IPv6 address I want to introduce is&nbsp;
::1, so 127 bits of 0 followed by a single 1.&nbsp;&nbsp;

250
00:27:09,280 --> 00:27:14,880
This is the IPv6 loopback address. It’s used&nbsp;
to test the protocol stack on the local device.&nbsp;&nbsp;

251
00:27:16,000 --> 00:27:21,440
Messages sent to this address are processed within&nbsp;
the local device, but not sent to other devices.&nbsp;&nbsp;

252
00:27:22,720 --> 00:27:30,000
The IPv4 equivalent is the 127.0.0.0/8&nbsp;
address range. Instead of wasting a huge&nbsp;&nbsp;

253
00:27:30,000 --> 00:27:35,920
block of addresses for loopbacks, IPv6 uses just&nbsp;
a single address, which is much more efficient.

254
00:27:38,320 --> 00:27:42,080
That was a lot of information, I’m&nbsp;
sure you agree. Here’s what we covered.&nbsp;&nbsp;

255
00:27:43,040 --> 00:27:47,840
I showed you another way of configuring IPv6&nbsp;
addresses, by making the router automatically&nbsp;&nbsp;

256
00:27:47,840 --> 00:27:54,720
generate an interface ID using EUI-64.&nbsp;
We looked at some IPv6 address types.&nbsp;&nbsp;

257
00:27:55,680 --> 00:28:02,480
Global unicast addresses are public IPv6 addresses&nbsp;
which can be routed over the Internet. Remember&nbsp;&nbsp;

258
00:28:02,480 --> 00:28:08,960
the three sections of a global unicast address.&nbsp;
The global routing prefix, the subnet identifier,&nbsp;&nbsp;

259
00:28:08,960 --> 00:28:16,000
and the interface identifier. Then we looked at&nbsp;
unique local addresses. No registration is needed&nbsp;&nbsp;

260
00:28:16,000 --> 00:28:21,680
to use IPv6 addresses in this range. You’re free&nbsp;
to use them in your internal networks, but these&nbsp;&nbsp;

261
00:28:21,680 --> 00:28:27,600
addresses aren’t routed over the Internet.&nbsp;
Next we looked at link-local IPv6 addresses.&nbsp;&nbsp;

262
00:28:28,400 --> 00:28:33,600
These are automatically configured when you&nbsp;
enable IPv6 on an interface. You can do that&nbsp;&nbsp;

263
00:28:33,600 --> 00:28:38,320
by configuring another IPv6 address such as&nbsp;
a global unicast address on an interface,&nbsp;&nbsp;

264
00:28:39,040 --> 00:28:45,440
or you can just use the IPV6 ENABLE command on the&nbsp;
interface, which will enable IPv6 on the interface&nbsp;&nbsp;

265
00:28:45,440 --> 00:28:52,800
and automatically configure a link-local address.&nbsp;
Then we looked at IPv6 multicast addresses,&nbsp;&nbsp;

266
00:28:52,800 --> 00:28:58,320
including some common reserved multicast&nbsp;
addresses used for OSPF, RIP, and EIGRP.&nbsp;&nbsp;

267
00:28:59,440 --> 00:29:04,960
We also covered the different multicast scopes.&nbsp;
You don’t need to understand them to a deep level,&nbsp;&nbsp;

268
00:29:04,960 --> 00:29:12,080
but be familiar with the concept. We looked at a&nbsp;
few others, too. Specifically, Anycast addresses,&nbsp;&nbsp;

269
00:29:12,080 --> 00:29:16,400
which are used to send traffic to one destination&nbsp;
out of multiple possible destinations.&nbsp;&nbsp;

270
00:29:18,160 --> 00:29:23,920
Also, the unspecified IPv6 address which is all&nbsp;
0s and usually just written as a double colon,&nbsp;&nbsp;

271
00:29:24,560 --> 00:29:28,800
and the IPv6 loopback address,&nbsp;
which is simply written as ::1.&nbsp;&nbsp;

272
00:29:30,080 --> 00:29:35,280
This lesson had a lot of information, so go back&nbsp;
and learn each topic one by one if you need to.&nbsp;&nbsp;

273
00:29:36,320 --> 00:29:41,440
If you have any questions, feel free to ask.&nbsp;
However, I won’t give any detailed explanations of&nbsp;&nbsp;

274
00:29:41,440 --> 00:29:47,920
these topics beyond the scope of the CCNA. If you&nbsp;
want to go more in depth, Google is your friend!&nbsp;&nbsp;

275
00:29:49,120 --> 00:29:54,720
As always, watch until the end of today’s quiz&nbsp;
for a bonus question from Boson ExSim for CCNA,&nbsp;&nbsp;

276
00:29:55,280 --> 00:30:01,200
the best practice exams for the CCNA. Okay,&nbsp;
let’s move on to question 1 of today’s quiz.

277
00:30:04,000 --> 00:30:14,640
R1’s G0/1 interface has a MAC address of&nbsp;
0D2A.4FA3.00B1. What will G0/1’s IPv6 address&nbsp;&nbsp;

278
00:30:14,640 --> 00:30:24,400
be after issuing the following command?&nbsp;
IPV6 ADDRESS 2001:DB8:0:1::/64 EUI-64.&nbsp;&nbsp;

279
00:30:25,280 --> 00:30:29,360
Here are the options. Pause the video&nbsp;
here to find the correct answer.

280
00:30:34,400 --> 00:30:39,840
The answer is D. The 7th bit of the&nbsp;
MAC address has been inverted to a 1,&nbsp;&nbsp;

281
00:30:39,840 --> 00:30:46,720
changing the D in the MAC address to an F.&nbsp;
Also, FFFE has correctly been inserted into&nbsp;&nbsp;

282
00:30:46,720 --> 00:30:52,160
the middle of the MAC address to expand it&nbsp;
to 64 bits. Okay, let’s go to question 2.

283
00:30:54,160 --> 00:30:57,680
Which portion of the IPv6&nbsp;
address below is the global ID?&nbsp;&nbsp;

284
00:30:58,640 --> 00:31:01,760
Here are the options, the&nbsp;
red indicating the global ID.&nbsp;&nbsp;

285
00:31:02,640 --> 00:31:06,480
So, which option is correct? Pause&nbsp;
the video to find the correct answer.

286
00:31:10,960 --> 00:31:15,520
Okay, the correct answer is B. This&nbsp;
is a unique local IPv6 address.&nbsp;&nbsp;

287
00:31:16,400 --> 00:31:20,960
After FD, the next 40 bits,&nbsp;
10 hexadecimal characters,&nbsp;&nbsp;

288
00:31:20,960 --> 00:31:25,600
form the global ID. This portion of the&nbsp;
address should be randomly generated&nbsp;&nbsp;

289
00:31:25,600 --> 00:31:31,840
so that subnets don’t overlap in the case that&nbsp;
two companies merge. Okay, let’s go to question 3.

290
00:31:34,160 --> 00:31:38,880
R3 sent an IPv6 multicast message to&nbsp;
all other routers on the local subnet.&nbsp;&nbsp;

291
00:31:39,760 --> 00:31:45,920
What was the destination IPv6 address of&nbsp;
that message? Select the best answer. A,&nbsp;&nbsp;

292
00:31:45,920 --> 00:31:59,840
FF01::1. B, FF01::2. C, FF02::1. Or D, FF02::2.&nbsp;
Pause the video to think about your answer.

293
00:32:03,840 --> 00:32:11,760
The answer is D, FF02::2. First, look&nbsp;
at the scope of each option. FF01,&nbsp;&nbsp;

294
00:32:11,760 --> 00:32:17,680
as in A and B, is for interface-local, also&nbsp;
known as node-local, multicast messages.&nbsp;&nbsp;

295
00:32:18,880 --> 00:32:21,200
Those won’t be sent to&nbsp;
devices on the local subnet.&nbsp;&nbsp;

296
00:32:21,920 --> 00:32:29,680
For that, a link-local multicast message like&nbsp;
in C or D is used. However, FF02::1, as in C,&nbsp;&nbsp;

297
00:32:30,400 --> 00:32:37,840
is a message to ALL hosts on the local subnet,&nbsp;
not just routers. D is the correct answer. FF02::2&nbsp;&nbsp;

298
00:32:39,040 --> 00:32:44,080
is the link-local multicast address for&nbsp;
all routers. Okay, let’s go to question 4.

299
00:32:46,560 --> 00:32:51,280
What kind of IPv6 address is automatically&nbsp;
configured on an interface when the following&nbsp;&nbsp;

300
00:32:51,280 --> 00:32:59,520
command is used? Select the best answer. The&nbsp;
command is IPV6 ENABLE. A, unique local. B,&nbsp;&nbsp;

301
00:32:59,520 --> 00:33:09,840
node-local. C, link-local. Or D, EUI-64.&nbsp;
Pause the video to think about your answer.

302
00:33:11,040 --> 00:33:17,840
The answer is C, link-local. IPV6 ENABLE&nbsp;
enables IPv6 on the interface, and causes&nbsp;&nbsp;

303
00:33:17,840 --> 00:33:23,600
a link-local address to be automatically&nbsp;
configured. IPv6-enabled interfaces must&nbsp;&nbsp;

304
00:33:23,600 --> 00:33:28,800
have a link-local address, in addition to whatever&nbsp;
other IPv6 addresses you might configure on them.&nbsp;&nbsp;

305
00:33:30,240 --> 00:33:34,880
In creating the link-local address the&nbsp;
router does use the EUI-64 process,&nbsp;&nbsp;

306
00:33:35,440 --> 00:33:39,360
so some of you might have selected&nbsp;
D. However, that isn’t the correct&nbsp;&nbsp;

307
00:33:39,360 --> 00:33:44,880
name of the type of address, so D is not&nbsp;
correct. Okay, let’s go to question 5.

308
00:33:47,520 --> 00:33:51,840
The diagrams on the right visualize&nbsp;
different IPv6 message types.&nbsp;&nbsp;

309
00:33:52,480 --> 00:33:56,400
Match them with the correct message type.
Here are the message types.&nbsp;&nbsp;

310
00:33:56,960 --> 00:34:05,840
Unicast, broadcast, multicast, and anycast.&nbsp;
Pause the video to think about your answers.

311
00:34:07,040 --> 00:34:12,800
Let’s check the answers. Unicast is 3. From&nbsp;
the source to one specific destination.&nbsp;&nbsp;

312
00:34:14,000 --> 00:34:21,200
Broadcast is 2, from the source to all possible&nbsp;
destinations. Multicast is 4, from the source to&nbsp;&nbsp;

313
00:34:21,200 --> 00:34:27,920
multiple destinations. And anycast is 1, from the&nbsp;
source to one of multiple possible destinations.&nbsp;&nbsp;

314
00:34:29,040 --> 00:34:34,640
Okay, that’s all for the quiz. Let’s move on&nbsp;
to a bonus question from Boson ExSim for CCNA.

315
00:34:38,400 --> 00:34:43,440
Okay, here's today's Boson ExSim practice&nbsp;
question. Which of the following IPv6&nbsp;&nbsp;

316
00:34:43,440 --> 00:34:49,440
address prefixes are not routable? Select 2&nbsp;
choices. So what does that mean, not routable?&nbsp;&nbsp;

317
00:34:50,080 --> 00:34:55,920
It means if a router receives a packet and the&nbsp;
destination is in one of these prefix ranges,&nbsp;&nbsp;

318
00:34:55,920 --> 00:34:59,040
the router will not forward the&nbsp;
packet. It will not route the packet.&nbsp;&nbsp;

319
00:35:00,960 --> 00:35:10,960
So how about A? 2000::/3. This is not one of&nbsp;
the correct answer because this is the global&nbsp;&nbsp;

320
00:35:10,960 --> 00:35:21,760
unicast range, and global unicast addresses are&nbsp;
routable. How about B? FE80::/10. So, this is&nbsp;&nbsp;

321
00:35:21,760 --> 00:35:28,160
one of the correct answers. This address prefix&nbsp;
is not routable because this is a link-local&nbsp;&nbsp;

322
00:35:28,160 --> 00:35:36,480
prefix range, and link-local addresses can only&nbsp;
be used in the local link, the local subnet. Okay,&nbsp;&nbsp;

323
00:35:36,480 --> 00:35:43,760
next C and D. These are both in the unique local&nbsp;
range, and unique local addresses are routable.&nbsp;&nbsp;

324
00:35:43,760 --> 00:35:48,880
They cannot be routed over the public Internet,&nbsp;
your ISP will drop the traffic, but within&nbsp;&nbsp;

325
00:35:48,880 --> 00:35:53,840
internal networks these addresses can be used&nbsp;
freely and they can be routed between subnets.&nbsp;&nbsp;

326
00:35:56,080 --> 00:36:01,840
And then E and F. These are both multicast&nbsp;
addresses. You can tell by the FF at the&nbsp;&nbsp;

327
00:36:01,840 --> 00:36:11,760
beginning. But look at the scope, FF05 for E. That&nbsp;
is site-local. And FF02 for F. That is link-local.&nbsp;&nbsp;

328
00:36:12,880 --> 00:36:16,720
Site-local multicasts can be&nbsp;
routed outside of the local subnet,&nbsp;&nbsp;

329
00:36:16,720 --> 00:36:23,680
so E is not one of the answers. However F,&nbsp;
link-local, is one of the correct answers.&nbsp;&nbsp;

330
00:36:24,960 --> 00:36:29,280
Much like the link-local address,&nbsp;
the link-local scope of a multicast&nbsp;&nbsp;

331
00:36:29,280 --> 00:36:34,880
address also is not routable outside of&nbsp;
the local subnet, the local link. Okay,&nbsp;&nbsp;

332
00:36:34,880 --> 00:36:41,040
so let's see if my answers are correct. Down here&nbsp;
I will click on show answer, and they are correct.&nbsp;&nbsp;

333
00:36:42,160 --> 00:36:48,640
So, I will scroll down. And you can pause&nbsp;
here if you want to read Boson's explanation.&nbsp;&nbsp;

334
00:36:52,880 --> 00:36:53,840
And there's more down here.&nbsp;&nbsp;

335
00:36:57,200 --> 00:37:02,560
So, as you can see the explanation is quite&nbsp;
detailed, quite lengthy. These explanations&nbsp;&nbsp;

336
00:37:02,560 --> 00:37:07,360
are really one of the great things about Boson&nbsp;
ExSim. So I highly recommend, after taking one&nbsp;&nbsp;

337
00:37:07,360 --> 00:37:12,480
of the practice exams in Boson ExSim, read the&nbsp;
explanations for every single question. Both the&nbsp;&nbsp;

338
00:37:12,480 --> 00:37:16,800
ones you get right and the wrongs you get wrong.&nbsp;
It will really help you deepen your understanding&nbsp;&nbsp;

339
00:37:16,800 --> 00:37:23,760
of the topics and feel comfortable when you take&nbsp;
the real exam. Okay, so that's Boson ExSim for&nbsp;&nbsp;

340
00:37:23,760 --> 00:37:29,120
CCNA. If you want to get Boson ExSim for yourself,&nbsp;
follow the link in the video description.

341
00:37:32,640 --> 00:37:38,160
There are supplementary materials for this video.&nbsp;
There is a flashcard deck to use with the software&nbsp;&nbsp;

342
00:37:38,160 --> 00:37:45,760
‘Anki’. Note that I have added the tag ‘ipv6’ to&nbsp;
all flashcards for this video and Day 31’s video,&nbsp;&nbsp;

343
00:37:45,760 --> 00:37:50,880
so you can use Anki to specifically review&nbsp;
the IPv6 cards if you feel it is necessary.&nbsp;&nbsp;

344
00:37:51,840 --> 00:37:56,080
There was a lot to memorize in this video, so&nbsp;
I think the flashcards will be very helpful.&nbsp;&nbsp;

345
00:37:57,600 --> 00:38:01,680
There will also be a packet tracer practice&nbsp;
lab so you can get some hands-on practice.&nbsp;&nbsp;

346
00:38:02,240 --> 00:38:07,600
That will be in the next video. Sign up for my&nbsp;
mailing list via the link in the description,&nbsp;&nbsp;

347
00:38:07,600 --> 00:38:11,280
and I’ll send you all of the flashcards&nbsp;
and packet tracer lab files for the course.

348
00:38:12,960 --> 00:38:17,200
Before finishing today’s video I want&nbsp;
to thank my JCNP-level channel members.&nbsp;&nbsp;

349
00:38:17,760 --> 00:38:20,480
To join, please click the&nbsp;
‘Join’ button under the video.&nbsp;&nbsp;

350
00:38:21,760 --> 00:38:27,840
Thank you to Brandon, Magrathea, Njabulo,&nbsp;
Benjamin, Deepak, Tshepiso, Justin, Nil, Prakaash,&nbsp;&nbsp;

351
00:38:27,840 --> 00:38:34,880
Nasir, Erlison, Apogee, Wasseem, Marko, Florian,&nbsp;
Daming, Kone, Joshua, Jhilmar, Samil, Ed, Value,&nbsp;&nbsp;

352
00:38:35,520 --> 00:38:42,160
John, Funnydart, Scott, Hassan, Gerrard, Marek,&nbsp;
Velvijaykum, C Mohd, Johan, Mark, Yousif, Sidi,&nbsp;&nbsp;

353
00:38:42,160 --> 00:38:47,520
Boson Software, Charlesetta, Devin, Lito,&nbsp;
Yonatan, and Vance. Sorry if I pronounced&nbsp;&nbsp;

354
00:38:47,520 --> 00:38:53,120
your name incorrectly, but thank you so much for&nbsp;
your support. One of you is still displaying as&nbsp;&nbsp;

355
00:38:53,120 --> 00:38:57,600
Channel failed to load, if this is you please&nbsp;
let me know and I’ll see if YouTube can fix it.&nbsp;&nbsp;

356
00:38:58,720 --> 00:39:04,400
This is the list of JCNP-level members at the&nbsp;
time of recording by the way, October 19th 2020,&nbsp;&nbsp;

357
00:39:05,120 --> 00:39:09,760
if you signed up recently and your name isn’t&nbsp;
on here don’t worry, you’ll be in future videos.

358
00:39:11,520 --> 00:39:14,640
Thank you for watching. Please&nbsp;
subscribe to the channel,&nbsp;&nbsp;

359
00:39:14,640 --> 00:39:19,360
like the video, leave a comment, and share the&nbsp;
video with anyone else studying for the CCNA.&nbsp;&nbsp;

360
00:39:20,400 --> 00:39:26,000
If you want to leave a tip, check the links in the&nbsp;
description. I'm also a Brave verified publisher&nbsp;&nbsp;

361
00:39:26,000 --> 00:39:32,640
and accept BAT, or Basic Attention Token, tips&nbsp;
via the Brave browser. That's all for now.
1
00:00:01,040 --> 00:00:07,140
Welcome to Jeremy’s IT Lab. This is a free,
complete course for the CCNA. If you like

2
00:00:07,140 --> 00:00:12,099
these videos, please subscribe to follow along
with the series. Also, please like and leave

3
00:00:12,099 --> 00:00:16,590
a comment, and share the video to help spread
this free series of videos. Thanks for your

4
00:00:16,590 --> 00:00:18,470
help.

5
00:00:18,470 --> 00:00:23,930
Today we will finish our studies of OSPF for
this course. Already we’ve covered OSPF

6
00:00:23,930 --> 00:00:30,590
in much greater depth than RIP and EIGRP.
If you continue your studies to the CCNP and

7
00:00:30,590 --> 00:00:36,300
CCIE level, you’ll see that there is much,
much more depth to OSPF. However, for the

8
00:00:36,300 --> 00:00:42,360
purpose of this CCNA course we’ll finish
up our studies with this video. Once more,

9
00:00:42,360 --> 00:00:48,100
here is exam topic 3.4, which covers OSPF.
After today’s video, you’ll be more than

10
00:00:48,100 --> 00:00:55,440
ready to take on OSPF questions on the CCNA
exam. So let’s get started.

11
00:00:55,440 --> 00:01:01,310
First let’s look at what we’ll cover in
this video. First up, OSPF network types.

12
00:01:01,310 --> 00:01:05,970
These refer to the different kinds of connections
between OSPF routers, and how those connections

13
00:01:05,970 --> 00:01:13,420
influence OSPF’s behavior. Next up we will
cover OSPF neighbor and adjacency requirements.

14
00:01:13,420 --> 00:01:18,130
In day 2 we covered the process routers use
to become OSPF neighbors, however we didn’t

15
00:01:18,130 --> 00:01:23,299
actually look at the requirements for a successful
neighbor adjacency. Then we’ll take a look

16
00:01:23,299 --> 00:01:28,850
at a few of the LSA, Link State Advertisement,
types. There are many, but you only need to

17
00:01:28,850 --> 00:01:34,340
be aware of a few for the CCNA. Make sure
to stick around until the end of the quiz

18
00:01:34,340 --> 00:01:41,690
for a bonus question from Boson ExSim for
CCNA, the best practice exams for the CCNA.

19
00:01:41,690 --> 00:01:45,869
Before we get into those topics I want to
take a minute to explain loopback interfaces

20
00:01:45,869 --> 00:01:51,380
a little bit. In previous videos I’ve mentioned
them, and you’ve already practiced configuring

21
00:01:51,380 --> 00:01:57,710
them in the past few lab videos, but let me
explain them a little more. A loopback interface

22
00:01:57,710 --> 00:02:03,780
is a virtual interface in the router. You
already know that. It is always up/up (unless

23
00:02:03,780 --> 00:02:09,670
you manually shut it down). So, this means
that the status of a loopback interface isn’t

24
00:02:09,670 --> 00:02:15,239
dependent on a physical interface. Physical
interfaces can have hardware problems and

25
00:02:15,239 --> 00:02:21,049
fail, however that can’t happen to a loopback
interface unless the router itself fails.

26
00:02:21,049 --> 00:02:28,079
So, it provides a consistent IP address that
can be used to reach and identify the router.

27
00:02:28,079 --> 00:02:33,969
Sometimes you need to send traffic directly
to a router. Let’s says R1 has no loopback

28
00:02:33,969 --> 00:02:41,310
interface at the moment, and R4 receives a
packet destined for R1 at 10.0.13.1, the IP

29
00:02:41,310 --> 00:02:47,609
address of its G1/0 interface. It might forward
it to R1 like this.

30
00:02:47,609 --> 00:02:53,260
What if R1’s G1/0 interface goes down for
some reason? If R4 receives a packet destined

31
00:02:53,260 --> 00:03:00,330
for R1 at 10.0.13.1, it will not be able to
send the packet to R1.

32
00:03:00,330 --> 00:03:07,309
How about if R1 has a loopback interface,
1.1.1.1, and that is used to identify R1 instead

33
00:03:07,309 --> 00:03:14,599
of 10.0.13.1? Even if a physical interface
fails, when R4 receives a packet destined

34
00:03:14,599 --> 00:03:20,989
for R1’s loopback interface it will still
be able to send the packet to R1. So, that’s

35
00:03:20,989 --> 00:03:25,839
why it’s a good idea to configure a loopback
interface on a router. It provides an interface

36
00:03:25,839 --> 00:03:30,829
with an IP address that is always up, and
can consistently be used to identify and reach

37
00:03:30,829 --> 00:03:33,079
the router.

38
00:03:33,079 --> 00:03:38,340
Now let’s move on to look at the different
OSPF network types. The OSPF network type

39
00:03:38,340 --> 00:03:44,089
refers to the type of connection between OSPF
neighbors, and the type influences how OSPF

40
00:03:44,089 --> 00:03:49,719
behaves in some ways. The most common type
of connection in modern networks is Ethernet,

41
00:03:49,719 --> 00:03:56,579
of course. There are three main OSPF network
types. The first is the Broadcast network

42
00:03:56,579 --> 00:04:04,749
type, which is enabled by default on Ethernet
and FDDI interfaces. FDDI is an old technology

43
00:04:04,749 --> 00:04:09,019
and you don’t need to spend time learning
about it. However, I will include it in the

44
00:04:09,019 --> 00:04:13,799
flashcards for OSPF network types, you might
want to remember this one fact about it for

45
00:04:13,799 --> 00:04:21,880
the exam, that the OSPF broadcast network
type is used by default. The next is the Point-to-point

46
00:04:21,880 --> 00:04:28,350
network type, which is enabled by default
on PPP and HDLC interfaces. You don’t need

47
00:04:28,350 --> 00:04:34,270
to learn PPP and HDLC in depth for the current
CCNA exam, but I will mention them briefly

48
00:04:34,270 --> 00:04:40,910
later in this video. The last main network
type is Non-broadcast. It is enabled by default

49
00:04:40,910 --> 00:04:46,950
on Frame Relay and X.25 interfaces. Again,
you don’t need to learn about these interface

50
00:04:46,950 --> 00:04:51,310
types for the exam, but I will include them
in the flashcards for this video regarding

51
00:04:51,310 --> 00:04:59,180
OSPF network types. Take a look at the OSPF
exam topics again. 3.4b mentions the Point-to-point

52
00:04:59,180 --> 00:05:05,790
network type, and 3.4c mentions the Broadcast
network type. So, those are the network types

53
00:05:05,790 --> 00:05:07,490
we will focus on now.

54
00:05:07,490 --> 00:05:14,060
First up, the broadcast network type. As I
just mentioned, this network type is enabled

55
00:05:14,060 --> 00:05:21,190
on Ethernet and FDDI interfaces by default.
For this course, our main focus is Ethernet,

56
00:05:21,190 --> 00:05:25,400
and in the previous videos all of the OSPF
connections we’ve looked at have used the

57
00:05:25,400 --> 00:05:31,020
Broadcast network type, because they are all
Ethernet connections. In the network diagram

58
00:05:31,020 --> 00:05:36,390
above, these are all Ethernet connections,
remember ‘G’ means ‘Gigabit Ethernet’,

59
00:05:36,390 --> 00:05:39,960
and therefore these connections between the
routers are all using the Broadcast network

60
00:05:39,960 --> 00:05:46,701
type. Now let’s cover a few characteristics
of the Broadcast network type. First up, routers

61
00:05:46,701 --> 00:05:51,950
dynamically discover neighbors by sending
and listening for OSPF Hello messages using

62
00:05:51,950 --> 00:05:58,890
the multicast address 224.0.0.5. You already
know this from the previous video when I showed

63
00:05:58,890 --> 00:06:04,700
you how OSPF routers become neighbors. However,
not all network types dynamically discover

64
00:06:04,700 --> 00:06:09,720
neighbors like this. We won’t cover this
network type, but with the ‘Non-broadcast’

65
00:06:09,720 --> 00:06:17,990
network type you must manually configure neighbors.
Okay, next point. A DR, designated router,

66
00:06:17,990 --> 00:06:24,780
and BDR, backup designated router, must be
elected on each subnet. However in cases like

67
00:06:24,780 --> 00:06:32,190
the G1/0 interface of R1, R3, R4, and R5 where
there are no OSPF neighbors, there is just

68
00:06:32,190 --> 00:06:39,900
a DR, no BDR. Routers which aren’t the DR
or BDR for the subnet become a ‘DROther’.

69
00:06:39,900 --> 00:06:45,901
I’ve heard a few ways to pronounce that,
but I say ‘D R Other’. So, let’s look

70
00:06:45,901 --> 00:06:53,330
at the network above. Each subnet needs a
DR. These subnets are easy, there are no OSPF

71
00:06:53,330 --> 00:07:00,670
neighbors so each router becomes the DR for
the subnet. How about the 192.168.1.0/30 subnet

72
00:07:00,670 --> 00:07:07,430
between R1 and R2? In the next slide I’ll
show you how the DR is elected, but let’s

73
00:07:07,430 --> 00:07:17,470
say R2 is the DR. So, R1 becomes the BDR for
the segment. How about the 192.168.2.0/29

74
00:07:17,470 --> 00:07:27,180
subnet that R2, R3, R4, and R5 connect to?
For example, R5 might be the DR, R4 the BDR,

75
00:07:27,180 --> 00:07:33,740
and then R2 and R3 become DROthers. You’re
probably wondering how these elections work,

76
00:07:33,740 --> 00:07:38,990
and what the purpose of the DR and BDR is.
Well, let’s get into it.

77
00:07:38,990 --> 00:07:46,330
So, here’s how the DR and BDR are elected.
There is an order of priority. First up, the

78
00:07:46,330 --> 00:07:51,970
router with the highest OSPF interface priority
in the subnet becomes the DR for the segment.

79
00:07:51,970 --> 00:07:57,150
However, all interfaces have the same priority
by default, so then the routers compare their

80
00:07:57,150 --> 00:08:04,510
OSPF router IDs. The router with the highest
OSPF router ID wins. ’First place’ in

81
00:08:04,510 --> 00:08:10,430
the election becomes the DR for the subnet,
and ‘second place’ becomes the BDR. The

82
00:08:10,430 --> 00:08:16,950
default OSPF interface priority is 1 on all
interfaces. So as I said, by default the router

83
00:08:16,950 --> 00:08:21,360
with the highest router ID will become the
DR for the segment.

84
00:08:21,360 --> 00:08:29,710
Here’s some partial output from SHOW IP
OSPF INTERFACE G0/0 on R5. Notice the router

85
00:08:29,710 --> 00:08:35,569
ID. I configured a loopback interface on each
router, and the IP address of the loopback

86
00:08:35,569 --> 00:08:43,399
interface became the router ID. State DR,
and the priority is the default of 1. R5 has

87
00:08:43,399 --> 00:08:50,089
the highest router ID of the routers connected
to the 192.168.2.0/29 subnet, so it became

88
00:08:50,089 --> 00:08:58,100
the DR. Down here the DR, R5 itself, and BDR,
R4, for the segment are listed, including

89
00:08:58,100 --> 00:09:03,379
their router IDs and the interface IP address
in the subnet.

90
00:09:03,379 --> 00:09:08,009
And here’s the same output for R2. The main
difference I want to point out is the state

91
00:09:08,009 --> 00:09:14,990
of DROTHER. Now, what if I want to make R2
the DR for the segment instead of R5? Let’s

92
00:09:14,990 --> 00:09:19,069
see how to change the OSPF interface priority.

93
00:09:19,069 --> 00:09:24,610
The command to change the OSPF priority of
an interface is IP OSPF PRIORITY, followed

94
00:09:24,610 --> 00:09:33,681
by the priority, with a range of 0 to 255.
I changed it to the maximum, 255, on R2. As

95
00:09:33,681 --> 00:09:40,490
a side note, if you set the OSPF interface
priority to 0, the router CANNOT be the DR/BDR

96
00:09:40,490 --> 00:09:46,720
for the subnet, no matter what. So, let’s
check if R2 has become the DR for the segment.

97
00:09:46,720 --> 00:09:53,800
That’s strange. R2’s state is still DROTHER,
even though it has the highest priority. Why

98
00:09:53,800 --> 00:09:59,900
is that? It’s because the DR/BDR election
is ‘non-preemptive’. You’ll learn more

99
00:09:59,910 --> 00:10:05,559
about ‘preemption’ in Day 29 when we learn
about First-Hop Redundancy Protocols. But

100
00:10:05,559 --> 00:10:11,100
what ‘non-preemptive’ means is that once
the DR/BDR are selected they will keep their

101
00:10:11,100 --> 00:10:18,800
role until OSPF is reset, the interface fails/is
shut down, etc. So, although this is a bad

102
00:10:18,800 --> 00:10:24,610
idea to do in a live network, I’ll go reset
the OSPF process on R5 and let’s see what

103
00:10:24,610 --> 00:10:26,000
happens.

104
00:10:26,000 --> 00:10:33,740
So, I reset the OSPF process on R5, and you
can see that all of its neighbors went DOWN.

105
00:10:33,740 --> 00:10:39,540
Then R2 and R4 returned to the FULL state,
but not R3. There’s an important reason

106
00:10:39,540 --> 00:10:45,550
for that, you’ll learn soon. Then I used
the SHOW IP OSPF NEIGHBOR command to view

107
00:10:45,550 --> 00:10:50,920
the neighbor state of R5’s neighbors. Look
here, there are two important points about

108
00:10:50,920 --> 00:10:59,220
OSPF we can learn by analyzing this section.
First, R4 became the DR, not R2. R2 became

109
00:10:59,220 --> 00:11:06,430
the BDR. What can we learn from that? We can
learn that when the DR goes down, the BDR

110
00:11:06,430 --> 00:11:14,309
becomes the new DR. Then an election is held
for the next BDR. R4, which was the BDR, instantly

111
00:11:14,309 --> 00:11:19,300
stepped up to be the new DR, and then an election
was held between the other routers for the

112
00:11:19,300 --> 00:11:28,959
next BDR. R2 has the highest priority, 255,
so it became the BDR. Okay, next point. R3

113
00:11:28,959 --> 00:11:36,880
is a DROther, and is stable in the 2-way state.
R5 became a DROther also, by the way. What

114
00:11:36,880 --> 00:11:42,420
can we learn from this? We can learn that
DROthers will only move to the FULL state

115
00:11:42,420 --> 00:11:49,691
with the DR and BDR of the subnet. The neighbor
state with other DROthers will be 2-way. This

116
00:11:49,691 --> 00:11:55,339
gives us a hint to the purpose of the DR and
BDR, which I’ll cover in the next slide.

117
00:11:55,339 --> 00:12:01,410
But remember these two points, that the BDR
becomes the DR if the current DR is removed,

118
00:12:01,410 --> 00:12:06,999
even if it doesn’t have the highest priority.
Also that DROthers don’t form full adjacencies

119
00:12:06,999 --> 00:12:12,040
with other DROthers, they remain in the 2-way
state.

120
00:12:12,040 --> 00:12:17,779
To repeat, in the broadcast network type,
routers will only form a full OSPF adjacency

121
00:12:17,779 --> 00:12:24,720
with the DR and BDR of the segment. Therefore,
routers only exchange LSAs with the DR and

122
00:12:24,720 --> 00:12:32,500
BDR. DROthers will not exchange LSAs with
each other. Remember that, in the 2-way state,

123
00:12:32,500 --> 00:12:37,110
routers haven’t shared LSAs with each other
yet. All routers will still have the same

124
00:12:37,110 --> 00:12:43,160
LSDB, but this reduces the amount of LSAs
flooding the network. Let’s see an example.

125
00:12:43,160 --> 00:12:49,350
If 6 routers are connected to the same segment
and they all share LSAs with each other, it

126
00:12:49,350 --> 00:12:55,139
will end up like this. A whole lot of LSAs
flooding and congesting the network. How about

127
00:12:55,139 --> 00:12:58,829
if we use a DR and BDR?

128
00:12:58,829 --> 00:13:04,029
If routers only exchange LSAs with the DR
and BDR, as you can see the number of LSAs

129
00:13:04,029 --> 00:13:09,639
flooding around the network is reduced. To
be honest, on modern routers it’s probably

130
00:13:09,639 --> 00:13:15,610
not a big deal in most cases, but it still
does help reduce unnecessary network traffic.

131
00:13:15,610 --> 00:13:20,839
By the way, when routers need to send messages
to the DR and BDR they use multicast address

132
00:13:20,839 --> 00:13:29,059
224.0.0.6. This is different than the OSPF
‘all routers’ multicast address of 224.0.0.5.

133
00:13:29,059 --> 00:13:36,130
Here’s a quick review of the OSPF neighbor
process. Remember that I said that these first

134
00:13:36,130 --> 00:13:41,189
steps involve becoming neighbors? So, when
routers reach this point in the process, they

135
00:13:41,189 --> 00:13:47,699
are OSPF neighbors. Connections between two
DROthers stop at this point. Routers will

136
00:13:47,699 --> 00:13:54,329
only continue on to exchange LSAs and form
a full OSPF adjacency with the DR and BDR.

137
00:13:54,329 --> 00:14:00,000
So, to summarize, this means that the DR and
BDR form a full adjacency with ALL routers

138
00:14:00,000 --> 00:14:06,000
in the subnet, including the DROthers. And
DROthers will form a FULL adjacency only with

139
00:14:06,000 --> 00:14:07,860
the DR/BDR.

140
00:14:07,860 --> 00:14:15,690
I showed you this command, SHOW IP OSPF INTERFACE
BRIEF, before. Here I did it on R3, which

141
00:14:15,690 --> 00:14:23,079
is a DROther. Notice the neighbor count on
its G0/0 interface. F indicates the number

142
00:14:23,079 --> 00:14:31,320
of full adjacencies, and C indicates the total
count of neighbors. So, R3 has two Full adjacencies,

143
00:14:31,320 --> 00:14:39,050
with R2 and R4. But it has three total neighbors,
R2, R4 and R5.

144
00:14:39,050 --> 00:14:46,170
For more detail, here is SHOW IP OSPF INTERFACE
G0/0 on R3. It gives the same information

145
00:14:46,170 --> 00:14:52,639
here, ‘Neighbor Count is 3’, that’s
R3’s total number of OSPF neighbors. ‘Adjacent

146
00:14:52,639 --> 00:14:58,470
neighbor count is 2’, those are the neighbors
R3 has formed a Full adjacency with. And below

147
00:14:58,470 --> 00:15:06,290
it, its two adjacent neighbors are listed.
R2, the BDR, and R4, the DR. Okay, that’s

148
00:15:06,290 --> 00:15:09,519
enough for the Broadcast network type for
now, let’s move on.

149
00:15:09,519 --> 00:15:15,540
Now let’s take a look at the ‘point-to-point’
network type. Notice that I changed the connection

150
00:15:15,540 --> 00:15:22,130
between R1 and R2 to a ‘serial’ connection.
I will give a very brief overview of serial

151
00:15:22,130 --> 00:15:26,189
connections in the next slide, but first let
me introduce the basics of the point-to-point

152
00:15:26,189 --> 00:15:34,350
connection type. This network type is enabled
on serial interfaces using the PPP or HDLC

153
00:15:34,350 --> 00:15:41,629
encapsulations by default. PPP and HDLC are
both Layer 2 encapsulations, similar to Ethernet,

154
00:15:41,629 --> 00:15:47,011
except they are used on serial connections.
Same as the Broadcast network type, routers

155
00:15:47,011 --> 00:15:53,129
dynamically discover neighbors by sending/listening
for OSPF Hello messages using multicast address

156
00:15:53,129 --> 00:16:02,589
224.0.0.5. However, here’s a difference.
A DR and BDR are NOT elected. Why is that?

157
00:16:02,589 --> 00:16:07,420
As the network type name implies, these encapsulations
are used for ‘point-to-point’ connections

158
00:16:07,420 --> 00:16:14,600
between two routers. Therefore there is no
point in electing a DR and BDR. The two routers

159
00:16:14,600 --> 00:16:19,670
will form a Full adjacency with each other,
without the need to elect a DR and BDR.

160
00:16:19,670 --> 00:16:25,949
Okay, let me give a very brief overview of
serial connections. I say very brief, because

161
00:16:25,949 --> 00:16:31,549
serial connections are an old technology which
isn’t very common anymore. They still exist,

162
00:16:31,549 --> 00:16:36,170
but Ethernet is much more dominant. In fact,
serial connections have been removed from

163
00:16:36,170 --> 00:16:42,540
the exam topics except for the OSPF ‘point-to-point’
network type. So, although you won’t be

164
00:16:42,540 --> 00:16:48,739
tested directly on knowledge of serial interfaces,
you should have a basic understanding of them.

165
00:16:48,739 --> 00:16:53,449
This photo shows some serial interfaces and
cables. Notice that both the ports and the

166
00:16:53,449 --> 00:16:57,290
cables are different than Ethernet cables.

167
00:16:57,290 --> 00:17:03,239
To explain serial connections, I’ll show
you how I configure R1’s S2/0 interface.

168
00:17:03,239 --> 00:17:07,430
You don’t need a deep understanding of this
material, but at least know the basics I introduce

169
00:17:07,430 --> 00:17:14,829
here. First up, one side of a serial connection
functions as DCE, which stands for Data Communications

170
00:17:14,829 --> 00:17:20,920
Equipment. The other side functions as DTE,
which stands for Data Terminal Equipment.

171
00:17:20,920 --> 00:17:29,040
Why is this significant? Well, on serial connections,
the DCE side needs to specify the clock rate,

172
00:17:29,040 --> 00:17:35,390
which is the speed, of the connection. So,
in this case R1 has the DCE side of the cable

173
00:17:35,390 --> 00:17:40,540
and therefore needs to tell R2 what speed
the connection will operate at. The command

174
00:17:40,540 --> 00:17:45,311
is ‘clock rate’, and then you can see
some standard values that can be used. All

175
00:17:45,311 --> 00:17:51,010
of these are in bits per second, by the way.
I configured a clock rate of 64000 bits per

176
00:17:51,010 --> 00:17:58,710
second, aka 64 kilobits per second, added
an IP address, and used NO SHUTDOWN. Here’s

177
00:17:58,710 --> 00:18:04,440
an important point. Ethernet interfaces use
the SPEED command to configure the interface’s

178
00:18:04,440 --> 00:18:09,340
operating speed. Serial interfaces use the
CLOCK RATE command.

179
00:18:09,340 --> 00:18:17,081
Let’s continue. I checked the interface
with SHOW INTERFACE S2/0. Notice that the

180
00:18:17,081 --> 00:18:24,210
encapsulation is HDLC. On Cisco routers, the
default encapsulation on a serial interface

181
00:18:24,210 --> 00:18:32,360
is HDLC. Actually, it’s Cisco’s own version
called ‘cHDLC’, Cisco HDLC, but it displays

182
00:18:32,360 --> 00:18:39,210
as just ‘HDLC’ in the CLI. Once again,
this is a Layer 2 encapsulation, like Ethernet,

183
00:18:39,210 --> 00:18:45,190
except it’s used on serial connections.
Here’s the structure of an HDLC frame, taken

184
00:18:45,190 --> 00:18:49,740
from Wikipedia. You don’t need to learn
this, but pause the video if you want to take

185
00:18:49,740 --> 00:18:55,850
a look. One thing to note is that there is
no MAC address field. So, MAC addresses actually

186
00:18:55,850 --> 00:19:01,561
aren’t used. I mentioned the PPP encapsulation
too, let’s see how to configure the router

187
00:19:01,561 --> 00:19:10,110
to use that encapsulation instead. Simply
use the ENCAPSULATION PPP command on the interface.

188
00:19:10,110 --> 00:19:14,190
Note that if you change the encapsulation,
it must match on both ends or the interface

189
00:19:14,190 --> 00:19:19,490
will go down. If they use two different encapsulations
it’s like they are speaking two different

190
00:19:19,490 --> 00:19:26,460
languages, they won’t be able to communicate.
I did SHOW INTERFACE S2/0 again, and you can

191
00:19:26,460 --> 00:19:32,690
see the encapsulation has changed to PPP.
I did the same on R2, by the way, so the interface

192
00:19:32,690 --> 00:19:34,270
is up.

193
00:19:34,270 --> 00:19:41,000
Here’s the configuration I did on R1. The
SERIAL RESTART-DELAY 0 command was there by

194
00:19:41,000 --> 00:19:47,230
default, so I only configured the clock rate,
encapsulation, and IP address. And here it

195
00:19:47,230 --> 00:19:53,460
is on R2, with no CLOCK RATE command because
it is the DTE end.

196
00:19:53,460 --> 00:19:57,920
Now you’re probably wondering, how can I
tell which side is DCE and which is DTE? Well,

197
00:19:57,920 --> 00:20:05,450
to show you I had to recreate this connection
in Packet Tracer. GNS3, which I use to make

198
00:20:05,450 --> 00:20:10,160
these lectures, doesn’t handle physical,
Layer 1, things like this well, so both sides

199
00:20:10,160 --> 00:20:17,030
display as DCE. Anyway, the command to view
it is SHOW CONTROLLERS, followed by the interface

200
00:20:17,030 --> 00:20:26,170
ID. As you can see R1 is the DCE side, and
it has the clock rate of 64,000 bits I configured.

201
00:20:26,170 --> 00:20:31,750
I used the same command on R2, and you can
see it is the DTE side, and it has detected

202
00:20:31,750 --> 00:20:36,310
the Tx, transmit, and Rx, receive clocks from
R1.

203
00:20:36,310 --> 00:20:42,610
So, that’s a very basic overview of serial
connections. Here’s a summary of what you

204
00:20:42,610 --> 00:20:49,300
should know. The default encapsulation on
a serial interface is HDLC. You can configure

205
00:20:49,300 --> 00:20:56,170
them to use PPP encapsulation instead with
this command: ENCAPSULATION PPP. If you change

206
00:20:56,170 --> 00:21:01,650
the encapsulation on one side, remember to
change it on the other too! One side of the

207
00:21:01,650 --> 00:21:08,430
connection is DCE and the other is DTE. You
can identify which side is DCE and which is

208
00:21:08,430 --> 00:21:15,460
DTE with this command: SHOW CONTROLLERS, followed
by the interface ID. Finally, remember to

209
00:21:15,460 --> 00:21:20,950
configure the clock rate, the speed of the
connection, on the DCE side with this command:

210
00:21:20,950 --> 00:21:24,420
CLOCK RATE, followed by the clock rate in
bits per second.

211
00:21:24,420 --> 00:21:30,170
Let’s return to the OSPF point-to-point
network type. Here’s the output of SHOW

212
00:21:30,170 --> 00:21:38,000
IP OSPF NEIGHBOR on R2. Notice that R2 has
a full adjacency with R1, but instead of DR,

213
00:21:38,000 --> 00:21:43,760
BDR, or DROTHER, a dash is displayed. This
is because the point-to-point network type

214
00:21:43,760 --> 00:21:48,560
doesn’t use DRs or BDRs, as I mentioned
before.

215
00:21:48,560 --> 00:21:53,770
Final point on this topic, you can manually
configure the network type an interface uses.

216
00:21:53,770 --> 00:22:00,030
The command is IP OSPF NETWORK, followed by
the network type. You might notice one more

217
00:22:00,030 --> 00:22:05,280
type that I haven’t mentioned, that is the
‘point-to-multipoint’ network type. It’s

218
00:22:05,280 --> 00:22:10,000
more of a ‘sub-type’. You don’t need
to learn about it for the CCNA, but feel free

219
00:22:10,000 --> 00:22:15,040
to do a Google search if you’re curious.
So, why would you change the OSPF network

220
00:22:15,040 --> 00:22:20,110
type? For example, if two routers are directly
connected with an Ethernet link, like in the

221
00:22:20,110 --> 00:22:26,150
diagram below, there is no need for a DR/BDR.
You can configure the point-to-point network

222
00:22:26,150 --> 00:22:31,460
type in this case, although you don’t have
to. Note that not all network types work on

223
00:22:31,460 --> 00:22:37,341
all link types. For example, a serial link
cannot use the broadcast network type. This

224
00:22:37,341 --> 00:22:42,040
is because serial links don’t support Layer
2 broadcast frames, which is necessary for

225
00:22:42,040 --> 00:22:43,930
the broadcast network type.

226
00:22:43,930 --> 00:22:50,550
Okay here’s a chart for quick review. One
thing I didn’t bring up yet in this video

227
00:22:50,550 --> 00:22:56,050
is that point-to-point networks use the same
default timers as broadcast networks. The

228
00:22:56,050 --> 00:23:01,590
default Hello timer is 10 seconds and the
default Dead timer is 40 seconds. You don’t

229
00:23:01,590 --> 00:23:05,490
have to learn this network type, but just
for your information the non-broadcast network

230
00:23:05,490 --> 00:23:12,090
type uses a default Hello timer of 30 seconds
and Dead timer of 120 seconds. Okay, let’s

231
00:23:12,090 --> 00:23:14,450
move on.

232
00:23:14,450 --> 00:23:20,170
Now let’s move on to look at some requirements
of OSPF neighbor relationships. Usually, routers

233
00:23:20,170 --> 00:23:24,220
will become OSPF neighbors without issue,
but I will introduce a few of the problems

234
00:23:24,220 --> 00:23:30,710
that can occur. I already mentioned some of
these in previous videos, but let’s review.

235
00:23:30,710 --> 00:23:36,090
First requirement, the area number must match
for two routers to become OSPF neighbors.

236
00:23:36,090 --> 00:23:43,120
We’ll use this small topology of two routers
to demonstrate. Here’s R1’s OSPF config.

237
00:23:43,120 --> 00:23:52,070
OSPF is enabled on G0/0 in area 0. However,
R2’s G0/0 is in area 1. When I enter SHOW

238
00:23:52,070 --> 00:23:59,270
IP OSPF NEIGHBOR on both devices, they have
no OSPF neighbors. Let’s fix the issue.

239
00:23:59,270 --> 00:24:04,530
I changed the network command on R2 to use
area 0. As you can see, they successfully

240
00:24:04,530 --> 00:24:06,350
became OSPF neighbors.

241
00:24:06,350 --> 00:24:12,250
So, that’s the first rule. For two routers
to become OSPF neighbors, they must be in

242
00:24:12,250 --> 00:24:18,810
the same area. But we already covered that
before. Next rule. The interfaces must be

243
00:24:18,810 --> 00:24:24,460
in the same subnet to become OSPF neighbors.
We covered this one before too, but let me

244
00:24:24,460 --> 00:24:27,480
demonstrate it.

245
00:24:27,480 --> 00:24:33,700
Notice that R1 and R2’s G0/0 interfaces
are now in different subnets. I activated

246
00:24:33,700 --> 00:24:41,020
OSPF on both of the interfaces. But when I
check for OSPF neighbors, they don’t come up.

247
00:24:41,020 --> 00:24:45,740
I once again configured R2’s interface in
the same subnet as R1, and also made sure

248
00:24:45,750 --> 00:24:52,490
to edit the network command so that OSPF is
once again activated on G0/0. Now R1 and R2

249
00:24:52,490 --> 00:24:55,640
are OSPF neighbors again.

250
00:24:55,640 --> 00:25:01,620
Next up, here’s one we haven’t covered
yet. The OSPF process must not be shutdown.

251
00:25:01,620 --> 00:25:06,960
You can actually ‘shutdown’ the OSPF process
on the router like an interface. This disables

252
00:25:06,960 --> 00:25:12,660
OSPF operation, without removing the OSPF
configurations. Let’s check it out.

253
00:25:12,660 --> 00:25:20,150
Here’s how to do it. From OSPF configuration
mode on R2, I used the SHUTDOWN command. Then

254
00:25:20,150 --> 00:25:25,510
a message is displayed indicating that its
neighbor R1 has gone from FULL to DOWN, and

255
00:25:25,510 --> 00:25:32,110
no neighbors are displayed in SHOW IP OSPF
NEIGHBOR. Then I enable OSPF again with NO

256
00:25:32,110 --> 00:25:36,990
SHUTDOWN, A message indicates the neighbor
is back up, and you can see it in SHOW IP

257
00:25:36,990 --> 00:25:39,820
OSPF NEIGHBOR.

258
00:25:39,820 --> 00:25:44,490
That one won’t be a problem unless you manually
shutdown the OSPF process, so usually it’s

259
00:25:44,490 --> 00:25:50,000
not a problem. Next requirement, the OSPF
router IDs must be unique.

260
00:25:50,000 --> 00:25:56,870
Let’s see how that works. I haven’t configured
the router IDs of R1 and R2, and I also haven’t

261
00:25:56,870 --> 00:26:01,940
configured any loopback interfaces, so each
router has selected its G0/0 IP address as

262
00:26:01,940 --> 00:26:13,650
its router ID, 192.168.1.1 for R1 and 192.168.1.2
for R2. So, I configured 192.168.1.1 as R2’s

263
00:26:13,650 --> 00:26:18,690
router ID, the same as R1’s. As I have shown
you before, you need to reload the router

264
00:26:18,690 --> 00:26:27,010
or use CLEAR IP OSPF PROCESS for the new router
ID to take effect. So I used CLEAR IP OSPF

265
00:26:27,010 --> 00:26:32,580
PROCESS. Immediately the neighbor goes down
because I cleared the OSPF process. But then,

266
00:26:32,580 --> 00:26:37,910
instead of the neighbor coming back up, this
message is displayed. ‘OSPF detected duplicate

267
00:26:37,910 --> 00:26:46,340
router-id 192.168.1.1 from 192.168.1.1 on
interface GigabitEthernet0/0, and then the

268
00:26:46,340 --> 00:26:52,550
neighbor stays down. So, let’s fix this.
I removed the manually configured router ID

269
00:26:52,550 --> 00:26:58,110
with NO ROUTER-ID. Note that you don’t actually
have to specify the router ID when removing

270
00:26:58,110 --> 00:27:06,200
the command. NO ROUTER-ID has the same effect
as NO ROUTER-ID 192.168.1.1, both remove the

271
00:27:06,200 --> 00:27:12,930
command. This time, without having to reset
the OSPF process R2’s router ID returns

272
00:27:12,930 --> 00:27:21,130
to 192.168.1.2 and the neighbor comes up again.
Why didn’t I have to use CLEAR IP OSPF PROCESS?

273
00:27:21,130 --> 00:27:26,760
I actually didn’t expect this, but I realized
that it’s because R2 had no other OSPF neighbors

274
00:27:26,760 --> 00:27:31,710
at the time, so the router was free to change
R2’s router ID without worrying about it

275
00:27:31,710 --> 00:27:33,980
effecting other neighbors.

276
00:27:33,980 --> 00:27:40,900
So, watch out for duplicate router IDs. Next
requirement, the Hello and Dead timers must

277
00:27:40,900 --> 00:27:46,860
match. In both of the network types we looked
at today, Broadcast and Point-to-Point, the

278
00:27:46,860 --> 00:27:52,870
defaults are 10 seconds and 40 seconds. But
you can manually change these settings.

279
00:27:52,870 --> 00:27:57,260
The Hello and Dead timers are configured directly
on the interface. Here’s how to configure

280
00:27:57,260 --> 00:28:05,169
the Hello timer. IP OSPF HELLO-INTERVAL, followed
by the interval in seconds. I set it to 5.

281
00:28:05,169 --> 00:28:12,361
Then the Dead timer. IP OSPF DEAD-INTERVAL,
and I set it to 20. As you can see, the neighbor

282
00:28:12,361 --> 00:28:18,370
then goes down. Note that I changed both values,
the Hello timer and the Dead timer, but even

283
00:28:18,370 --> 00:28:24,870
if you only change one the neighbor will still
go down. So, let’s fix this. I used NO IP

284
00:28:24,870 --> 00:28:32,110
OSPF HELLO-INTERVAL and NO IP OSPF DEAD-INTERVAL
to return the timers to their default values.

285
00:28:32,110 --> 00:28:35,610
Notice the method I used to return them to
their defaults, it’s the same as for the

286
00:28:35,610 --> 00:28:42,630
router ID. I didn’t have to actually specify
NO IP OSPF HELLO-INTERVAL 5 or DEAD-INTERVAL

287
00:28:42,630 --> 00:28:48,290
20 to remove the commands. Anyway, now that
the Hello and Dead timers match again, the

288
00:28:48,290 --> 00:28:49,870
neighbor is back up.

289
00:28:49,870 --> 00:28:56,750
So, remember to check the Hello and Dead intervals
if you’re having trouble with OSPF adjacencies.

290
00:28:56,750 --> 00:29:02,140
Next up, authentication settings must match.
What does that mean? Well, you can configure

291
00:29:02,140 --> 00:29:06,510
an OSPF password, and then the router will
only become neighbors with routers that have

292
00:29:06,510 --> 00:29:11,590
a matching OSPF password. Let’s take a look.

293
00:29:11,590 --> 00:29:18,990
The OSPF password is configured directly on
the interface too. I used IP OSPF AUTHENTICATION-KEY,

294
00:29:18,990 --> 00:29:24,130
followed by a password of ‘jeremy’. Note
that this doesn’t actually enable OSPF authentication

295
00:29:24,130 --> 00:29:29,750
on the interface. The password is configured,
but we need to enable OSPF authentication.

296
00:29:29,750 --> 00:29:36,560
So, I used IP OSPF AUTHENTICATION to enable
it on the interface. Then the neighbor goes

297
00:29:36,560 --> 00:29:42,690
down, because R1 isn’t providing R2 a matching
password. Actually, I haven’t configured

298
00:29:42,690 --> 00:29:49,270
OSPF authentication on R1 yet, so it’s not
providing R2 with any OSPF password. So, to

299
00:29:49,270 --> 00:29:53,920
fix this we could either configure the same
authentication settings on R1, or remove the

300
00:29:53,920 --> 00:30:01,260
authentication from R2. I removed them from
R2, and now the neighbor is back up again.

301
00:30:01,260 --> 00:30:07,940
Okay, there are two more things to mention.
Number 7 is that the IP MTU settings on the

302
00:30:07,940 --> 00:30:14,110
interfaces must match. The IP MTU is the maximum
size of an IP packet that will be sent out

303
00:30:14,110 --> 00:30:21,000
of the interface. The default is usually 1500
bytes, but it can be configured. Note that

304
00:30:21,000 --> 00:30:25,940
this requirement and the next one are special,
even if the settings don’t match, the neighbors

305
00:30:25,940 --> 00:30:32,980
can become OSPF neighbors, but OSPF won’t
function properly. Let’s see.

306
00:30:32,980 --> 00:30:39,110
You can configure the IP MTU of an interface
with this command: IP MTU, followed by the

307
00:30:39,110 --> 00:30:46,260
MTU in bytes. I changed it to 1400 on R2’s
G0/0, so it doesn’t match with the default

308
00:30:46,260 --> 00:30:53,490
1500 on R1’s G0/0. I waited a minute and
then checked the neighbor table, R1 and R2

309
00:30:53,490 --> 00:31:00,490
actually remained neighbors. Then I reset
the OSPF process on R2. I waited a minute,

310
00:31:00,490 --> 00:31:04,970
but no message came indicating that the neighbors
had reached the full state. I checked the

311
00:31:04,970 --> 00:31:11,110
neighbor table again, and it was stuck in
the EXSTART state. After waiting a few minutes,

312
00:31:11,110 --> 00:31:15,950
a few more messages were displayed, and these
kept on repeating by the way. So, clearly

313
00:31:15,950 --> 00:31:22,830
OSPF isn’t functioning properly. I used
NO IP MTU to return the MTU to the default

314
00:31:22,830 --> 00:31:27,220
value, and then finally R1 and R2 reached
the FULL state.

315
00:31:27,220 --> 00:31:32,250
So, if your OSPF neighbors are having trouble
reaching the FULL state make sure to check

316
00:31:32,250 --> 00:31:38,580
the MTU settings. Okay, last one. The OSPF
network type must match. Let’s see what

317
00:31:38,580 --> 00:31:40,190
happens if they don’t.

318
00:31:40,190 --> 00:31:45,860
So, to demonstrate this problem I configured
a loopback interface on R2 with an IP address,

319
00:31:45,860 --> 00:31:51,530
and advertised it to R1. Then I changed the
network type on R2’s G0/0 to point-to-point.

320
00:31:51,530 --> 00:31:59,020
R1’s G0/0 is still using the default broadcast
network type. A message is displayed saying

321
00:31:59,020 --> 00:32:04,270
the neighbor went down, but then it went right
back to the FULL state. R1 even displays as

322
00:32:04,270 --> 00:32:10,370
FULL in SHOW IP OSPF NEIGHBOR. So what’s
the problem? Let’s see on R1.

323
00:32:10,370 --> 00:32:17,370
Here’s R1. R2 appears in the neighbor table
in the FULL state, so you might think OSPF

324
00:32:17,370 --> 00:32:23,460
is working fine.  But look at the routing table.
R2’s loopback address should be in R1’s

325
00:32:23,460 --> 00:32:29,380
routing table, but it’s not. This is what
will happen when the OSPF network type doesn’t

326
00:32:29,380 --> 00:32:33,690
match. It can be tricky to troubleshoot because
the neighbor state is Full, so it can seem

327
00:32:33,690 --> 00:32:37,670
like everything is working fine. Make sure
to watch out for that when troubleshooting

328
00:32:37,670 --> 00:32:38,670
OSPF.

329
00:32:38,670 --> 00:32:44,601
Okay, I’ll leave it there. There is of course
more we can get into, but I’ve given you

330
00:32:44,601 --> 00:32:50,260
plenty for the CCNA. Make sure to remember
these requirements. You don’t have to memorize

331
00:32:50,260 --> 00:32:54,700
them as a list, but make sure that if you
see these problems on a router you are able

332
00:32:54,700 --> 00:32:58,160
to identify and fix them.

333
00:32:58,160 --> 00:33:03,190
The final topic for today’s video is LSA
types. These aren’t specifically mentioned

334
00:33:03,190 --> 00:33:07,090
the exam topics list, so I’m just going
to spend a few minutes giving you a brief

335
00:33:07,090 --> 00:33:12,690
overview of some basic LSA types. To do so,
I’ve taken this topology from earlier and

336
00:33:12,690 --> 00:33:18,940
modified it, adding an Internet link on R4.
R4 has a default route to the Internet, and

337
00:33:18,940 --> 00:33:23,780
I use DEFAULT-INFORMATION ORIGINATE to make
it advertise it to the other routers. So,

338
00:33:23,780 --> 00:33:31,910
let’s talk about LSAs. As you already know,
the OSPF LSDB is made up of LSAs. All routers

339
00:33:31,910 --> 00:33:38,680
in the same OSPF area share the same LSDB.
There are 11 types of LSA, but there are only

340
00:33:38,680 --> 00:33:46,070
3 you should know for the CCNA. Those are
type 1, the ‘router LSA’. Type 2, the

341
00:33:46,070 --> 00:33:52,250
‘network LSA’. And type 5, the ‘AS external
LSA’. Let’s take a brief look at each

342
00:33:52,250 --> 00:33:54,130
type.

343
00:33:54,130 --> 00:34:00,180
First up is type 1, the router LSA. Every
router running OSPF generates this type of

344
00:34:00,180 --> 00:34:07,110
LSA. The router LSA identifies the router
using its router ID. The router LSA also lists

345
00:34:07,110 --> 00:34:14,399
networks attached to the router’s OSPF-activated
interfaces. Next up, the type 2 aka network

346
00:34:14,399 --> 00:34:22,010
LSA. It is generated by the DR of each ‘multi-access’
network. An example of a multi-access network

347
00:34:22,010 --> 00:34:28,230
is an Ethernet network using the broadcast
network type. This type of LSA lists the routers

348
00:34:28,230 --> 00:34:35,570
which are attached to the multi-access network.
Last type for today, the type 5 aka AS-external

349
00:34:35,570 --> 00:34:42,429
LSA. This type of LSA is generated by ASBRs
to describe routes to destinations outside

350
00:34:42,429 --> 00:34:45,690
of the autonomous system, the OSPF domain.

351
00:34:45,690 --> 00:34:53,530
Here’s a look at the LSDB on R1, using the
command SHOW IP OSPF DATABASE. Note that it

352
00:34:53,530 --> 00:34:57,570
doesn’t actually matter which router I use
the command on, the output will be the same

353
00:34:57,570 --> 00:35:03,360
because all routers in the area have the same
LSDB. Notice that each router has generated

354
00:35:03,360 --> 00:35:10,619
a Type 1 Router LSA identifying itself. This
view doesn’t show the contents of each LSA,

355
00:35:10,619 --> 00:35:15,250
but each of these router LSAs contains information
about the networks each router is connected

356
00:35:15,250 --> 00:35:23,870
to. Notice that there is only one Type 2 Network
LSA, generated by R4 for the 192.168.2.0/29

357
00:35:23,870 --> 00:35:31,690
subnet. Even though R1, R3, and R5 are DRs
on their G1/0 interfaces, no other routers

358
00:35:31,690 --> 00:35:37,610
are connected to the interfaces so no Type
2 LSA is generated. Finally, notice that a

359
00:35:37,610 --> 00:35:44,050
Type 5 AS-External LSA is generated by R4.
It is sharing its default route to the Internet

360
00:35:44,050 --> 00:35:49,770
with the other routers. Okay, that’s all
about LSAs. Once again, they aren’t explicitly

361
00:35:49,770 --> 00:35:54,120
stated in the exam topics list, but I just
wanted to give you a basic introduction to

362
00:35:54,120 --> 00:35:57,710
some of the basic LSA types you will encounter.

363
00:35:57,710 --> 00:36:04,230
I told you we were going to cover OSPF in
much more detail than RIP and EIGRP, and over

364
00:36:04,230 --> 00:36:10,240
these past three days we definitely did that.
OSPF is a major topic on the exam, so make

365
00:36:10,240 --> 00:36:14,590
sure you understand the material in these
videos. Watch them multiple times if you have

366
00:36:14,590 --> 00:36:19,240
to, and feel free to ask questions in the
comment section. Now let’s review what we

367
00:36:19,240 --> 00:36:25,430
covered in today’s video and then move on
to the quiz. First we covered the OSPF network

368
00:36:25,430 --> 00:36:32,180
types, focusing on the two you need to know
for the CCNA, Broadcast and Point-to-Point.

369
00:36:32,180 --> 00:36:36,110
Because Ethernet connections are dominant
in modern networks, most of the time you’ll

370
00:36:36,110 --> 00:36:41,310
be using the Broadcast network type. But also
be familiar with the Point-to-Point type,

371
00:36:41,310 --> 00:36:46,470
and the basics of serial interfaces that I
introduced in this video. Then I introduced

372
00:36:46,470 --> 00:36:52,660
some requirements for OSPF neighbors and adjacencies.
You don’t have to memorize the list of them,

373
00:36:52,660 --> 00:36:58,230
but make sure you can identify them all and
fix any problems. Finally I briefly introduced

374
00:36:58,230 --> 00:37:05,970
the three most basic OSPF LSA types. Type
1, the Router LSA. Type 2, the Network LSA.

375
00:37:05,970 --> 00:37:11,760
And Type 5, the AS-External LSA. Make sure
to watch until the end of the quiz for a bonus

376
00:37:11,760 --> 00:37:18,820
question from Boson ExSim for CCNA, my favorite
set of practice exams for the CCNA. Now here’s

377
00:37:18,820 --> 00:37:22,110
question 1 of the quiz.

378
00:37:22,110 --> 00:37:26,990
Which option states a characteristic of the
OSPF point-to-point network type that is different

379
00:37:26,990 --> 00:37:35,740
than the OSPF broadcast network type? A, DR
and BDR elections are held. B, DR and BDR

380
00:37:35,740 --> 00:37:42,930
elections are not held. C, Neighbors are dynamically
discovered. Or D, neighbors are not dynamically

381
00:37:42,930 --> 00:37:50,280
discovered. Pause the video to think about
your answer.

382
00:37:50,280 --> 00:37:56,390
The answer is B. In the OSPF point-to-point
network type, DR and BDR elections are not

383
00:37:56,390 --> 00:38:01,970
held. C, neighbors are dynamically discovered,
is a correct statement about the point-to-point

384
00:38:01,970 --> 00:38:06,670
network type, but it is also true about the
broadcast network type, so it is incorrect.

385
00:38:06,670 --> 00:38:10,670
Let’s go to question 2.

386
00:38:10,670 --> 00:38:17,360
There is an OSPF broadcast network with 5
connected routers. R1 is the DR on its G0/0

387
00:38:17,360 --> 00:38:25,200
interface. How many FULL OSPF adjacencies
does R1 have on the interface? A, 1 with the

388
00:38:25,200 --> 00:38:35,160
BDR. B, 2 with the DR and BDR. C, 4 with all
neighbors. D, 5 with all routers connected

389
00:38:35,160 --> 00:38:43,000
to the segment. Pause the video to think about
your answer.

390
00:38:43,000 --> 00:38:48,090
The answer is C. The DR forms a FULL adjacency
with all neighbors in the broadcast network

391
00:38:48,090 --> 00:38:53,690
segment, so C is correct. It doesn’t form
a neighbor relationship at all with itself,

392
00:38:53,690 --> 00:39:00,310
so B and D are incorrect. A is incorrect because
it identifies only one of R1’s fully adjacent

393
00:39:00,310 --> 00:39:06,430
neighbors, not all four. Let’s go to question
3.

394
00:39:06,430 --> 00:39:11,960
Which of the following are requirements for
routers to become OSPF neighbors? Select two.

395
00:39:11,960 --> 00:39:21,800
A, Hello and Dead timers must match. B, OSPF
Process IDs must match. C, OSPF Router IDs

396
00:39:21,800 --> 00:39:31,310
must match. D, Interfaces must be in the same
area. E, Interfaces must be in different areas.

397
00:39:31,310 --> 00:39:37,500
Or F, interfaces must be in different subnets.
Pause the video to think about your answers,

398
00:39:37,500 --> 00:39:42,340
select two.

399
00:39:42,350 --> 00:39:48,280
The answers are A and D. For two routers to
become OSPF neighbors, the Hello and Dead

400
00:39:48,280 --> 00:39:54,630
timers on their interfaces must match. They
also must be in the same area. For reference,

401
00:39:54,630 --> 00:39:59,540
here are the requirements for OSPF neighbors
as shown earlier in the video. Okay, let’s

402
00:39:59,540 --> 00:40:02,990
go to question 4.

403
00:40:02,990 --> 00:40:08,790
Which of the following OSPF LSA types is generated
only by the DR of a multi-access network,

404
00:40:08,790 --> 00:40:19,040
such as the broadcast network type? A, type
1. B, type 2. C, type 3. Or D, type 5. Pause

405
00:40:19,040 --> 00:40:25,230
the video to think about your answer.

406
00:40:25,230 --> 00:40:32,500
The answer is B, type 2. Type 2 is the ‘Network’
LSA, and is generated by the DR of each multi-access

407
00:40:32,500 --> 00:40:38,710
network. It lists the routers which are attached
to the multi-access network. A, Type 1, is

408
00:40:38,710 --> 00:40:46,731
the Router LSA type. D, Type 5, is the AS-External
LSA type. C, Type 3, is one I didn’t mention

409
00:40:46,731 --> 00:40:51,880
in this video. It’s called the ‘Summary’
LSA type. Okay, let’s move on to question

410
00:40:51,880 --> 00:40:53,330
5.

411
00:40:53,330 --> 00:41:01,500
R1 is connected to an OSPF Broadcast network
on its G0/0 interface. R4 is the DR of the

412
00:41:01,500 --> 00:41:08,660
segment and R3 is the BDR. All routers on
the segment have the default OSPF priority.

413
00:41:08,660 --> 00:41:15,500
You issue the ip ospf priority 100 command
on R1’s G0/0 to make it the DR. Which of

414
00:41:15,500 --> 00:41:20,000
the following statements are true about the
network after you issue the command? Select

415
00:41:20,000 --> 00:41:30,390
two. A, R1 is the DR. B, R1 is the BDR. C,
R1 is still a DROther because its priority

416
00:41:30,390 --> 00:41:37,840
isn’t high enough. D, if you issue the clear
ip ospf process command on R4, R1 will become

417
00:41:37,840 --> 00:41:45,480
the BDR. E, if you issue the clear ip ospf
process command on R4, R1 will become the

418
00:41:45,480 --> 00:41:52,750
DR. And F, the DR and BDR of the network are
unchanged. Pause the video to think about

419
00:41:52,750 --> 00:41:58,630
your answers, select two.

420
00:41:58,630 --> 00:42:04,970
The answers are D and F. The default OSPF
priority is 1 on all interfaces, so after

421
00:42:04,970 --> 00:42:11,060
entering the command R1’s G0/0 interface
has the highest priority, therefore C is incorrect.

422
00:42:11,060 --> 00:42:17,510
It’s still a DROther, but priority isn’t
the problem. The DR and BDR will not automatically

423
00:42:17,510 --> 00:42:24,070
give up their positions, so R1 will not become
the DR or BDR. Therefore A and B are incorrect,

424
00:42:24,070 --> 00:42:31,170
and F is correct. If you issue the CLEAR IP
OSPF PROCESS command on R4, the current BDR,

425
00:42:31,170 --> 00:42:37,870
R3, will automatically become the DR, not
R1. Therefore E is incorrect. However, if

426
00:42:37,870 --> 00:42:44,020
you issue that command, when R3 becomes the
new DR, an election is held for the new BDR.

427
00:42:44,020 --> 00:42:49,590
Since R1 has the highest priority, it will
become the new BDR for the segment. So D is

428
00:42:49,590 --> 00:42:54,410
correct. That’s all for the quiz. Let’s
move on to a bonus question in Boson ExSim

429
00:42:54,410 --> 00:42:57,020
for CCNA.

430
00:42:57,020 --> 00:43:05,090
Okay, here's today's Boson ExSim practice
question. You issue the SHOW IP OSPF INTERFACE

431
00:43:05,090 --> 00:43:10,670
FASTETHERNET 0/1 command on Router1 and receive
the following output. Here is the output of

432
00:43:10,670 --> 00:43:15,691
the command, and here's the question. Which
of the following statements is correct? Select

433
00:43:15,691 --> 00:43:21,300
the best answer. Okay, pause the video now.
Read each of the statements, and select the

434
00:43:21,300 --> 00:43:27,380
best answer.

435
00:43:27,380 --> 00:43:33,980
Okay, let's check. So, I believe the correct
answer is D. First let me explain the incorrect

436
00:43:33,990 --> 00:43:40,280
options and then I'll go on to D. First up,
A says Router1 is the DR for the segment.

437
00:43:40,280 --> 00:43:49,230
Well it says right here, Router1's state is
DROTHER. So that's incorrect. B, Router1 is

438
00:43:49,230 --> 00:43:55,780
connected to a point-to-multipoint network.
It says here that the network type is BROADCAST,

439
00:43:55,780 --> 00:44:02,960
so that's incorrect. C, Router1 is configured
with incorrect timer settings. You can see

440
00:44:02,960 --> 00:44:09,390
the timers here, they are the defaults. Also,
Router1 has five OSPF neighbors, so I don't

441
00:44:09,390 --> 00:44:15,260
think there is any problem with Router1's
timer settings. E, the BDR has a priority

442
00:44:15,260 --> 00:44:22,980
higher than 50. You can see here that Router1's
priority is 50 and it's a DROTHER. But the

443
00:44:22,980 --> 00:44:28,540
BDR doesn't necessarily have a priority higher
than 50. It might have the same priority as

444
00:44:28,540 --> 00:44:39,250
Router1, 50, but a higher router ID. So E
is incorrect. Now, why do I think D is correct?

445
00:44:39,250 --> 00:44:45,760
The key to this question is knowing the difference
between an OSPF neighbor adjacency. Sometimes

446
00:44:45,760 --> 00:44:50,220
those words are used to mean the same thing,
but technically speaking in OSPF they are

447
00:44:50,220 --> 00:44:58,920
different. Look here in the output. Neighbor
count is 5, adjacent neighbor count is 2.

448
00:44:58,920 --> 00:45:05,920
So, although Router1 has 5 OSPF neighbors,
only 2 of those are adjacencies, full adjacencies

449
00:45:05,920 --> 00:45:13,660
in the OSPF FULL neighbor state. This number
5 includes not only the FULL adjacencies with

450
00:45:13,660 --> 00:45:21,590
the DR and BDR, but also Router1's DROTHER
neighbors. Remember, a DROTHER will only reach

451
00:45:21,590 --> 00:45:28,790
the 2-way state with another DROTHER. So,
to summarize Router1 is a DROTHER in this

452
00:45:28,790 --> 00:45:35,369
OSPF broadcast network. And DROTHERs can only
establish adjacencies with the DR and BDR,

453
00:45:35,369 --> 00:45:40,970
2 routers. So, I chose this question because
I wanted to make it clear, the difference

454
00:45:40,970 --> 00:45:49,330
between a neighbor and a full OSPF adjacency.
So, I'll click on show answer, and the answer

455
00:45:49,330 --> 00:45:56,600
is correct. Okay, pause the video now if you
want to read Boson's explanation here. Also

456
00:45:56,600 --> 00:46:01,920
notice that it includes a reference to some
Cisco documentation about the SHOW IP OSPF

457
00:46:01,920 --> 00:46:07,830
INTERFACE command. And this Cisco documentation,
as I have said before, is available free online

458
00:46:07,830 --> 00:46:14,170
and it's another great study resource. Okay,
so if you want to get a copy of Boson ExSim,

459
00:46:14,170 --> 00:46:18,740
please follow the link in the video description.
As I've already said, these are the practice

460
00:46:18,740 --> 00:46:24,481
exams I used when studying for both my CCNA
and CCNP, and I highly recommend them. So

461
00:46:24,481 --> 00:46:28,990
once again, follow that link in the video
description.

462
00:46:28,990 --> 00:46:33,970
There are supplementary materials for this
video. There is a flashcard deck to use with

463
00:46:33,970 --> 00:46:38,420
the software ‘Anki’. There will also be
a packet tracer practice lab so you can get

464
00:46:38,420 --> 00:46:43,690
some hands-on practice. That will be in the
next video. Sign up for my mailing list via

465
00:46:43,690 --> 00:46:47,350
the link in the description, and I’ll send
you all of the flashcards and packet tracer

466
00:46:47,350 --> 00:46:50,700
lab files for the course.

467
00:46:50,700 --> 00:46:55,791
Before finishing today’s video I want to
thank my JCNP-level channel members. Recently

468
00:46:55,791 --> 00:46:59,290
I’ve noticed an increase in the number of
channel members, and I’m so thankful to

469
00:46:59,290 --> 00:47:05,800
all of you, both JCNA and JCNP-level members.
Previously I read out the names of all the

470
00:47:05,800 --> 00:47:10,300
JCNP-level members one by one, but the list
is getting longer so I’ll just leave the

471
00:47:10,300 --> 00:47:16,050
list up here. Your support helps me keep making
and releasing these videos every week, so

472
00:47:16,050 --> 00:47:20,869
I’m really grateful for your support. This
is the list of JCNP-level members at the time

473
00:47:20,869 --> 00:47:26,359
of recording by the way, August 23rd 2020,
if you signed up recently and your name isn’t

474
00:47:26,359 --> 00:47:31,880
on here don’t worry, you’ll be in future
videos.

475
00:47:31,880 --> 00:47:36,750
Thank you for watching. Please subscribe to
the channel, like the video, leave a comment,

476
00:47:36,750 --> 00:47:41,640
and share the video with anyone else studying
for the CCNA. If you want to leave a tip,

477
00:47:41,640 --> 00:47:47,440
check the links in the description. I'm also
a Brave verified publisher and accept BAT,

478
00:47:47,440 --> 00:47:52,020
or Basic Attention Token, tips via the Brave
browser. That's all for now.
1
00:00:01,150 --> 00:00:03,630
Welcome to Jeremy’s IT Lab.

2
00:00:03,630 --> 00:00:06,870
This is a free, complete course for the CCNA.

3
00:00:06,870 --> 00:00:10,820
If you like these videos, please subscribe
to follow along with the series.

4
00:00:10,820 --> 00:00:15,679
Also, please like and leave a comment, and
share the video to help spread this free series

5
00:00:15,679 --> 00:00:17,000
of videos.

6
00:00:17,000 --> 00:00:19,170
Thanks for your help.

7
00:00:19,170 --> 00:00:23,269
In this video we will take a look at two dynamic
routing protocols that aren’t actually in

8
00:00:23,269 --> 00:00:27,099
the exam topics list, RIP and EIGRP.

9
00:00:27,099 --> 00:00:31,619
So, why am I covering these two topics even
though they aren’t on the official exam

10
00:00:31,619 --> 00:00:32,860
topics list?

11
00:00:32,860 --> 00:00:37,950
Well, the main reason is that you might still
get a few questions about RIP or EIGRP on

12
00:00:37,950 --> 00:00:40,780
the exam, so it’s best to be prepared.

13
00:00:40,780 --> 00:00:46,750
Cisco’s exam topics list states this: ‘The
following topics are general guidelines for

14
00:00:46,750 --> 00:00:49,500
the content likely to be included on the exam.

15
00:00:49,500 --> 00:00:54,510
However, other related topics may also appear
on any specific delivery of the exam.’

16
00:00:54,510 --> 00:00:59,170
So, don’t think that just because something
isn’t on the exam topics list, you don’t

17
00:00:59,170 --> 00:01:01,330
have to know anything about it.

18
00:01:01,330 --> 00:01:05,870
Of course, we won’t study RIP and EIGRP
to the same level of depth that we will study

19
00:01:05,870 --> 00:01:10,970
OSPF, which is explicitly listed on the exam
topics list, but I’ll use this video to

20
00:01:10,970 --> 00:01:14,750
give an overview of both of RIP and EIGRP.

21
00:01:14,750 --> 00:01:18,930
I will show some basic configurations for
both, but just the minimum you need to get

22
00:01:18,930 --> 00:01:23,790
an understanding of how they work, you don’t
need to memorize them for the exam.

23
00:01:23,790 --> 00:01:28,330
A lot of the things you learn in this video
can also be applied to OSPF, so this should

24
00:01:28,330 --> 00:01:32,330
make things easier when I introduce OSPF in
Day 26.

25
00:01:32,330 --> 00:01:36,380
So, what exactly will we cover today?

26
00:01:36,380 --> 00:01:42,620
Just as I said, RIP, the Routing Information
Protocol, and EIGRP, the Enhanced Interior

27
00:01:42,620 --> 00:01:45,180
Gateway Routing Protocol.

28
00:01:45,180 --> 00:01:49,120
Stick around to the end of today’s quiz
for a bonus question from Boson ExSim for

29
00:01:49,120 --> 00:01:54,640
CCNA, a set of practice exams for the CCNA
by Boson Software.

30
00:01:54,640 --> 00:01:59,369
These are the practice exams I used to prepare
for my CCNA a couple years ago, and they are

31
00:01:59,369 --> 00:02:03,520
very popular among people getting ready to
take their CCNA.

32
00:02:03,520 --> 00:02:07,720
If you’re planning to take your CCNA soon
and want to make absolutely sure you’re

33
00:02:07,720 --> 00:02:11,819
ready, ExSim is in my opinion the best tool
you can use.

34
00:02:11,819 --> 00:02:17,049
If you want to get Boson ExSim, follow the
link in the video description.

35
00:02:17,049 --> 00:02:19,349
So let’s get right into RIP.

36
00:02:19,349 --> 00:02:23,659
Some of this stuff I already talked about
last video, but let’s review.

37
00:02:23,659 --> 00:02:28,409
RIP stands for Routing Information Protocol,
and it is an industry standard protocol, not

38
00:02:28,409 --> 00:02:30,720
Cisco proprietary.

39
00:02:30,720 --> 00:02:36,040
It is a distance vector interior gateway protocol,
so it uses ‘routing-by-rumour’ logic to

40
00:02:36,040 --> 00:02:37,430
learn and share routes.

41
00:02:37,430 --> 00:02:41,650
Watch day 24 again if you want a review of
that.

42
00:02:41,650 --> 00:02:46,760
RIP uses hop count as its metric, each router
in the path to the destination counts as one

43
00:02:46,760 --> 00:02:50,459
‘hop’, and the bandwidth is irrelevant.

44
00:02:50,459 --> 00:02:54,910
A 10 gigabit connection counts as one hop,
and a 10 megabit connection also counts as

45
00:02:54,910 --> 00:02:56,810
one hop.

46
00:02:56,810 --> 00:03:02,209
And something I didn’t mention last video,
the maximum hop count is 15.

47
00:03:02,209 --> 00:03:06,290
Anything more than that is considered unreachable,
and RIP will not insert the route into the

48
00:03:06,290 --> 00:03:07,419
routing table.

49
00:03:07,419 --> 00:03:11,599
So, clearly RIP cannot be used for very large
networks.

50
00:03:11,599 --> 00:03:16,930
Actually, RIP is almost never used in real
networks, but it can possibly be used in small

51
00:03:16,930 --> 00:03:21,420
networks, and also in lab environments, as
a simple IGP that is quick and easy to set

52
00:03:21,420 --> 00:03:23,079
up.

53
00:03:23,079 --> 00:03:29,609
RIP has three versions, RIP version 1 and
version 2, which are used for IPv4.

54
00:03:29,609 --> 00:03:35,780
There is also RIPng, RIP Next Generation,
which is used for IPv6, but which we won’t

55
00:03:35,780 --> 00:03:38,489
cover in this course.

56
00:03:38,489 --> 00:03:42,769
RIP uses two message types to learn and share
routing information.

57
00:03:42,769 --> 00:03:47,590
The first is the Request message, which asks
RIP-enabled neighbor routers to send their

58
00:03:47,590 --> 00:03:49,499
routing table.

59
00:03:49,499 --> 00:03:53,470
The second is the response message, which
is used to send the local router’s routing

60
00:03:53,470 --> 00:03:55,579
table to neighboring routers.

61
00:03:55,579 --> 00:04:01,450
By default, RIP-enabled routers will share
their routing table every 30 seconds.

62
00:04:01,450 --> 00:04:05,849
This can cause problems in networks with lots
of routers, as these regular updates can clog

63
00:04:05,849 --> 00:04:09,059
up the network.

64
00:04:09,059 --> 00:04:12,739
Next up, let’s compare RIPv1 and RIPv2.

65
00:04:12,739 --> 00:04:15,989
RIPv1 is a very old protocol.

66
00:04:15,989 --> 00:04:20,479
Basically, if you’re going to use RIP, don’t
use version 1.

67
00:04:20,479 --> 00:04:27,660
RIPv1 only advertises classful addresses,
meaning Class A, Class B, and Class C. I taught

68
00:04:27,660 --> 00:04:32,419
you about classful addressing because it’s
important to understand, but in modern networks

69
00:04:32,419 --> 00:04:35,169
the concept is no longer used.

70
00:04:35,169 --> 00:04:40,130
Because version 1 only supports classful addresses,
it doesn’t support things like VLSM and

71
00:04:40,130 --> 00:04:42,900
CIDR, which I covered in my subnetting videos.

72
00:04:42,900 --> 00:04:48,550
In fact, when RIPv1 advertises a network to
a neighbor, it doesn’t even include the

73
00:04:48,550 --> 00:04:52,050
subnet mask information in the advertisement.

74
00:04:52,050 --> 00:04:56,180
If the advertised network is in the class
A range, it is assumed to be /8.

75
00:04:56,180 --> 00:05:01,150
It it’s in the class B range, it’s assumed
to be /16.

76
00:05:01,150 --> 00:05:05,770
If it’s in the class C range, it’s assumed
to be /24.

77
00:05:05,770 --> 00:05:10,349
Here are some examples of subnets, and how
RIPv1 would force them to become classful

78
00:05:10,349 --> 00:05:12,550
networks.

79
00:05:12,550 --> 00:05:19,060
10.1.1.0/24 will become 10.0.0.0, a class
A network.

80
00:05:19,060 --> 00:05:27,080
172.16.192.0/18 will become 172.16.0.0, a
class B network.

81
00:05:27,090 --> 00:05:35,110
And 192.168.1.4/30 will become 192.168.1.0,
a class C network.

82
00:05:35,110 --> 00:05:40,689
This is simply not acceptable in modern networks
where IPv4 address classes are no longer used

83
00:05:40,689 --> 00:05:44,560
and have been replaced with CIDR and VLSM.

84
00:05:44,560 --> 00:05:48,690
We need the ability to use subnets, not just
the classful networks.

85
00:05:48,690 --> 00:05:58,289
Okay, one more thing about RIPv1, its messages
are broadcast to the IP address 255.255.255.255,

86
00:05:58,289 --> 00:06:02,939
so all routers on the local segment will receive
the messages.

87
00:06:02,939 --> 00:06:08,979
Next up, let’s look at RIP version 2, which
improves upon version 1 in a few ways.

88
00:06:08,979 --> 00:06:13,789
First of all, it supports VLSM and CIDR, it
doesn’t have to be classful like version

89
00:06:13,789 --> 00:06:15,250
1.

90
00:06:15,250 --> 00:06:19,780
To support this, it includes subnet mask information
in its route advertisements.

91
00:06:19,780 --> 00:06:25,400
A /30 network will advertised as /30, for
example.

92
00:06:25,400 --> 00:06:30,879
Another difference is that RIPv2 messages
are not broadcast, they are multicast to address

93
00:06:30,879 --> 00:06:33,780
224.0.0.9.

94
00:06:33,780 --> 00:06:39,280
This address is in the class D range, which
is reserved for multicast addresses.

95
00:06:39,280 --> 00:06:41,770
What exactly is multicast?

96
00:06:41,770 --> 00:06:47,370
You don’t need to know the details at the
CCNA level, but here’s a quick comparison.

97
00:06:47,370 --> 00:06:51,410
Broadcast messages are delivered to all devices
on the local network, as you have seen many

98
00:06:51,410 --> 00:06:54,389
times in this course.

99
00:06:54,389 --> 00:06:57,849
Multicast messages, on the other hand, are
only received by devices that have joined

100
00:06:57,849 --> 00:07:01,069
that specific multicast group.

101
00:07:01,069 --> 00:07:05,540
Just know that basic difference between broadcast
and multicast, and you’ll be good.

102
00:07:05,540 --> 00:07:12,060
It’s only at the CCIE level that you need
to go really in depth on the topic of multicast.

103
00:07:12,060 --> 00:07:17,810
Okay, so now I’m going to introduce you
to the basic configuration of RIP.

104
00:07:17,810 --> 00:07:21,939
Although RIP configuration is not actually
on the CCNA, I want to introduce it for a

105
00:07:21,939 --> 00:07:23,629
couple reasons.

106
00:07:23,629 --> 00:07:28,699
First, RIP configuration is very simple, so
it acts as a good introduction to dynamic

107
00:07:28,699 --> 00:07:30,650
routing configuration.

108
00:07:30,650 --> 00:07:35,759
Second, some of the mechanics are similar
to how OSPF configuration works, so it will

109
00:07:35,759 --> 00:07:39,240
make it easier when we go in depth on OSPF
later.

110
00:07:39,240 --> 00:07:43,870
So, assuming all of the other routers have
already been set up with RIP, let’s just

111
00:07:43,870 --> 00:07:46,340
configure R1.

112
00:07:46,340 --> 00:07:48,090
Here is the basic setup.

113
00:07:48,090 --> 00:07:53,550
First, enter RIP configuration mode with the
command ROUTER RIP.

114
00:07:53,550 --> 00:07:59,069
You can see under that the prompt now says
‘config-router’ instead of just ‘config’.

115
00:07:59,069 --> 00:08:05,620
Next, configure the router to use RIP version
2 with the command VERSION 2.

116
00:08:05,620 --> 00:08:11,290
This isn’t necessary, but you should always
use version 2 if you’re going to use RIP.

117
00:08:11,290 --> 00:08:15,560
Classful IPv4 addressing is a thing of the
past, in modern networks we need to be able

118
00:08:15,560 --> 00:08:18,159
to use things like VLSM and CIDR.

119
00:08:18,160 --> 00:08:22,000
Then, use the command NO AUTO-SUMMARY.

120
00:08:22,000 --> 00:08:26,600
Auto-summary is on by default, and it automatically
converts the networks the router advertises

121
00:08:26,610 --> 00:08:28,740
to classful networks.

122
00:08:28,740 --> 00:08:36,970
For example, using classful logic, the 172.16.1.0/28
network attached to R1 is a class B network,

123
00:08:36,970 --> 00:08:43,070
so it would be advertised as 172.16.0.0/16.

124
00:08:43,070 --> 00:08:50,470
Always use these two commands when you configure
RIP, VERSION 2, followed by NO AUTO-SUMMARY.

125
00:08:50,470 --> 00:08:54,270
Next up we have to use the NETWORK command.

126
00:08:54,270 --> 00:08:56,570
First I used NETWORK 10.0.0.0.

127
00:08:56,570 --> 00:09:00,160
Now, I have to explain some things about it.

128
00:09:00,160 --> 00:09:05,380
The command itself is classful, it will automatically
convert to classful networks.

129
00:09:05,380 --> 00:09:11,150
For example, even if you enter the command
NETWORK 10.0.12.0, it will be converted to

130
00:09:11,150 --> 00:09:13,160
10.0.0.0.

131
00:09:13,160 --> 00:09:19,380
10.0.12.0 falls in the class A range, so a
/8 prefix length is assumed.

132
00:09:19,380 --> 00:09:25,220
So, after the first 8 bits, all of the other
bits will be converted to 0.

133
00:09:25,220 --> 00:09:28,810
Because of this behavior, there is no need
to enter a network mask.

134
00:09:28,810 --> 00:09:31,720
Okay, so what effect does this command actually
have?

135
00:09:31,720 --> 00:09:41,061
R1’s G0/0 interface is 10.0.12.0/30, and
its G1/0 interface is 10.0.13.0/30, but

136
00:09:41,061 --> 00:09:44,160
I just entered the command NETWORK 10.0.0.0.

137
00:09:44,160 --> 00:09:49,560
Let’s look at exactly how the NETWORK command
functions.

138
00:09:49,560 --> 00:09:53,850
The NETWORK command tells the router to look
for interfaces with an IP address that is

139
00:09:53,850 --> 00:09:58,880
in the specified range, that is the range
specified in the NETWORK command.

140
00:09:58,880 --> 00:10:04,210
Then it will activate RIP on the interface
or interfaces that fall in the range.

141
00:10:04,210 --> 00:10:09,210
It will form adjacencies with other connected
RIP-enabled neighbors, and advertise the network

142
00:10:09,210 --> 00:10:11,370
prefix of the interface.

143
00:10:11,370 --> 00:10:15,660
This is not necessarily the prefix you specified
in the network command.

144
00:10:15,660 --> 00:10:20,760
This is also how the EIGRP and OSPF NETWORK
commands operate, although there are a few

145
00:10:20,760 --> 00:10:21,760
differences.

146
00:10:21,760 --> 00:10:26,441
So, let me walk through it step-by-step here,
it will make it easier to pick up EIGRP and

147
00:10:26,441 --> 00:10:28,160
OSPF later.

148
00:10:28,160 --> 00:10:34,350
So, we’ve just entered the network 10.0.0.0
command on R1.

149
00:10:34,350 --> 00:10:42,320
Because the NETWORK command is classful, 10.0.0.0
is assumed to be 10.0.0.0/8.

150
00:10:42,320 --> 00:10:48,880
R1 will look for any interfaces with an IP
address that matches 10.0.0.0/8.

151
00:10:48,880 --> 00:10:54,460
/8 means that only the first 8 bits need
to match, so the first octet of the IP address

152
00:10:54,470 --> 00:10:56,900
needs to be the same.

153
00:10:56,900 --> 00:11:04,130
10.0.12.1 and 10.0.13.1 both match, they both
have the same first octet of 10.

154
00:11:04,130 --> 00:11:08,630
So, RIP is activated on G0/0 and G1/0.

155
00:11:08,630 --> 00:11:13,790
R1 then forms adjacencies with its neighbors
R2 and R3.

156
00:11:13,790 --> 00:11:19,020
R1 will send and receive route information
to and from R2 and R3.

157
00:11:19,020 --> 00:11:28,970
Here’s the important part, R1 advertises
10.0.12.0/30 and 10.0.13.0/30, the network

158
00:11:28,970 --> 00:11:35,500
prefixes of its G0/0 and G1/0 interfaces,
to its RIP neighbors, R2 and R3.

159
00:11:35,500 --> 00:11:43,570
Even though we used the NETWORK 10.0.0.0 command,
R1 doesn’t advertise the 10.0.0.0/8 network.

160
00:11:43,570 --> 00:11:47,630
The NETWORK command doesn’t tell the router
which networks to advertise.

161
00:11:47,630 --> 00:11:52,020
It tells the router which interfaces to activate
RIP on, and then the router will advertise

162
00:11:52,020 --> 00:11:55,160
the network prefix of those interfaces.

163
00:11:55,160 --> 00:12:00,260
Okay, we also configured the NETWORK 172.16.0.0
command.

164
00:12:00,260 --> 00:12:03,560
Let’s run through this as well.

165
00:12:03,560 --> 00:12:12,760
Because the network command is classful, 172.16.0.0
is assumed to be 172.16.0.0/16.

166
00:12:12,760 --> 00:12:20,440
R1 will look for any interfaces with an IP
address that matches 172.16.0.0/16.

167
00:12:20,440 --> 00:12:28,120
172.16.1.14 matches, so R1 will activate RIP
on G2/0.

168
00:12:28,120 --> 00:12:33,450
This time there are no RIP neighbors connected
to G2/0, so no new adjacencies are formed.

169
00:12:33,450 --> 00:12:44,090
However, R1 advertises 172.16.1.0/28 (NOT
172.16.0.0/16) to its RIP neighbors.

170
00:12:44,090 --> 00:12:50,360
One more important point: Although there are
no RIP neighbors connected to G2/0, R1 will

171
00:12:50,360 --> 00:12:53,840
continuously send RIP advertisements out of
G2/0.

172
00:12:53,840 --> 00:12:58,560
This is unnecessary traffic, so G2/0 should
be configured as a passive interface.

173
00:12:58,560 --> 00:13:01,450
Let’s see how to do that.

174
00:13:01,450 --> 00:13:05,690
I used the command PASSIVE-INTERFACE G2/0.

175
00:13:05,690 --> 00:13:09,320
This configures G2/0 as a passive interface.

176
00:13:09,320 --> 00:13:14,150
Note that the command is done from RIP configuration
mode, not directly on the interface itself.

177
00:13:14,150 --> 00:13:18,190
That’s why you need to specify the interface
in the command.

178
00:13:18,190 --> 00:13:23,010
The passive-interface command tells the router
to stop sending RIP advertisements out of

179
00:13:23,010 --> 00:13:26,850
the specified interface, which is G2/0 in
this case.

180
00:13:26,850 --> 00:13:31,550
However, the router will continue to advertise
the network prefix of the interface, which

181
00:13:31,550 --> 00:13:38,570
is 172.16.1.0/28, to its RIP neighbors, R2
and R3.

182
00:13:38,570 --> 00:13:42,100
It is recommended that you always use this
command on interfaces which don’t have any

183
00:13:42,100 --> 00:13:43,750
RIP neighbors.

184
00:13:43,750 --> 00:13:51,410
EIGRP and OSPF both have the same passive
interface functionality, using the same command.

185
00:13:51,410 --> 00:13:56,260
To demonstrate one more function of RIP I
added an Internet connection to R1, via it’s

186
00:13:56,260 --> 00:13:59,320
G3/0 interface.

187
00:13:59,320 --> 00:14:02,150
Then I configured a default route pointing
to the Internet.

188
00:14:02,150 --> 00:14:07,010
So, any packets that don’t match any of
the other entries in R1’s routing table

189
00:14:07,010 --> 00:14:09,550
will be sent to the Internet.

190
00:14:09,550 --> 00:14:11,840
Here you can see it in the routing table.

191
00:14:11,840 --> 00:14:18,450
Gateway of last resort is 203.0.113.2 to network
0.0.0.0.

192
00:14:18,450 --> 00:14:23,600
Under it you can see the configured static
route to 0.0.0.0/0.

193
00:14:23,600 --> 00:14:29,020
Now, I want to use RIP to tell R2, R3, and
R4 about this default route so that they can

194
00:14:29,030 --> 00:14:31,940
reach the Internet as well.

195
00:14:31,940 --> 00:14:37,410
The command to share this default route into
RIP is DEFAULT-INFORMATION ORIGINATE, again

196
00:14:37,410 --> 00:14:40,740
the command is done from RIP configuration
mode.

197
00:14:40,740 --> 00:14:46,190
Now that I have entered this command, R1 will
advertise the route to R2 and R3, and they

198
00:14:46,190 --> 00:14:48,410
will then advertise it to R4.

199
00:14:48,410 --> 00:14:52,810
Let’s just check the routing table of R4.

200
00:14:52,810 --> 00:15:01,080
Notice it says ‘Gateway of last resort is
10.0.34.1 to network 0.0.0.0’, however below

201
00:15:01,080 --> 00:15:08,580
that you can see two routes, one via F2/0
to R3 and one via G0/0 to R2.

202
00:15:08,580 --> 00:15:12,870
Only one is actually stated up top as being
the gateway of last resort, but because both

203
00:15:12,870 --> 00:15:17,960
of these routes have the same hop-count, R4
will load-balance traffic over the two routes.

204
00:15:17,960 --> 00:15:23,600
I’m repeating myself, but RIP treats all
connections equally, as one hop, so even though

205
00:15:23,600 --> 00:15:28,850
the connection via R3 is a slower fastethernet
connection, RIP considers it equal to the

206
00:15:28,850 --> 00:15:31,970
faster gigabit ethernet connection via R2.

207
00:15:31,970 --> 00:15:36,880
OSPF also has the same DEFAULT-INFORMATION
ORIGINATE command, by the way, to share a

208
00:15:36,880 --> 00:15:38,460
default route with neighbors.

209
00:15:38,460 --> 00:15:43,510
We’ll take a look at it again when we learn
about OSPF.

210
00:15:43,510 --> 00:15:48,740
Now let’s take a look at a very useful SHOW
command, SHOW IP PROTOCOLS.

211
00:15:48,740 --> 00:15:54,160
This command can be used for RIP, EIGRP, and
OSPF, to check various stats.

212
00:15:54,160 --> 00:15:58,090
We’ll just run through a few of the things
you need to know.

213
00:15:58,090 --> 00:16:03,510
First up, this part here identifies the protocol
that is being used, RIP in this case.

214
00:16:03,510 --> 00:16:08,860
These are some timers that RIP uses to operate,
we won’t talk about them for RIP or EIGRP,

215
00:16:08,860 --> 00:16:12,530
but will go in depth when we study OSPF.

216
00:16:12,530 --> 00:16:17,170
Here is some information about the version
being used, notice that it’s version 2 as

217
00:16:17,170 --> 00:16:19,610
we configured.

218
00:16:19,610 --> 00:16:25,310
Automatic network summarization is not in
effect, this is because we used the NO AUTO-SUMMARY

219
00:16:25,310 --> 00:16:27,420
command earlier.

220
00:16:27,420 --> 00:16:32,040
Maximum paths is 4, this refers to ECMP load-balancing.

221
00:16:32,040 --> 00:16:36,900
By default, RIP will insert up to 4 paths
to the same destination into the routing table

222
00:16:36,900 --> 00:16:38,410
if they have the same metric.

223
00:16:38,410 --> 00:16:41,050
However, this can be changed.

224
00:16:41,050 --> 00:16:46,760
Here is the command, MAXIMUM-PATHS, followed
by a number, 1 to 32.

225
00:16:46,760 --> 00:16:48,880
This is done from RIP configuration mode.

226
00:16:48,880 --> 00:16:51,510
I put in 8 for example.

227
00:16:51,510 --> 00:16:56,890
This command is the same for EIGRP and OSPF
also, by the way.

228
00:16:56,890 --> 00:17:01,450
Next up, this section here shows the networks
we entered with the NETWORK command.

229
00:17:01,450 --> 00:17:05,610
Once again, these aren’t the actual networks
RIP is advertising, the network command just

230
00:17:05,610 --> 00:17:09,020
identifies which interfaces to activate RIP
on.

231
00:17:09,020 --> 00:17:15,780
Here you can see any passive interfaces listed,
just G2/0 in this case.

232
00:17:15,780 --> 00:17:21,770
Under ‘routing information sources’ you
can see R1’s RIP neighbors, 10.0.12.2 which

233
00:17:21,770 --> 00:17:26,800
is R2 and 10.0.13.2 which is R3.

234
00:17:26,800 --> 00:17:31,720
Finally, distance states the administrative
distance of RIP, which is currently the default

235
00:17:31,720 --> 00:17:33,230
of 120.

236
00:17:33,230 --> 00:17:38,240
This can be changed with this command from
RIP configuration mode, DISTANCE, followed

237
00:17:38,240 --> 00:17:41,750
by a number, 1 to 255.

238
00:17:41,750 --> 00:17:46,600
For example, if you want to make RIP routes
preferred over EIGRP routes for some reason,

239
00:17:46,600 --> 00:17:52,340
you could set it to 85 like I just did, to
make RIP’s AD lower than EIGRP’s AD of

240
00:17:52,340 --> 00:17:53,860
90.

241
00:17:53,860 --> 00:17:59,840
The DISTANCE command is the same for EIGRP
and OSPF also, by the way.

242
00:17:59,840 --> 00:18:01,340
Okay, that’s all for RIP.

243
00:18:01,350 --> 00:18:06,250
Let’s move on to EIGRP, you’ll see a lot
of things are similar to RIP.

244
00:18:06,250 --> 00:18:10,900
EIGRP stands for Enhanced Interior Gateway
Routing Protocol.

245
00:18:10,900 --> 00:18:16,100
It is an improved version of the older IGRP,
Interior Gateway Routing Protocol.

246
00:18:16,100 --> 00:18:21,660
EIGRP was Cisco proprietary, but Cisco has
now published it openly so other vendors can

247
00:18:21,660 --> 00:18:23,660
implement it on their equipment.

248
00:18:23,660 --> 00:18:28,850
However, my understanding is that Cisco didn’t
open up the entire protocol, parts of it remain

249
00:18:28,850 --> 00:18:33,820
Cisco-proprietary, and I don’t think many
vendors have bothered implementing EIGRP.

250
00:18:33,820 --> 00:18:38,600
So, practically speaking, it’s still considered
a Cisco-only protocol.

251
00:18:38,600 --> 00:18:43,390
It’s considered an ‘advanced’ or ‘hybrid’
distance vector routing protocol.

252
00:18:43,390 --> 00:18:48,330
It improves on the very basic operations of
RIP, its fellow distance vector routing protocol.

253
00:18:48,330 --> 00:18:52,470
It’s much faster than RIP in reacting to
changes in the network.

254
00:18:52,470 --> 00:18:58,320
It doesn’t have the 15 ‘hop-count’ limit
of RIP, so it supports very large networks.

255
00:18:58,320 --> 00:19:03,600
It sends messages using the multicast address
224.0.0.10.

256
00:19:03,600 --> 00:19:11,420
Remember, RIPv1 broadcasts messages, and RIPv2
multicasts them to 224.0.0.9.

257
00:19:11,420 --> 00:19:16,730
EIGRP multicasts them to 224.0.0.10.

258
00:19:16,730 --> 00:19:21,530
Try to remember these multicast addresses,
they could come up as exam questions.

259
00:19:21,530 --> 00:19:29,320
Finally, one unique feature of EIGRP, EIGRP
is the only IGP that can perform unequal-cost

260
00:19:29,320 --> 00:19:30,770
load-balancing.

261
00:19:30,770 --> 00:19:36,100
By default it performs ECMP load-balancing
over 4 paths like RIP, but you can configure

262
00:19:36,100 --> 00:19:39,630
it to load-balance over multiple paths that
don’t have equal cost.

263
00:19:39,630 --> 00:19:43,440
EIGRP will even load-balance them in proportion
to their bandwidth.

264
00:19:43,440 --> 00:19:48,650
So, more traffic will be sent over paths with
a lower-metric, since they are faster, and

265
00:19:48,650 --> 00:19:52,470
less traffic will be sent over paths with
a higher metric, since they are the slower

266
00:19:52,470 --> 00:19:53,470
paths.

267
00:19:53,470 --> 00:19:59,390
EIGRP is a great protocol, but because its
use is mostly limited only to Cisco devices,

268
00:19:59,390 --> 00:20:02,720
it’s not used nearly as much as OSPF is.

269
00:20:02,720 --> 00:20:08,330
That’s why Cisco made OSPF the main focus
of the new CCNA when it comes to dynamic routing

270
00:20:08,330 --> 00:20:09,330
protocols.

271
00:20:09,330 --> 00:20:13,559
Okay, let’s look at the basic configurations
of EIGRP.

272
00:20:13,559 --> 00:20:16,510
Here’s the same network as before.

273
00:20:16,510 --> 00:20:21,970
I’ve removed the RIP configurations, although
you can have both RIP and EIGRP running at

274
00:20:21,970 --> 00:20:23,559
the same time.

275
00:20:23,559 --> 00:20:27,559
But that would just be a waste of resources
on the routers, so usually there will just

276
00:20:27,559 --> 00:20:30,230
be one IGP running on a router.

277
00:20:30,230 --> 00:20:37,930
So, enter EIGRP configuration mode with this
command, ROUTER EIGRP, followed by an AS,

278
00:20:37,930 --> 00:20:40,020
autonomous system, number.

279
00:20:40,020 --> 00:20:41,460
I used 1.

280
00:20:41,460 --> 00:20:46,720
The AS number must match between routers or
they will not form an adjacency and share

281
00:20:46,720 --> 00:20:47,720
route information.

282
00:20:47,720 --> 00:20:54,160
I already configured the same AS number of
1 on R2, 3, and 4, so I had to configure the

283
00:20:54,160 --> 00:20:56,790
same here on R1.

284
00:20:56,790 --> 00:20:58,990
Next I disabled auto-summary.

285
00:20:58,990 --> 00:21:04,150
It functions the same as in RIP, it will advertise
classful networks instead of the actual network

286
00:21:04,150 --> 00:21:07,510
prefix configured on its interfaces.

287
00:21:07,510 --> 00:21:13,360
Auto-summary might be enabled or disabled
by default, depending on the router or VIOS version.

288
00:21:13,360 --> 00:21:16,050
If it’s enabled, disable it.

289
00:21:16,050 --> 00:21:20,400
Actually on the version I’m using here it
is already disabled by default, but I just

290
00:21:20,400 --> 00:21:24,970
wanted to show you that EIGRP also has the
auto-summary feature like RIP, and that you

291
00:21:24,970 --> 00:21:27,910
should make sure it’s turned off.

292
00:21:27,910 --> 00:21:32,630
Then I used the same passive-interface command
as I did for RIP.

293
00:21:32,630 --> 00:21:41,530
Next up I used the NETWORK 10.0.0.0 command
to activate EIGRP on the G0/0 and G1/0 interfaces.

294
00:21:41,530 --> 00:21:45,720
You can use a mask with EIGRP’s NETWORK
command, however it will assume a classful

295
00:21:45,720 --> 00:21:48,350
address if you don’t specify the mask.

296
00:21:48,350 --> 00:21:55,320
So, NETWORK 10.0.0.0 is assumed to be 10.0.0.0/8.

297
00:21:55,320 --> 00:21:57,690
This network command functions like RIP’s.

298
00:21:57,690 --> 00:22:02,950
You aren’t actually telling the router to
advertise the 10.0.0.0/8 network.

299
00:22:02,950 --> 00:22:09,300
You are telling it to activate EIGRP on interfaces
with an IP address that falls in the 10.0.0.0/8

300
00:22:09,300 --> 00:22:14,250
range, so any IP address that begins with
10.

301
00:22:14,250 --> 00:22:21,200
That includes G0/0 and G1/0, so EIGRP is activated
on both interfaces.

302
00:22:21,200 --> 00:22:23,990
If you specify the mask, it looks like this.

303
00:22:23,990 --> 00:22:34,550
This command here, NETWORK 172.16.1.0 0.0.0.15
activates EIGRP on the G2/0 interface.

304
00:22:34,550 --> 00:22:38,210
If this is your first time learning this,
you’re probably a little confused right

305
00:22:38,210 --> 00:22:39,210
now.

306
00:22:39,210 --> 00:22:42,240
What’s 0.0.0.15?

307
00:22:42,240 --> 00:22:48,780
Isn’t the subnet mask for a /28 prefix 255.255.255.240?

308
00:22:48,780 --> 00:22:50,960
Well, yes it is.

309
00:22:50,960 --> 00:22:56,780
But EIGRP uses a ‘wildcard mask’ instead
of a regular subnet mask.

310
00:22:56,780 --> 00:23:00,460
Let me explain what exactly that means.

311
00:23:00,460 --> 00:23:04,670
A wildcard mask is basically an ‘inverted’
subnet mask.

312
00:23:04,670 --> 00:23:11,140
All 1s in the subnet mask are 0 in the equivalent
wildcard mask, and all 0s in the subnet mask

313
00:23:11,140 --> 00:23:13,710
are 1 in the equivalent wildcard mask.

314
00:23:13,710 --> 00:23:15,240
Let’s take a look.

315
00:23:15,240 --> 00:23:18,750
Here’s a subnet mask in binary.

316
00:23:18,750 --> 00:23:22,220
255.255.255.0 in dotted decimal.

317
00:23:22,220 --> 00:23:25,720
If you invert all of the bits, you get this.

318
00:23:25,720 --> 00:23:28,150
0.0.0.255 in dotted decimal.

319
00:23:28,150 --> 00:23:35,010
So, that’s the wildcard mask equivalent
of /24, 0.0.0.255.

320
00:23:35,010 --> 00:23:39,530
Notice all of the 1s in the subnet mask have
become 0, and the 0s in the subnet mask have

321
00:23:39,530 --> 00:23:41,090
become 1.

322
00:23:41,090 --> 00:23:43,240
Here’s another example.

323
00:23:43,240 --> 00:23:49,520
255.255.0.0 becomes 0.0.255.255.

324
00:23:49,520 --> 00:23:53,800
This is the wildcard mask equivalent of /16.

325
00:23:53,800 --> 00:24:00,670
And here’s another, 255.0.0.0 becomes 0.255.255.255.

326
00:24:00,670 --> 00:24:03,510
This is the wildcard mask equivalent of /8.

327
00:24:03,510 --> 00:24:09,380
Okay, so those are easy, now let’s look
at something a little more challenging.

328
00:24:09,380 --> 00:24:18,040
In our network, R1’s G2/0 interface has
a /28 prefix length, 255.255.255.240 written

329
00:24:18,040 --> 00:24:21,200
as a normal subnet mask in dotted decimal.

330
00:24:21,200 --> 00:24:23,760
If you invert the bits, you get this.

331
00:24:23,760 --> 00:24:28,460
If you write that out in dotted decimal, you
get 0.0.0.15.

332
00:24:28,460 --> 00:24:32,510
So, that’s how you write a /28 prefix length
using a wildcard mask.

333
00:24:32,510 --> 00:24:36,090
Let’s do a few more practice questions.

334
00:24:36,090 --> 00:24:43,000
Pause the video now and convert this into
a wildcard mask.

335
00:24:43,000 --> 00:24:49,560
Okay, here’s the answer, 0.0.0.127, that’s
a /25 prefix length.

336
00:24:49,570 --> 00:24:52,250
Let’s try another.

337
00:24:52,250 --> 00:25:00,060
Pause the video now and convert this subnet
mask into a wildcard mask.

338
00:25:00,060 --> 00:25:02,520
Okay, here’s the answer.

339
00:25:02,520 --> 00:25:05,300
0.3.255.255.

340
00:25:05,320 --> 00:25:09,150
That’s how you write a /14 prefix length
as a wildcard mask.

341
00:25:09,150 --> 00:25:12,610
Let’s do one more for now.

342
00:25:12,610 --> 00:25:19,840
Pause the video now and convert this subnet
mask into a wildcard mask.

343
00:25:19,840 --> 00:25:22,000
Okay, here’s the answer.

344
00:25:22,000 --> 00:25:29,920
0.0.31.255, which is a /19 prefix length written
as a wildcard mask.

345
00:25:29,920 --> 00:25:33,700
Although I think it’s always important to
understand the binary underneath all of it,

346
00:25:33,700 --> 00:25:39,000
a good shorcut is to subtract each octet of
the subnet mask from 255.

347
00:25:39,000 --> 00:25:46,550
So, with this subnet mask, for example, 255
minus 255 equals 0.

348
00:25:46,550 --> 00:25:50,290
255 minus 255 equals 0.

349
00:25:50,290 --> 00:25:58,520
255 minus 248 equals 7. and 255 minus 0 equals
255.

350
00:25:58,520 --> 00:26:08,350
So, this /21 subnet mask becomes 0.0.7.255
when written using a wildcard mask.

351
00:26:08,350 --> 00:26:12,880
To finish up with wildcard masks, I’ll explain
a little bit more about their function.

352
00:26:12,880 --> 00:26:19,540
A ‘0’ in the wildcard mask means the bits
must match, between the interface’s IP address

353
00:26:19,540 --> 00:26:21,860
and the EIGRP network command.

354
00:26:21,860 --> 00:26:26,160
A ‘1’ in the wildcard mask means the bits
don’t have to match.

355
00:26:26,160 --> 00:26:33,670
So, the IP address on R1’s G2/0 is 172.16.1.14.

356
00:26:33,670 --> 00:26:43,110
I used the EIGRP network command 172.16.1.0,
with the following wildcard mask: 0.0.0.15.

357
00:26:43,110 --> 00:26:45,880
This means that the first 28 bits must match.

358
00:26:45,880 --> 00:26:47,000
Do they?

359
00:26:47,000 --> 00:26:48,670
Yes they do.

360
00:26:48,670 --> 00:26:53,510
So, we have a match, and EIGRP will be activated
on the interface.

361
00:26:53,510 --> 00:26:57,590
Let’s try another one, see if it will match.

362
00:26:57,590 --> 00:27:01,130
With the same IP address, I used this network
command.

363
00:27:01,130 --> 00:27:08,120
Network 172.16.1.0, with a wildcard mask of
0.0.0.7.

364
00:27:08,120 --> 00:27:11,380
So, this means the first 29 bits must match.

365
00:27:11,380 --> 00:27:12,380
Do they?

366
00:27:12,380 --> 00:27:14,260
Actually, they don’t.

367
00:27:14,260 --> 00:27:19,620
This bit here doesn’t match between R1’s
G2/0 interface and the NETWORK command.

368
00:27:19,620 --> 00:27:24,630
So, no match, and EIGRP will not be activated
on the interface.

369
00:27:24,630 --> 00:27:28,340
Okay, try to figure this out on your own.

370
00:27:28,340 --> 00:27:37,540
With the command NETWORK 172.16.1.8 0.0.0.7,
would EIGRP be activated on the interface?

371
00:27:37,540 --> 00:27:43,840
Pause the video now to find the answer.

372
00:27:43,840 --> 00:27:45,040
Okay, let’s check.

373
00:27:45,040 --> 00:27:50,790
We’re using the same wildcard mask as last
time, so the first 29 bits have to match.

374
00:27:50,790 --> 00:27:52,170
Do they match this time?

375
00:27:52,170 --> 00:28:02,240
Yes they do, the first 29 bits of 172.16.1.14
and the first 29 bits of 172.16.1.8 match.

376
00:28:02,240 --> 00:28:07,950
So, we have a match and EIGRP will be activated
on the interface.

377
00:28:07,950 --> 00:28:12,600
Okay, one last practice question for wildcard
masks.

378
00:28:12,600 --> 00:28:20,670
The network command is NETWORK 168.0.0.0 7.255.255.255.

379
00:28:20,670 --> 00:28:24,800
In this case, would EIGRP be activated on
the interface?

380
00:28:24,800 --> 00:28:30,520
Pause the video now to find the answer.

381
00:28:30,520 --> 00:28:32,280
Okay, let’s check.

382
00:28:32,280 --> 00:28:37,510
With this wildcard mask, only the first 5
bits need to match between the interface IP

383
00:28:37,510 --> 00:28:41,010
address and the EIGRP network command.

384
00:28:41,010 --> 00:28:46,679
The first five bits of the IP address are
1 0 1 0 1, and the first five bits of the

385
00:28:46,679 --> 00:28:53,000
network command are 1 0 1 0 1 as well, so
we once again have a match, and EIGRP will

386
00:28:53,000 --> 00:28:55,390
be activated on the interface.

387
00:28:55,390 --> 00:29:02,100
So, in this case I used a /28 wildcard mask,
the same prefix length of the network G2/0

388
00:29:02,100 --> 00:29:07,290
is connected to, but as I just demonstrated
you can use a variety of wildcard masks to

389
00:29:07,290 --> 00:29:10,020
activate EIGRP on the interface.

390
00:29:10,020 --> 00:29:15,080
However, usually you’ll just keep it simple
and use the same prefix length as the interface

391
00:29:15,080 --> 00:29:17,760
itself, like I did here.

392
00:29:17,760 --> 00:29:24,549
Or maybe use a /32 wildcard mask and specify
the exact IP address on the interface.

393
00:29:24,549 --> 00:29:27,700
How would you write a /32 wildcard mask?

394
00:29:27,700 --> 00:29:38,140
Well, as you know the subnet mask is 255.255.255.255,
so the wildcard mask would be all 0s, 0.0.0.0.

395
00:29:38,140 --> 00:29:45,940
Anyway, OSPF uses wildcard masks also so we’ll
review them again in a future video.

396
00:29:45,940 --> 00:29:50,830
Just remember, this command only specifies
which interface or interfaces to activate

397
00:29:50,830 --> 00:29:52,350
EIGRP on.

398
00:29:52,350 --> 00:30:01,960
R1 will then advertise the network prefix
on that interface, 172.16.1.0/28 in this case.

399
00:30:01,960 --> 00:30:06,570
Let’s take a look at the SHOW IP PROTOCOLS
command when EIGRP is running.

400
00:30:06,570 --> 00:30:13,610
‘Routing protocol is EIGRP 1’, 1 being
the AS number we configured of course.

401
00:30:13,610 --> 00:30:17,210
Remember what I said in the previous video
about EIGRP’s metric?

402
00:30:17,210 --> 00:30:22,700
It uses interface bandwidth and delay by default,
those are the ‘K1’ and ‘K3’ values

403
00:30:22,700 --> 00:30:25,400
that are set to 1 here.

404
00:30:25,400 --> 00:30:29,970
The bandwidth of the SLOWEST link in the path,
plus the sum of the delay values of all the

405
00:30:29,970 --> 00:30:33,820
links in the path, are used to calculate the
metric.

406
00:30:33,820 --> 00:30:40,840
The other k-values, K2, K4, and K5 are set
to 0 by default and are not used to calculate

407
00:30:40,840 --> 00:30:45,160
metric, however that can be changed with configuration.

408
00:30:45,160 --> 00:30:47,210
Next up is the router-ID.

409
00:30:47,210 --> 00:30:54,210
In EIGRP and OSPF, the router has a unique
router ID which identifies it within the AS.

410
00:30:54,210 --> 00:30:58,900
Notice that the default on R1 is 172.16.1.14.

411
00:30:58,900 --> 00:30:59,990
Why is that?

412
00:30:59,990 --> 00:31:03,830
Well, the router ID is determined like this.

413
00:31:03,830 --> 00:31:09,100
First up, if the router ID is manually configured,
that will be the router ID.

414
00:31:09,100 --> 00:31:14,450
If the router ID isn’t manually configured,
the highest IP address on any of the router’s

415
00:31:14,450 --> 00:31:18,290
loopback interfaces will be the router ID.

416
00:31:18,290 --> 00:31:22,360
Loopback interfaces are virtual interfaces
inside the router, I’ll talk about them

417
00:31:22,360 --> 00:31:25,130
more in the OSPF videos.

418
00:31:25,130 --> 00:31:30,570
Finally, if there are no loopback interfaces
configured, as is the case here, the highest

419
00:31:30,570 --> 00:31:35,710
IP address on any of the router’s physical
interfaces will become the router ID.

420
00:31:35,710 --> 00:31:42,240
So, G2/0’s 172.16.1.14 became the router
ID.

421
00:31:42,240 --> 00:31:47,480
Note that the router ID isn’t actually an
IP address, it’s just a 32-bit number formatted

422
00:31:47,480 --> 00:31:52,670
like a dotted-decimal IP address, and you
can change it to any 32 bit number.

423
00:31:52,670 --> 00:31:57,160
Here’s how to configure the EIGRP router-ID.

424
00:31:57,160 --> 00:32:04,250
From EIGRP configuration mode, use the command
EIGRP ROUTER-ID, followed by the router ID

425
00:32:04,250 --> 00:32:09,270
you want to configure, in this case I used
1.1.1.1.

426
00:32:09,270 --> 00:32:14,420
Now you can see that the router ID changes
to 1.1.1.1, since manual configuration takes

427
00:32:14,420 --> 00:32:16,020
highest priority.

428
00:32:16,020 --> 00:32:20,180
Okay, next two fields we saw when learning
about RIP.

429
00:32:20,180 --> 00:32:26,740
Automatic summarization is disabled, as it
should be, and EIGRP also performs ECMP load-balancing

430
00:32:26,740 --> 00:32:31,080
over a maximum of 4 paths by default, like
RIP.

431
00:32:31,080 --> 00:32:37,549
Routing for networks 10.0.0.0 and 172.16.1.0/28.

432
00:32:37,549 --> 00:32:40,340
These are the two NETWORK commands we entered
earlier.

433
00:32:40,340 --> 00:32:48,320
G2/0 is configured as a passive interface,
there are two neighbors, R2 and R3, and EIGRP

434
00:32:48,320 --> 00:32:54,910
has two separate AD values, 90 for internal
routes and 170 for external.

435
00:32:54,910 --> 00:32:57,320
Remember both numbers.

436
00:32:57,320 --> 00:33:03,090
Internal routes are normal EIGRP routes, but
external routes are routes from outside EIGRP

437
00:33:03,090 --> 00:33:10,250
which are then inserted into EIGRP, but that’s
a more advanced topic for the CCNP level.

438
00:33:10,250 --> 00:33:13,830
Finally I want to show you how EIGRP looks
in the routing table.

439
00:33:13,830 --> 00:33:20,620
First, notice that EIGRP routes are indicated
with the letter D, not E. Also, check out

440
00:33:20,620 --> 00:33:22,420
the metric costs.

441
00:33:22,420 --> 00:33:32,420
3072, 3328, 28416, these costs are much higher
than you see in OSPF and RIP, and this is

442
00:33:32,420 --> 00:33:34,600
a very small network.

443
00:33:34,600 --> 00:33:37,440
In large networks, these numbers can get much
larger.

444
00:33:37,440 --> 00:33:42,710
That’s perhaps a downside of EIGRP, the
metrics are harder to understand.

445
00:33:42,710 --> 00:33:48,000
Okay, that’s all we’ll cover about RIP
and EIGRP in this video.

446
00:33:48,000 --> 00:33:53,179
Before moving on to today’s quiz, let’s
review what we covered in this video.

447
00:33:53,179 --> 00:33:57,640
First, we covered the basics of RIP and its
configuration.

448
00:33:57,640 --> 00:33:59,660
Then we did the same for EIGRP.

449
00:33:59,660 --> 00:34:04,429
Again, these aren’t listed on the exam topics
list, but that doesn’t mean you don’t

450
00:34:04,429 --> 00:34:06,200
need to know anything about them.

451
00:34:06,200 --> 00:34:10,690
Also, the things you learned in this video
will make learning OSPF in the next few videos

452
00:34:10,690 --> 00:34:13,029
much easier.

453
00:34:13,029 --> 00:34:18,139
There is one more thing about EIGRP I want
to talk about, its unequal cost load balancing,

454
00:34:18,139 --> 00:34:20,389
but I will cover that in the lab video.

455
00:34:20,389 --> 00:34:23,979
So be sure to watch that video, it’s coming
next.

456
00:34:23,979 --> 00:34:27,940
Also make sure to stick around until the end
of today’s quiz for a bonus question from

457
00:34:27,940 --> 00:34:35,879
Boson ExSim, the best practice exams for the
CCNA, CCNP, as well as other IT exams.

458
00:34:35,879 --> 00:34:39,960
Follow the link in the description to get
a copy of ExSim for yourself, in my opinion

459
00:34:39,960 --> 00:34:43,919
it’s the single best tool to make sure you’re
ready for the real CCNA exam.

460
00:34:43,919 --> 00:34:47,599
Okay, let’s move on to question 1 of the
quiz.

461
00:34:47,599 --> 00:34:52,599
R1 and R2 both use RIP to share routes.

462
00:34:52,599 --> 00:34:58,200
R1 has a default route to the Internet that
you want to advertise to R2.

463
00:34:58,200 --> 00:35:00,109
Which command should you use?

464
00:35:00,109 --> 00:35:05,630
A, from config-router mode on R1, DEFAULT-INFORMATION
ORIGINATE.

465
00:35:05,630 --> 00:35:12,840
B, from config-router mode on R1, NETWORK
203.0.113.0.

466
00:35:12,840 --> 00:35:22,320
C, from global config mode on R2, IP ROUTE
0.0.0.0 0.0.0.0 10.0.12.1.

467
00:35:22,329 --> 00:35:29,400
D, from config-router mode on R2, DEFAULT-INFORMATION
ORIGINATE.

468
00:35:29,400 --> 00:35:35,869
Pause the video to think about the answer.

469
00:35:35,869 --> 00:35:40,660
The answer is A, default-information originate
on R1.

470
00:35:40,660 --> 00:35:44,920
This command is used to advertise R1’s default
route to its RIP neighbors.

471
00:35:44,920 --> 00:35:50,729
B, the NETWORK command, is used to activate
RIP on an interface, not to advertise a default

472
00:35:50,729 --> 00:35:51,729
route.

473
00:35:51,729 --> 00:35:57,789
C, the IP ROUTE command, configures a default
route on R2, but it doesn’t cause R1 to

474
00:35:57,789 --> 00:36:00,499
advertise a default route to R2.

475
00:36:00,499 --> 00:36:06,140
Finally, D is incorrect because we want to
advertise the default route from R1 to R2,

476
00:36:06,140 --> 00:36:07,930
not from R2 to R1.

477
00:36:07,930 --> 00:36:11,020
Let’s go to question 2.

478
00:36:11,020 --> 00:36:20,609
R1’s G1/0 interface has an IP address of
172.20.20.17 and its G2/0 interface has an

479
00:36:20,609 --> 00:36:25,030
IP address of 172.26.20.12.

480
00:36:25,030 --> 00:36:29,779
Which of the following network commands will
activate EIGRP on both interfaces?

481
00:36:29,779 --> 00:36:33,089
I’ll put up the four network commands here.

482
00:36:33,089 --> 00:36:43,780
A, B, C, and D. Pause the video and find the
correct answer.

483
00:36:43,780 --> 00:36:53,380
Okay, the answer is A, network 128.0.0.0 127.255.255.255.

484
00:36:53,380 --> 00:36:57,749
I won’t explain all of them, but let’s
just take a look at the correct answer.

485
00:36:57,749 --> 00:37:05,490
So, I have written the IP addresses of G1/0
and G2/0 in binary, as well as the EIGRP network

486
00:37:05,490 --> 00:37:13,289
command, which is NETWORK 128.0.0.0 127.255.255.255.

487
00:37:13,289 --> 00:37:19,440
Only the first bit of the wildcard mask is
0, so only the first bit has to match.

488
00:37:19,440 --> 00:37:24,180
As you can see, the first bit is 1 in the
network command and each of the IP addresses,

489
00:37:24,180 --> 00:37:27,660
so this command will activate EIGRP on both
interfaces.

490
00:37:27,660 --> 00:37:31,799
Let’s go to question 3.

491
00:37:31,799 --> 00:37:36,559
What is the correct order of priority when
determining the EIGRP router ID?

492
00:37:36,559 --> 00:37:43,599
A, highest loopback interface address, highest
physical interface address, manual configuration.

493
00:37:43,599 --> 00:37:50,640
B, highest physical interface address, highest
loopback address, manual configuration.

494
00:37:50,640 --> 00:37:57,900
C, manual configuration, highest physical
interface address, highest loopback address.

495
00:37:57,900 --> 00:38:04,170
Or D, manual configuration, highest loopback
interface address, highest physical interface

496
00:38:04,170 --> 00:38:05,530
address.

497
00:38:05,530 --> 00:38:11,349
Pause the video to think about your answer.

498
00:38:11,349 --> 00:38:15,739
The answer is D, manual configuration takes
top priority.

499
00:38:15,739 --> 00:38:21,130
If the router ID isn’t manually configured,
the highest IP address on a loopback interface

500
00:38:21,130 --> 00:38:23,740
will become the EIGRP router ID.

501
00:38:23,740 --> 00:38:29,210
Finally, if there are no loopback interfaces,
the highest IP address on a physical interface

502
00:38:29,210 --> 00:38:31,410
will become the EIGRP router ID.

503
00:38:31,410 --> 00:38:37,779
Okay, let’s move on to take a look at a
bonus question from Boson ExSim for CCNA.

504
00:38:37,779 --> 00:38:44,769
Okay, for today's Boson ExSim practice question
we have a question about route selection.

505
00:38:44,769 --> 00:38:47,239
So let's get right into it.

506
00:38:47,239 --> 00:38:51,680
In which of the following situations does
a router use AD values to determine route

507
00:38:51,680 --> 00:38:52,680
selection?

508
00:38:52,680 --> 00:38:53,940
Select the best answer.

509
00:38:53,940 --> 00:38:58,750
Okay, pause the video here to take a look
at each of the options and try to select the

510
00:38:58,750 --> 00:39:04,920
correct answer.

511
00:39:04,920 --> 00:39:06,599
Okay, hopefully you found it.

512
00:39:06,599 --> 00:39:08,979
So let's go through each of them one by one.

513
00:39:08,979 --> 00:39:14,560
First up, A. When multiple routes to different
destination networks are received, and each

514
00:39:14,560 --> 00:39:17,549
of these routes is received from a different
routing protocol.

515
00:39:17,549 --> 00:39:20,029
So, I think A is incorrect.

516
00:39:20,029 --> 00:39:21,249
Why is that?

517
00:39:21,249 --> 00:39:25,609
That's because each of the routes is to a
different destination network.

518
00:39:25,609 --> 00:39:30,079
So the router doesn't have to choose between
them, it will simply put in all of the routes

519
00:39:30,079 --> 00:39:33,660
in the routing table, because they are to
different destinations.

520
00:39:33,660 --> 00:39:35,109
So I think A is incorrect.

521
00:39:35,109 --> 00:39:36,819
How about B?

522
00:39:36,819 --> 00:39:41,150
When multiple routes to the same destination
network are received, and all of these routes

523
00:39:41,150 --> 00:39:44,789
are received from the same routing protocol.

524
00:39:44,789 --> 00:39:47,059
So B is also incorrect.

525
00:39:47,059 --> 00:39:51,280
So, all of the routes are to the same destination
network, so the router is going to have to

526
00:39:51,280 --> 00:39:54,880
choose which one to put in the routing table.

527
00:39:54,880 --> 00:39:58,609
However all of the routes are from the same
routing protocol, so the router won't use

528
00:39:58,609 --> 00:40:03,109
AD to determine which route, because they
all have the same AD.

529
00:40:03,109 --> 00:40:05,539
Instead it will use the metric value.

530
00:40:05,539 --> 00:40:08,740
Okay, how about C?

531
00:40:08,740 --> 00:40:13,220
When multiple routes to different destination
networks are received, and all of these routes

532
00:40:13,220 --> 00:40:16,369
are received from the same routing protocol.

533
00:40:16,369 --> 00:40:20,960
So, different destination networks again,
so C should be incorrect.

534
00:40:20,960 --> 00:40:26,029
Because once again, just like in A, the router
will put all of the routes in the routing

535
00:40:26,029 --> 00:40:29,249
table because they are to different destinations.

536
00:40:29,249 --> 00:40:31,440
So let's see if D is correct.

537
00:40:31,440 --> 00:40:35,670
When multiple routes to the same destination
network are received, so, same network so

538
00:40:35,670 --> 00:40:39,960
the router will have to choose which one to
put in the routing table.

539
00:40:39,960 --> 00:40:43,579
And each of these routes is received from
a different routing protocol.

540
00:40:43,579 --> 00:40:48,380
Okay, so different routing protocol, to the
same destination network.

541
00:40:48,380 --> 00:40:51,821
Because the routing protocol is different
the router can't compare the metrics, because

542
00:40:51,821 --> 00:40:54,789
each routing protocol uses a totally different
metric.

543
00:40:54,789 --> 00:40:57,869
So, instead the router will compare the AD
values.

544
00:40:57,869 --> 00:41:01,009
So I think D is the correct answer, let's
see.

545
00:41:01,009 --> 00:41:03,599
There we go, it is.

546
00:41:03,599 --> 00:41:08,619
And here is Boson's explanation, including
a chart of the AD values of different routing

547
00:41:08,619 --> 00:41:10,150
protocols and types of routes.

548
00:41:10,150 --> 00:41:16,619
I covered these in day 24, directly connected,
static, EIGRP summary route, I don't think

549
00:41:16,619 --> 00:41:18,329
I mentioned that one.

550
00:41:18,329 --> 00:41:19,999
eBGP, and others.

551
00:41:19,999 --> 00:41:26,359
Okay, so if you want further reading on top
of Boson's explanation you can check this

552
00:41:26,359 --> 00:41:29,369
reference here, Cisco: Route Selection in
Cisco Routers.

553
00:41:29,369 --> 00:41:35,099
So this is a link to free Cisco documentation
online which is another great study resource.

554
00:41:35,099 --> 00:41:38,839
Okay, so that's today's Boson ExSim practice
question.

555
00:41:38,839 --> 00:41:42,390
I highly recommend picking up a copy of Boson
ExSim.

556
00:41:42,390 --> 00:41:47,619
I used it myself to study for my CCNA and
CCNP and it really helped me pass all of my

557
00:41:47,619 --> 00:41:49,670
exams on the first try.

558
00:41:49,670 --> 00:41:57,359
So if you want to get a copy of Boson ExSim,
please follow the link in the video description.

559
00:41:57,359 --> 00:41:59,819
There are supplementary materials for this
video.

560
00:41:59,819 --> 00:42:03,130
There is a flashcard deck to use with the
software ‘Anki’.

561
00:42:03,130 --> 00:42:08,880
There will also be a packet tracer practice
lab so you can get some hands-on practice.

562
00:42:08,880 --> 00:42:11,180
That will be in the next video.

563
00:42:11,180 --> 00:42:15,239
I especially recommend watching today’s
lab video, since I will cover an aspect of

564
00:42:15,239 --> 00:42:21,500
EIGRP I only briefly mentioned in this video,
that is unequal-cost load-balancing.

565
00:42:21,500 --> 00:42:24,950
Sign up for my mailing list via the link in
the description, and I’ll send you all of

566
00:42:24,950 --> 00:42:30,150
the flashcards and packet tracer lab files
for the course.

567
00:42:30,150 --> 00:42:34,849
Before finishing today’s video I want to
thank my JCNP-level channel members.

568
00:42:34,849 --> 00:42:41,380
Thank you to Ed, Tillman, Value, Magrathea,
Justin, John, Funnydart, Scott, Hassan, Gerrard,

569
00:42:41,380 --> 00:42:48,239
Tibi, Vikram, Joyce, Marek, Velvijaykum, C
Mohd, Johan, Mark, Miguel, Yousif, Kone, Boson

570
00:42:48,239 --> 00:42:54,089
Software, the makers of ExSim, Sidi, Devin,
Charlsetta, Lito, Yonatan, Mike, Aleksander,

571
00:42:54,089 --> 00:42:55,089
and Vance.

572
00:42:55,089 --> 00:43:00,200
Sorry if I pronounced your name incorrectly,
but thank you so much for your support.

573
00:43:00,200 --> 00:43:04,170
One of you is still displaying as Channel
failed to load, if this is you please let

574
00:43:04,170 --> 00:43:07,180
me know and I’ll see if YouTube can fix
it.

575
00:43:07,180 --> 00:43:12,710
This is the list of JCNP-level members at
the time of recording by the way, July 7th

576
00:43:12,710 --> 00:43:17,079
2020, if you signed up recently and your name
isn’t on here don’t worry, you’ll be

577
00:43:17,079 --> 00:43:20,240
in future videos.

578
00:43:20,240 --> 00:43:21,819
Thank you for watching.

579
00:43:21,819 --> 00:43:25,720
Please subscribe to the channel, like the
video, leave a comment, and share the video

580
00:43:25,720 --> 00:43:29,069
with anyone else studying for the CCNA.

581
00:43:29,069 --> 00:43:31,710
If you want to leave a tip, check the links
in the description.

582
00:43:31,710 --> 00:43:37,700
I'm also a Brave verified publisher and accept
BAT, or Basic Attention Token, tips via the

583
00:43:37,700 --> 00:43:39,219
Brave browser.

584
00:43:39,220 --> 00:43:40,400
That's all for now.
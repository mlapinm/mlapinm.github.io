1
00:00:00,729 --> 00:00:03,149
Welcome to Jeremy’s IT Lab.

2
00:00:03,149 --> 00:00:06,720
This is a free, complete course for the CCNA.

3
00:00:06,720 --> 00:00:10,289
If you like these videos, please subscribe
to follow along with the series.

4
00:00:10,289 --> 00:00:15,029
Also, please like and leave a comment, and
share the video to help spread this free series

5
00:00:15,029 --> 00:00:16,090
of videos.

6
00:00:16,090 --> 00:00:18,010
Thanks for your help.

7
00:00:18,010 --> 00:00:21,419
In this video we will talk about DHCP snooping.

8
00:00:21,419 --> 00:00:26,800
DHCP snooping is a security feature available
on Cisco switches which helps to protect against

9
00:00:26,800 --> 00:00:30,000
attacks which take advantage of DHCP.

10
00:00:30,000 --> 00:00:35,850
DHCP snooping is covered in exam topic 5.7,
which says that you must be able to configure

11
00:00:35,850 --> 00:00:43,489
layer 2 security features including DHCP snooping,
dynamic ARP inspection, and port security.

12
00:00:43,489 --> 00:00:48,149
We already covered port security, and dynamic
ARP inspection will be the next video.

13
00:00:48,149 --> 00:00:51,920
But for this video, let’s focus on DHCP
snooping.

14
00:00:51,920 --> 00:00:54,559
Here’s what we’ll cover in this video.

15
00:00:54,559 --> 00:00:59,339
Basically, it will be similar in structure
to the previous video on port security.

16
00:00:59,339 --> 00:01:05,250
I’ll introduce what DHCP snooping is, how
it works, what attacks it prevents, and how

17
00:01:05,250 --> 00:01:08,430
to configure it on Cisco switches.

18
00:01:08,430 --> 00:01:12,280
And make sure to watch until the end of the
video for a bonus practice question from Boson

19
00:01:12,280 --> 00:01:17,850
Software’s ExSim for CCNA, my recommended
practice exams for the CCNA.

20
00:01:17,850 --> 00:01:22,740
Okay, let’s take a look at the basics of
DHCP snooping.

21
00:01:22,740 --> 00:01:28,390
DHCP snooping is a security feature of switches
that is used to filter DHCP messages received

22
00:01:28,390 --> 00:01:30,190
on untrusted ports.

23
00:01:30,190 --> 00:01:34,280
I’ll tell you more about untrusted ports
in a minute.

24
00:01:34,280 --> 00:01:38,220
Note that DHCP snooping only filters DHCP
messages.

25
00:01:38,220 --> 00:01:41,890
Any other non-DHCP messages aren’t affected.

26
00:01:41,890 --> 00:01:43,890
All ports are untrusted by default.

27
00:01:43,890 --> 00:01:48,030
It’s then up to you to configure which ports
will be trusted.

28
00:01:48,030 --> 00:01:54,300
Usually, uplink ports are configured as trusted
ports, and downlink ports remain untrusted.

29
00:01:54,300 --> 00:01:56,720
I’ll use this diagram to explain.

30
00:01:56,720 --> 00:02:02,500
So, R1 is either a DHCP server or a DHCP relay
agent.

31
00:02:02,500 --> 00:02:08,690
The end hosts, the PCs, will use DHCP to receive
an IP address from R1.

32
00:02:08,690 --> 00:02:13,740
The downlink ports on the switches, the interfaces
pointing towards the end hosts, should be

33
00:02:13,740 --> 00:02:15,310
untrusted.

34
00:02:15,310 --> 00:02:19,099
The network admin doesn’t have direct control
over the end user devices.

35
00:02:19,099 --> 00:02:24,810
A malicious user could initiate a DHCP-based
attack from one of their devices, so it’s

36
00:02:24,810 --> 00:02:28,480
best to leave these ports in the default untrusted
state.

37
00:02:28,480 --> 00:02:32,280
So, which interfaces are downlink ports?

38
00:02:32,280 --> 00:02:35,920
These ones, because they point toward the
end hosts.

39
00:02:35,920 --> 00:02:40,629
However the uplink ports point toward the
network infrastructure, the devices the network

40
00:02:40,629 --> 00:02:42,940
admin has control over.

41
00:02:42,940 --> 00:02:48,120
We can be pretty sure, for example, that R1
isn’t going to initiate some kind of DHCP-based

42
00:02:48,120 --> 00:02:49,120
attack.

43
00:02:49,120 --> 00:02:53,379
So, we can configure these interfaces as trusted
ports.

44
00:02:53,379 --> 00:02:58,599
DHCP snooping won’t inspect any messages
on trusted ports, the switch will simply forward

45
00:02:58,599 --> 00:03:00,049
them as normal.

46
00:03:00,049 --> 00:03:03,510
So, which ports are uplink ports?

47
00:03:03,510 --> 00:03:08,450
These ones, because they point away from the
end hosts, toward the network infrastructure.

48
00:03:08,450 --> 00:03:13,269
DHCP snooping won’t inspect DHCP messages
on these ports.

49
00:03:13,269 --> 00:03:18,150
Now let’s look at an example of DHCP snooping.

50
00:03:18,150 --> 00:03:23,060
PC1 sends a DHCP message, for example a DISCOVER
message.

51
00:03:23,060 --> 00:03:29,260
SW1 receives the message on an untrusted port,
so it inspects the message to see if it’s

52
00:03:29,260 --> 00:03:30,260
okay.

53
00:03:30,260 --> 00:03:34,689
It determines that the message is fine, so
it forwards it as normal.

54
00:03:34,689 --> 00:03:38,739
Then SW2 receives it, again on an untrusted
interface.

55
00:03:38,739 --> 00:03:43,450
It checks the message and determines that
it’s okay, so it forwards it to R1.

56
00:03:43,450 --> 00:03:49,359
R1 then sends the reply, and it goes straight
back to PC1 without being inspected by SW2

57
00:03:49,359 --> 00:03:50,359
or SW1.

58
00:03:50,359 --> 00:03:53,909
Why don’t the switches inspect the message
from R1?

59
00:03:53,909 --> 00:03:59,120
It’s because they received it on their trusted
ports, so they assume the message is okay.

60
00:03:59,120 --> 00:04:00,359
No need to check it.

61
00:04:00,359 --> 00:04:03,329
Now here’s another example.

62
00:04:03,329 --> 00:04:06,489
This time PC2 sends a DHCP message.

63
00:04:06,489 --> 00:04:10,760
SW1 receives it on an untrusted port, so it
inspects the message.

64
00:04:10,760 --> 00:04:16,109
However, this time it determines that the
message is not OK, so it discards the message.

65
00:04:16,109 --> 00:04:21,190
Later in this video I’ll go over exactly
how DHCP snooping determines if a message

66
00:04:21,190 --> 00:04:25,360
is OK or not, so I won’t get into the details
now.

67
00:04:25,360 --> 00:04:31,200
But perhaps the user of PC2 was trying to
use a DHCP exploit, so SW1 decided to drop

68
00:04:31,200 --> 00:04:32,620
the message.

69
00:04:32,620 --> 00:04:38,640
Okay, next let’s look at a couple examples
of DHCP-based attacks that DHCP snooping can

70
00:04:38,640 --> 00:04:41,510
protect against.

71
00:04:41,510 --> 00:04:46,890
First up, let’s quickly review a type of
attack you already know, the DHCP starvation,

72
00:04:46,890 --> 00:04:50,470
also called DHCP exhaustion, attack.

73
00:04:50,470 --> 00:04:56,520
In this attack, an attacker uses spoofed MAC
addresses to flood DHCP Discover messages.

74
00:04:56,520 --> 00:04:58,710
And what’s the purpose of that?

75
00:04:58,710 --> 00:05:03,600
The target server’s DHCP pool becomes full,
resulting in a denial-of-service to other

76
00:05:03,600 --> 00:05:04,930
devices.

77
00:05:04,930 --> 00:05:08,410
They won’t be able to get an IP address
from the server.

78
00:05:08,410 --> 00:05:11,100
You already know this by now, but here’s
a review.

79
00:05:11,100 --> 00:05:16,500
The attacker sends DHCP discover messages
with false source MAC addresses.

80
00:05:16,500 --> 00:05:22,090
Now, something I didn’t mention before is
that DHCP actually uses a field in the DHCP

81
00:05:22,090 --> 00:05:29,250
message, written as CHADDR, which stands for
Client Hardware Address, to indicate the MAC

82
00:05:29,250 --> 00:05:31,150
address of the client.

83
00:05:31,150 --> 00:05:34,970
Why is this field needed, when the server
could just look at the source MAC address

84
00:05:34,970 --> 00:05:35,970
of the frame?

85
00:05:35,970 --> 00:05:41,490
Well, in a network like this where the DHCP
server is in the local network, that would

86
00:05:41,490 --> 00:05:42,930
work fine.

87
00:05:42,930 --> 00:05:48,750
But if the DHCP server is in a remote network
and the DHCP messages are forwarded by a DHCP

88
00:05:48,750 --> 00:05:53,800
relay agent, when the server receives the
frames from the client, the source MAC address

89
00:05:53,800 --> 00:05:56,840
of the frame will not be the client’s MAC
address.

90
00:05:56,840 --> 00:06:01,880
So, that’s why the client hardware address
field is used to identify the client.

91
00:06:01,880 --> 00:06:04,580
Anyway, that’s just an aside.

92
00:06:04,580 --> 00:06:08,770
The attacker sends countless fake DHCP Discover
messages like this.

93
00:06:08,770 --> 00:06:14,660
Then, when the other devices in the network
try to get IP addresses via DHCP, the server

94
00:06:14,660 --> 00:06:21,650
is not able to assign them addresses, resulting
in a denial of service to those clients.

95
00:06:21,650 --> 00:06:25,670
And here’s one more example of a DHCP-based
attack.

96
00:06:25,670 --> 00:06:31,150
Similar to ARP poisoning, DHCP poisoning can
be used to perform a man-in-the-middle attack.

97
00:06:31,150 --> 00:06:38,200
A spurious DHCP server, that just mean an
illegitimate DHCP server, replies to clients’

98
00:06:38,200 --> 00:06:42,000
DHCP Discover messages and assigns them IP
addresses.

99
00:06:42,000 --> 00:06:46,590
But it makes the clients use the spurious
DHCP server’s IP address as the default

100
00:06:46,590 --> 00:06:47,590
gateway.

101
00:06:47,590 --> 00:06:54,290
So, in the network below the attacker is running
DHCP server software, it is the spurious DHCP

102
00:06:54,290 --> 00:06:55,290
server.

103
00:06:55,290 --> 00:07:00,480
R1 is the legitimate DHCP server, and also
the default gateway.

104
00:07:00,480 --> 00:07:05,330
Both of these DHCP servers will respond to
clients’ Discover messages, but clients

105
00:07:05,330 --> 00:07:08,610
usually accept the first Offer message they
receive.

106
00:07:08,610 --> 00:07:13,310
Now, in a situation like this it’s hard
to know which Offer message will reach the

107
00:07:13,310 --> 00:07:17,430
clients first, the attacker’s Offer or R1’s
Offer.

108
00:07:17,430 --> 00:07:23,020
But, if the legitimate DHCP server is actually
in a remote network and R1 is just acting

109
00:07:23,020 --> 00:07:28,260
as a DHCP relay agent, then it’s almost
guaranteed that the attacker’s Offer will

110
00:07:28,260 --> 00:07:31,770
reach the clients first, because it’s in
the local network.

111
00:07:31,770 --> 00:07:33,860
No need to forward traffic to a remote network.

112
00:07:33,860 --> 00:07:39,360
So, if the clients use the attacker as their
default gateway, when sending traffic to external

113
00:07:39,360 --> 00:07:44,990
networks they will send traffic to the attacker
instead of the legitimate default gateway.

114
00:07:44,990 --> 00:07:49,750
The attacker can then examine and/or modify
the traffic before forwarding it to the legitimate

115
00:07:49,750 --> 00:07:50,750
default gateway.

116
00:07:50,750 --> 00:07:53,150
Let’s walk through that process.

117
00:07:53,150 --> 00:07:59,200
PC1 sends a DHCP Discover message and it is
broadcast to all devices on the local network,

118
00:07:59,200 --> 00:08:00,800
including the attacker.

119
00:08:00,800 --> 00:08:05,520
So, both the attacker and R1 send Offer messages
for PC1.

120
00:08:05,520 --> 00:08:10,580
However, in this case the attacker’s Offer
reaches PC1 first.

121
00:08:10,580 --> 00:08:15,640
Because it arrives first, PC1 will choose
to accept it, and not R1’s Offer.

122
00:08:15,640 --> 00:08:19,260
So, PC1 will send a DECLINE message to R1.

123
00:08:19,260 --> 00:08:24,230
I haven’t introduced this message type yet,
but I think you can guess its purpose.

124
00:08:24,230 --> 00:08:33,240
However, with the attacker it completes the
DHCP D-O-R-A process, and now PC1 has an IP

125
00:08:33,240 --> 00:08:39,370
address, 172.16.1.10, and its default gateway
is the attacker, 172.16.1.2.

126
00:08:39,370 --> 00:08:45,660
So, if PC1 wants to send traffic to an external
network, for example the Internet, it will

127
00:08:45,660 --> 00:08:47,910
send the traffic to the attacker.

128
00:08:47,910 --> 00:08:52,180
The attacker can then examine the traffic
or even modify it, before finally forwarding

129
00:08:52,180 --> 00:08:57,870
it to the legitimate default gateway, which
will send it to the external destination.

130
00:08:57,870 --> 00:09:02,579
Because the traffic does reach its destination,
PC1 probably won’t even notice that its

131
00:09:02,579 --> 00:09:06,240
traffic is being intercepted by the attacker.

132
00:09:06,240 --> 00:09:13,310
So those were two examples of DHCP-based attacks
which DHCP snooping can protect against, DHCP

133
00:09:13,310 --> 00:09:15,560
starvation and DHCP poisoning.

134
00:09:15,560 --> 00:09:19,709
Now let’s continue looking at DHCP snooping
itself.

135
00:09:19,709 --> 00:09:26,430
Let’s review the DHCP message types you
already know, and learn about a few more.

136
00:09:26,430 --> 00:09:33,671
When DHCP snooping filters messages, it differentiates
between DHCP server messages and DHCP client

137
00:09:33,671 --> 00:09:34,870
messages.

138
00:09:34,870 --> 00:09:41,040
DHCP server messages received on an untrusted
port will always be discarded with no further

139
00:09:41,040 --> 00:09:42,040
checks.

140
00:09:42,040 --> 00:09:47,279
DHCP client messages will be inspected, and
then the switch will decide to forward or

141
00:09:47,279 --> 00:09:49,060
discard the frame.

142
00:09:49,060 --> 00:09:53,290
So, here are messages sent by DHCP servers.

143
00:09:53,290 --> 00:09:59,230
OFFER and ACK you already know, they are used
in the standard DHCP D-O-R-A exchange.

144
00:09:59,230 --> 00:10:05,589
NAK is a new one, it’s the opposite of ACK
and is used to decline a DHCP client’s REQUEST

145
00:10:05,589 --> 00:10:07,240
message.

146
00:10:07,240 --> 00:10:10,480
And here are messages sent by DHCP clients.

147
00:10:10,480 --> 00:10:16,420
You already know DISCOVER and REQUEST, again
they are used in the D-O-R-A exchange.

148
00:10:16,420 --> 00:10:21,079
RELEASE you already know too, I introduced
it in the DHCP video.

149
00:10:21,079 --> 00:10:27,709
But for review, it’s used to tell the server
that the client no longer needs its IP address.

150
00:10:27,709 --> 00:10:30,540
And then there’s DECLINE, which I just showed
earlier.

151
00:10:30,540 --> 00:10:35,709
It’s used to decline the IP address offered
by a DHCP server.

152
00:10:35,709 --> 00:10:40,730
Make sure you learn which messages are sent
by DHCP servers and which are sent by DHCP

153
00:10:40,730 --> 00:10:41,730
clients.

154
00:10:41,730 --> 00:10:45,089
It’s an important part of understanding
DHCP snooping.

155
00:10:45,089 --> 00:10:50,579
Next, I’ll give you an outline of DHCP snooping
operations.

156
00:10:50,579 --> 00:10:55,079
By that I mean, how it works to filter DHCP
messages.

157
00:10:55,079 --> 00:11:00,529
First of all, if a DHCP message is received
on a trusted port, forward it as normal without

158
00:11:00,529 --> 00:11:01,899
inspection.

159
00:11:01,899 --> 00:11:04,829
Messages received on trusted ports won’t
be dropped.

160
00:11:04,829 --> 00:11:11,800
But, if a DHCP message is received on an untrusted
port, inspect it and act as follows.

161
00:11:11,800 --> 00:11:16,120
First, if it’s a DHCP server message, discard
it.

162
00:11:16,120 --> 00:11:21,720
DHCP servers should not be connected to untrusted
ports, their ports should be trusted.

163
00:11:21,720 --> 00:11:27,600
So, any OFFER, ACK, or NAK messages that are
received on an untrusted port will simply

164
00:11:27,600 --> 00:11:28,970
be discarded.

165
00:11:28,970 --> 00:11:36,110
However, if the message is a DHCP client message,
DISCOVER REQUEST RELEASE or DECLINE, perform

166
00:11:36,110 --> 00:11:37,569
the following checks.

167
00:11:37,569 --> 00:11:41,329
So, these checks depend on what kind of message
it is.

168
00:11:41,329 --> 00:11:47,650
First, for DISCOVER and REQUEST messages,
the messages in the D-O-R-A exchange, check

169
00:11:47,650 --> 00:11:53,029
if the frame’s source MAC address and the
DHCP message’s client hardware address fields

170
00:11:53,029 --> 00:11:54,180
match.

171
00:11:54,180 --> 00:11:56,369
If they match, forward the frame.

172
00:11:56,369 --> 00:11:58,720
If they don’t discard it.

173
00:11:58,720 --> 00:12:03,459
This can protect against attacks when an attacker
spoofs the client hardware address field of

174
00:12:03,459 --> 00:12:05,779
the DHCP message.

175
00:12:05,779 --> 00:12:09,730
However it’s not perfect, because the attacker
could just spoof the frame’s source MAC

176
00:12:09,730 --> 00:12:11,350
address too.

177
00:12:11,350 --> 00:12:17,550
Then, for RELEASE and DECLINE messages, check
if the packet’s source IP address and the

178
00:12:17,550 --> 00:12:23,610
interface receiving the message match the
entry in the DHCP snooping binding table.

179
00:12:23,610 --> 00:12:25,800
If they match, forward the message.

180
00:12:25,800 --> 00:12:27,399
If they don’t, discard it.

181
00:12:27,399 --> 00:12:31,619
I haven’t mentioned the DHCP snooping binding
table yet.

182
00:12:31,619 --> 00:12:37,110
When DHCP snooping is enabled, the switch
will create a new entry in the DHCP snooping

183
00:12:37,110 --> 00:12:43,009
binding table when a client successfully leases
an IP address from a DHCP server.

184
00:12:43,009 --> 00:12:47,230
Let’s take a look at that in the next slide.

185
00:12:47,230 --> 00:12:50,639
So let’s go over some basic DHCP snooping
configurations.

186
00:12:50,639 --> 00:12:55,709
First, on SW2 I used IP DHCP SNOOPING.

187
00:12:55,709 --> 00:12:59,329
This enables DHCP snooping on the switch,
but it’s not enough.

188
00:12:59,329 --> 00:13:06,509
I then used IP DHCP SNOOPING VLAN 1 to tell
SW2 to enable it on VLAN 1.

189
00:13:06,509 --> 00:13:12,949
So, you need to enable DHCP snooping globally,
with IP DHCP SNOOPING, and then enable it

190
00:13:12,949 --> 00:13:17,410
on each VLAN necessary, with IP DHCP SNOOPING
VLAN.

191
00:13:17,410 --> 00:13:23,449
So, I enabled it for VLAN 1 because that’s
the only VLAN in this network.

192
00:13:23,449 --> 00:13:27,279
Then I used NO IP DHCP SNOOPING INFORMATION
OPTION.

193
00:13:27,279 --> 00:13:30,639
I’m going to explain this later, so we’ll
skip it for now.

194
00:13:30,639 --> 00:13:35,800
It’s not always necessary, but depending
on the network design you might need it.

195
00:13:35,800 --> 00:13:41,660
Finally, I configure the G0/0 interface as
a trusted port.

196
00:13:41,660 --> 00:13:46,559
As I said before, by default all ports will
be untrusted, so you will have to manually

197
00:13:46,559 --> 00:13:49,679
specify which ports to trust.

198
00:13:49,679 --> 00:13:56,079
G0/0 is connected to R1, which is the DHCP
server in this network, so I trusted it.

199
00:13:56,079 --> 00:13:59,300
Okay, that’s all for SW2.

200
00:13:59,300 --> 00:14:02,350
Then I did the exact same configurations on
SW1.

201
00:14:02,350 --> 00:14:09,129
I configured SW1’s G0/0 as trusted, because
it’s the interface pointing toward the DHCP

202
00:14:09,129 --> 00:14:11,290
server, R1.

203
00:14:11,290 --> 00:14:18,579
Then I checked the DHCP snooping binding table
with the command SHOW IP DHCP SNOOPING BINDING.

204
00:14:18,579 --> 00:14:25,639
As you can see, PC1, PC2, and PC3 were able
to get IP addresses via DHCP.

205
00:14:25,639 --> 00:14:33,069
This table logs their MAC addresses, IP addresses,
lease times, VLAN numbers, and interface IDs.

206
00:14:33,069 --> 00:14:37,889
As I mentioned in the previous slide, RELEASE
and DECLINE messages will be checked to make

207
00:14:37,889 --> 00:14:44,540
sure their IP address and interface ID match
the entry in the DHCP snooping table.

208
00:14:44,540 --> 00:14:48,630
This prevents attackers from sending these
messages on behalf of other devices in the

209
00:14:48,630 --> 00:14:53,629
network, causing the DHCP server to believe
that they don’t need their IP addresses

210
00:14:53,629 --> 00:14:54,869
anymore.

211
00:14:54,869 --> 00:15:00,730
Okay, next up another function of DHCP snooping,
that is rate-limiting.

212
00:15:00,730 --> 00:15:07,740
DHCP snooping can limit the rate at which
DHCP messages are allowed to enter an interface.

213
00:15:07,740 --> 00:15:12,850
If the rate of DHCP messages crosses the configured
limit, the interface is err-disabled.

214
00:15:12,850 --> 00:15:18,970
Then, similar to port security, the interface
can be manually re-enabled with SHUTDOWN and

215
00:15:18,970 --> 00:15:24,139
then NO SHUTDOWN, or automatically re-enabled
with errdisable recovery.

216
00:15:24,139 --> 00:15:27,499
Here’s how to configure DHCP rate limiting.

217
00:15:27,499 --> 00:15:36,600
I configured it on SW1’s G0/1, 2, and 3
with IP DHCP SNOOPING LIMIT RATE 1.

218
00:15:36,600 --> 00:15:40,199
This limits DHCP messages to 1 per second.

219
00:15:40,199 --> 00:15:45,649
If the interface receives more than 1 DHCP
message per second, it will be disabled.

220
00:15:45,649 --> 00:15:48,720
Now, this is too low for a real network.

221
00:15:48,720 --> 00:15:53,649
If you set the limit to 1 DHCP message per
second, your switch interfaces will definitely

222
00:15:53,649 --> 00:15:57,769
get disabled even by legitimate DHCP exchanges.

223
00:15:57,769 --> 00:16:04,059
But, I set it to 1 so I could easily make
SW1’s G0/1 become disabled.

224
00:16:04,059 --> 00:16:05,570
And that’s what happened.

225
00:16:05,570 --> 00:16:11,089
These log messages show that G0/1 received
more DHCP messages than it’s allowed to,

226
00:16:11,089 --> 00:16:12,420
so it was err-disabled.

227
00:16:12,420 --> 00:16:19,059
So, we could manually re-enable it, but let’s
look at errdisable recovery again.

228
00:16:19,059 --> 00:16:25,689
Here’s how to enable errdisable recovery
for DHCP rate limiting.

229
00:16:25,689 --> 00:16:30,100
ERRDISABLE RECOVERY CAUSE DHCP-RATE-LIMIT.

230
00:16:30,100 --> 00:16:35,449
I then checked SHOW ERRDISABLE RECOVERY, and
notice that recovery has been enabled for

231
00:16:35,449 --> 00:16:39,040
the DHCP-RATE-LIMIT cause.

232
00:16:39,040 --> 00:16:44,709
Also notice at the bottom that G0/1 is waiting
for the timer to count down so it can be re-enabled.

233
00:16:44,709 --> 00:16:49,300
So, what’s the purpose of rate-limiting
DHCP messages?

234
00:16:49,300 --> 00:16:54,769
Well, it can be very useful to protect against
DHCP exhaustion attacks.

235
00:16:54,769 --> 00:17:00,819
Remember, attackers can spoof both the frame’s
source MAC address and the DHCP message’s

236
00:17:00,819 --> 00:17:06,819
client hardware address field to bypass the
DHCP snooping filtering of DISCOVER and REQUEST

237
00:17:06,819 --> 00:17:07,819
messages.

238
00:17:07,819 --> 00:17:13,120
But, with rate limiting we can prevent them
from exhausting the DHCP server with tons

239
00:17:13,120 --> 00:17:16,799
of illegitimate DHCP DISCOVER messages.

240
00:17:16,799 --> 00:17:21,120
If the attacker tries to flood the server
with DISCOVER messages, the interface will

241
00:17:21,120 --> 00:17:22,709
just be disabled.

242
00:17:22,709 --> 00:17:26,740
So, this is a very useful function of DHCP
Snooping.

243
00:17:26,740 --> 00:17:33,620
Okay, let’s go over that command that I
said I would explain earlier, NO IP DHCP SNOOPING

244
00:17:33,620 --> 00:17:35,360
INFORMATION OPTION.

245
00:17:35,360 --> 00:17:39,150
First, what is the information option?

246
00:17:39,150 --> 00:17:47,380
Option 82, also known as the DHCP relay agent
information option, is one of many DHCP options.

247
00:17:47,380 --> 00:17:52,720
In the DHCP video of this course I mentioned
that there are various DHCP options that provide

248
00:17:52,720 --> 00:17:55,150
different functionalities.

249
00:17:55,150 --> 00:17:57,950
Option 82 is one of them.

250
00:17:57,950 --> 00:18:03,480
Option 82 provides additional information
about which DHCP relay agent received the

251
00:18:03,480 --> 00:18:08,080
client’s message, on which interface, in
which VLAN, etc.

252
00:18:08,080 --> 00:18:15,659
DHCP relay agents can add Option 82 to messages
they forward to the remote DHCP server.

253
00:18:15,659 --> 00:18:22,570
With DHCP snooping enabled, by default Cisco
switches will add Option 82 to DHCP messages

254
00:18:22,570 --> 00:18:28,740
they receive from clients, even if the switch
isn’t acting as a DHCP relay agent.

255
00:18:28,740 --> 00:18:29,980
This can cause problems.

256
00:18:29,980 --> 00:18:32,130
Here’s one of them.

257
00:18:32,130 --> 00:18:37,909
By default, Cisco switches will drop DHCP
messages with Option 82 that are received

258
00:18:37,909 --> 00:18:39,460
on an untrusted port.

259
00:18:39,460 --> 00:18:41,559
Let me demonstrate.

260
00:18:41,559 --> 00:18:48,830
PC1 sends a DISCOVER message, and SW1 forwards
it to SW2, adding Option 82.

261
00:18:48,830 --> 00:18:53,320
Because SW2 receives it on an untrusted port,
it drops the message.

262
00:18:53,320 --> 00:18:57,830
You can see the syslog message here, indicating
that it dropped the message because it had

263
00:18:57,830 --> 00:18:59,240
option 82.

264
00:18:59,240 --> 00:19:05,140
So, the default settings work well if the
switch is a layer 3 switch acting as a DHCP

265
00:19:05,140 --> 00:19:09,399
relay agent, but in a network like this one
it won’t work.

266
00:19:09,399 --> 00:19:16,190
So, that’s why I used this command I showed
earlier, NO IP DHCP SNOOPING INFORMATION OPTION.

267
00:19:16,190 --> 00:19:18,539
Let’s see what happens now.

268
00:19:18,539 --> 00:19:23,820
PC1 sends a DISCOVER message, and SW1 forwards
it to SW2.

269
00:19:23,820 --> 00:19:26,620
This time it doesn’t add Option 82.

270
00:19:26,620 --> 00:19:31,460
But let’s assume that I haven’t used the
NO IP DHCP SNOOPING INFORMATION OPTION command

271
00:19:31,460 --> 00:19:33,539
on SW2 yet.

272
00:19:33,539 --> 00:19:38,490
So SW2 will add Option 82 and forward it to
R1.

273
00:19:38,490 --> 00:19:40,880
This will cause R1 to drop it.

274
00:19:40,880 --> 00:19:43,640
You can see R1’s log messages below.

275
00:19:43,640 --> 00:19:49,070
Basically, it means that R1 dropped the message
because it had option 82, but it wasn’t

276
00:19:49,070 --> 00:19:50,850
sent by a relay agent.

277
00:19:50,850 --> 00:19:55,950
That’s what ‘inconsistent relay information’
in the log message means.

278
00:19:55,950 --> 00:20:01,620
If a DHCP message wasn’t sent by a relay
agent, it shouldn’t have option 82.

279
00:20:01,620 --> 00:20:06,139
So, I added the command to SW2 also.

280
00:20:06,139 --> 00:20:11,580
This time, neither SW1 or SW2 will add option
82 to the DISCOVER message.

281
00:20:11,580 --> 00:20:15,590
So, R1 trusts the message and responds as
normal.

282
00:20:15,590 --> 00:20:21,320
I’m not sure if you’ll get any questions
about option 82 on the CCNA exam, but it’s

283
00:20:21,320 --> 00:20:26,400
good to know about because it can cause problems
for you in your DHCP snooping labs if you

284
00:20:26,400 --> 00:20:27,899
don’t know about it.

285
00:20:27,899 --> 00:20:33,049
Okay, here’s a review of the new commands
we covered in this video.

286
00:20:33,049 --> 00:20:39,510
If you don’t remember any of these commands,
go back in the video to review them.

287
00:20:39,510 --> 00:20:43,220
Before moving on to the quiz, let’s review
what we covered in this video.

288
00:20:43,220 --> 00:20:46,649
I first introduced what DHCP snooping is.

289
00:20:46,649 --> 00:20:52,730
It’s a security feature of switches that
allows them to filter DHCP messages.

290
00:20:52,730 --> 00:20:57,649
It works by inspecting DHCP messages that
arrive on untrusted ports and then deciding

291
00:20:57,649 --> 00:21:00,289
to discard or forward them.

292
00:21:00,289 --> 00:21:05,940
It can also control the rate at which DHCP
messages are allowed to enter an interface.

293
00:21:05,940 --> 00:21:11,269
It can prevent attacks like DHCP exhaustion
and DHCP poisoning.

294
00:21:11,269 --> 00:21:16,040
We also looked at how to configure DHCP snooping
on Cisco switches.

295
00:21:16,040 --> 00:21:20,860
Remember to enable it globally, enable it
per VLAN, and then configure the appropriate

296
00:21:20,860 --> 00:21:23,840
interfaces as trusted.

297
00:21:23,840 --> 00:21:30,539
Also keep option 82 in mind, you may need
to use NO IP DHCP SNOOPING INFORMATION OPTION

298
00:21:30,539 --> 00:21:32,720
to disable it.

299
00:21:32,720 --> 00:21:37,890
As always, watch until the end of the quiz
for a bonus practice question from Boson Software’s

300
00:21:37,890 --> 00:21:41,570
ExSim, my recommended practice exams for the
CCNA.

301
00:21:41,570 --> 00:21:46,960
Okay, let’s go to question 1 of the quiz.

302
00:21:46,960 --> 00:21:52,110
Which of the following DHCP message types
will always be discarded if received on a

303
00:21:52,110 --> 00:21:54,130
DHCP snooping untrusted interface?

304
00:21:54,130 --> 00:22:03,470
(select three) Okay, pause the video now to
select the correct answers.

305
00:22:03,470 --> 00:22:05,830
The answers are C, NAK.

306
00:22:05,830 --> 00:22:07,320
D, OFFER.

307
00:22:07,320 --> 00:22:09,429
And G, ACK.

308
00:22:09,429 --> 00:22:15,659
These DHCP message types will always be discarded
if received on a DHCP snooping untrusted interface

309
00:22:15,659 --> 00:22:17,429
because they are sent from DHCP servers.

310
00:22:17,429 --> 00:22:22,900
DHCP servers should not be connected to untrusted
interfaces.

311
00:22:22,900 --> 00:22:27,090
Okay, let’s go to question 2.

312
00:22:27,090 --> 00:22:32,080
Which of the following is NOT stored in the
DHCP snooping binding database?

313
00:22:32,080 --> 00:22:36,059
Pause the video now to select the correct
answer.

314
00:22:36,059 --> 00:22:41,340
Okay, the answer is D, default gateway.

315
00:22:41,340 --> 00:22:45,690
Here you can see what the DHCP snooping binding
database looks like on a switch.

316
00:22:45,690 --> 00:22:48,110
The default gateway is not displayed.

317
00:22:48,110 --> 00:22:52,929
Okay, let’s go to question 3.

318
00:22:52,929 --> 00:22:56,120
Which of the following are functions of DHCP
snooping?

319
00:22:56,120 --> 00:23:02,269
(select two) Pause the video now to select
the best answers.

320
00:23:02,269 --> 00:23:10,809
Okay, the answers are A, limiting the rate
of DHCP messages, and C, filtering messages

321
00:23:10,809 --> 00:23:13,070
on untrusted ports.

322
00:23:13,070 --> 00:23:19,090
DHCP snooping won’t filter messages on trusted
ports, and it also won’t filter ALL DHCP

323
00:23:19,090 --> 00:23:20,090
messages.

324
00:23:20,090 --> 00:23:23,269
It will only filter those that are received
on untrusted ports.

325
00:23:23,269 --> 00:23:27,570
Okay, let’s go to question 4.

326
00:23:27,570 --> 00:23:33,790
When DHCP snooping inspects a DHCP DISCOVER
message that arrives on an untrusted interface,

327
00:23:33,790 --> 00:23:34,809
what does it check?

328
00:23:34,809 --> 00:23:41,980
(select the two best answers) Pause the video
now to select the best answers.

329
00:23:41,980 --> 00:23:50,650
Okay, the answers are A, source MAC address,
and B, client hardware address.

330
00:23:50,650 --> 00:23:56,000
Source MAC address refers to the source MAC
field of the Ethernet frame, and client hardware

331
00:23:56,000 --> 00:23:59,919
address is a field in the DHCP message itself.

332
00:23:59,919 --> 00:24:03,850
If the two match, DHCP snooping permits the
message.

333
00:24:03,850 --> 00:24:06,000
If they don’t match, the message will be
discarded.

334
00:24:06,000 --> 00:24:09,919
Okay, let’s go to question 5.

335
00:24:09,919 --> 00:24:16,509
DHCP snooping rate-limiting is configured
on SW1’s G0/1 interface.

336
00:24:16,509 --> 00:24:21,920
What happens if DHCP messages are received
on G0/1 at a rate faster than the configured

337
00:24:21,920 --> 00:24:23,080
limit?

338
00:24:23,080 --> 00:24:29,720
Pause the video now to select the best answer.

339
00:24:29,720 --> 00:24:33,120
The answer is B, the interface will be disabled.

340
00:24:33,120 --> 00:24:37,870
To re-enable it, you can either SHUTDOWN and
then NO SHUTDOWN the interface, or you can

341
00:24:37,870 --> 00:24:41,899
configure errdisable recovery for the dhcp-rate-limit
cause.

342
00:24:41,899 --> 00:24:45,169
Okay, that’s all for the quiz.

343
00:24:45,169 --> 00:25:05,549
Now let’s take a look at a bonus question
from Boson Software’s ExSim for CCNA.
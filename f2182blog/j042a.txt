1
00:00:01,010 --> 00:00:03,400
Welcome to Jeremy’s IT Lab.

2
00:00:03,400 --> 00:00:06,620
This is a free, complete course for the CCNA.

3
00:00:06,620 --> 00:00:10,340
If you like these videos, please subscribe
to follow along with the series.

4
00:00:10,340 --> 00:00:15,120
Also, please like and leave a comment, and
share the video to help spread this free series

5
00:00:15,120 --> 00:00:16,180
of videos.

6
00:00:16,180 --> 00:00:18,350
Thanks for your help.

7
00:00:18,350 --> 00:00:21,800
In this video we will look at another topic,
EtherChannel.

8
00:00:21,800 --> 00:00:27,300
EtherChannel allows you to group multiple
physical interfaces into a group which operates

9
00:00:27,300 --> 00:00:33,300
as a single logical interface, so they behave
as if they are a single interface.

10
00:00:33,300 --> 00:00:37,260
There are many benefits to this, and I’ll
explain them in this video.

11
00:00:37,260 --> 00:00:42,749
By the way, this video covers topic 2.4 of
the official exam topics list, which states

12
00:00:42,749 --> 00:00:48,589
that you must be able to configure and verify
Layer 2 and Layer 3 EtherChannel using a protocol

13
00:00:48,589 --> 00:00:53,359
called LACP, Link Aggregation Control Protocol.

14
00:00:53,359 --> 00:00:57,370
So, what will we cover in this video?

15
00:00:57,370 --> 00:01:01,379
First off, I’ll show you what EtherChannel
is, and what problems it solves.

16
00:01:01,379 --> 00:01:05,470
Here’s a hint, spanning tree protocol is
the big problem.

17
00:01:05,470 --> 00:01:11,730
We will also look at multiple methods of configuring
both Layer 2 and Layer 3 EtherChannels.

18
00:01:11,730 --> 00:01:17,260
A Layer 2 etherchannel is a group of switch
ports which operate as a single interface,

19
00:01:17,260 --> 00:01:22,580
and a Layer 3 etherchannel is a group of routed
port which operate as a single interface,

20
00:01:22,580 --> 00:01:26,980
which you assign an IP address to, because
it’s Layer 3.

21
00:01:26,980 --> 00:01:31,530
Make sure you watch until the end of the video
for a bonus question from Boson Software’s

22
00:01:31,530 --> 00:01:35,590
ExSim, the best practice exams for the CCNA.

23
00:01:35,590 --> 00:01:41,420
I used Boson ExSim to help me prepare for
my CCNA and CCNP exams, and I truly believe

24
00:01:41,420 --> 00:01:45,159
it was the key that allowed me to pass
all of my exams on the first try.

25
00:01:45,159 --> 00:01:48,340
Okay, let’s get started with the video.

26
00:01:48,340 --> 00:01:51,870
So, let me demonstrate a problem.

27
00:01:51,870 --> 00:01:55,360
We have two switches here, ASW1 and DSW1.

28
00:01:55,360 --> 00:02:03,409
I will talk about basic network design later
in the course, but ASW stands for access switch,

29
00:02:03,409 --> 00:02:07,630
which is a switch that end hosts like PCs
and servers connect to.

30
00:02:07,630 --> 00:02:13,150
DSW stands for distribution layer switch,
which is a switch that access layer switches

31
00:02:13,150 --> 00:02:15,010
connect to.

32
00:02:15,010 --> 00:02:20,159
For this demonstration, let’s say there
are many end hosts connected to ASW1, let’s

33
00:02:20,159 --> 00:02:25,579
say 40 hosts, and they are all trying to access
the Internet to do their work.

34
00:02:25,579 --> 00:02:31,120
The network administrator notices that the
connection to DSW1 is congested, so he decides

35
00:02:31,120 --> 00:02:35,409
that he should add another link to increase
the bandwidth, so it can support all of the

36
00:02:35,409 --> 00:02:36,880
end hosts.

37
00:02:36,880 --> 00:02:42,129
So, the network admin adds another link, and
monitors the situation.

38
00:02:42,129 --> 00:02:45,720
However, the additional link doesn’t seem
to help.

39
00:02:45,720 --> 00:02:52,420
The connection between ASW1 and DSW1 is still
congested and end users are reporting problems.

40
00:02:52,420 --> 00:02:58,889
So, the admin decides to add another link
between ASW1 and DSW1.

41
00:02:58,889 --> 00:03:02,939
He adds another link to the connection between
ASW1 and DSW1.

42
00:03:02,939 --> 00:03:05,890
Surely, this will be sufficient.

43
00:03:05,890 --> 00:03:09,760
The total bandwidth of the connections to
the end hosts is still greater than the bandwidth

44
00:03:09,760 --> 00:03:15,329
of the connection to DSW1, but that’s okay,
all hosts in the network aren’t always in

45
00:03:15,329 --> 00:03:18,519
a constant state of sending and receiving
Internet traffic.

46
00:03:18,519 --> 00:03:24,069
I will talk more about this later in the course,
but when the bandwidth of the interfaces connected

47
00:03:24,069 --> 00:03:29,540
to end hosts is greater than the bandwidth
of the connection to the distribution switches,

48
00:03:29,540 --> 00:03:32,730
this is called oversubscription.

49
00:03:32,730 --> 00:03:37,489
Some oversubscription is acceptable, but too
much will cause congestion.

50
00:03:37,489 --> 00:03:43,730
However, even with three links to DSW1 the
congestion doesn’t seem any better, so the

51
00:03:43,730 --> 00:03:49,799
network admin once again decides to add another
link between ASW1 and DSW1.

52
00:03:49,799 --> 00:03:55,419
So, now there are four links between ASW1
and DSW1.

53
00:03:55,419 --> 00:03:56,870
Do you think things have improved?

54
00:03:56,870 --> 00:04:03,139
Well, they haven’t, the connection between
the two switches is just as congested as before.

55
00:04:03,139 --> 00:04:04,680
Why is this?

56
00:04:04,680 --> 00:04:06,580
You should be able to figure out the answer.

57
00:04:06,580 --> 00:04:13,419
Here’s a hint, think about what you just
studied in days 20, 21, and 22 of this course.

58
00:04:13,419 --> 00:04:17,660
If you know the answer, well done, if not
don’t worry about it, you will now.

59
00:04:17,660 --> 00:04:23,750
Let’s say the administrator went to physically
look at the port lights of the two switches.

60
00:04:23,750 --> 00:04:25,220
What color do you think they were?

61
00:04:25,220 --> 00:04:30,740
Well, the network admin checks DSW1 and all
of the port lights are green, so there doesn’t

62
00:04:30,740 --> 00:04:32,390
seem to be a problem.

63
00:04:32,390 --> 00:04:38,850
However, when he checks ASW1 he notices that,
of the links connected to DSW1, only one light

64
00:04:38,850 --> 00:04:41,320
is green, and the others are orange.

65
00:04:41,320 --> 00:04:42,410
Why is that?

66
00:04:42,410 --> 00:04:48,530
It’s because of what we studied in the past
few days of this course, spanning tree protocol.

67
00:04:48,530 --> 00:04:53,420
If you connect two switches together with
multiple links, all except one will be disabled

68
00:04:53,420 --> 00:04:54,720
by spanning tree.

69
00:04:54,720 --> 00:04:56,730
Why does it do this?

70
00:04:56,730 --> 00:05:02,900
Well, if all of ASW1’s interfaces were forwarding,
Layer 2 loops would form between ASW1 and

71
00:05:02,900 --> 00:05:07,220
DSW1, leading to broadcast storms.

72
00:05:07,220 --> 00:05:10,700
Other links will be unused unless the active
link fails.

73
00:05:10,700 --> 00:05:13,950
In that case, one of the inactive links will
start forwarding.

74
00:05:13,950 --> 00:05:19,000
So, although having backup links is a good
thing, because failures can occur for various

75
00:05:19,000 --> 00:05:23,940
reasons, it’s a waste of bandwidth to have
these three interfaces disabled, not forwarding

76
00:05:23,940 --> 00:05:25,380
any traffic.

77
00:05:25,380 --> 00:05:31,260
However, by forming these four physical interfaces
into one logical interface, EtherChannel can

78
00:05:31,260 --> 00:05:38,550
solve this problem, giving us both redundancy
and increased bandwidth.

79
00:05:38,550 --> 00:05:43,170
An EtherChannel is represented in network
diagrams by drawing a circle around the interfaces

80
00:05:43,170 --> 00:05:45,460
that are grouped together, like this.

81
00:05:45,460 --> 00:05:51,390
EtherChannel groups multiple interfaces together
to act as a single interface.

82
00:05:51,390 --> 00:05:55,120
STP will treat this group as a single interface.

83
00:05:55,120 --> 00:05:59,770
So, after grouping these interfaces into an
etherchannel the network admin once again

84
00:05:59,770 --> 00:06:01,890
checks the link lights.

85
00:06:01,890 --> 00:06:03,590
This time they are all green.

86
00:06:03,590 --> 00:06:06,770
Won’t this cause a Layer 2 loop?

87
00:06:06,770 --> 00:06:13,420
Actually no, because this group of four links
behaves as if it is a single link.

88
00:06:13,420 --> 00:06:17,160
For example, let’s say a PC sends a broadcast
frame.

89
00:06:17,160 --> 00:06:22,080
So, it is flooded out all interfaces on ASW1.

90
00:06:22,080 --> 00:06:26,000
All of the PCs connected to ASW1 will receive
a copy of the frame.

91
00:06:26,000 --> 00:06:29,920
Now, how many copies of the frame will DSW1
receive?

92
00:06:29,920 --> 00:06:36,500
Remember, although there are four physical
interfaces, they behave as a single interface.

93
00:06:36,500 --> 00:06:41,010
The answer is, DSW1 will only receive one
copy.

94
00:06:41,010 --> 00:06:46,660
This EtherChannel makes these four physical
interfaces a single logical interface, ASW1

95
00:06:46,660 --> 00:06:52,340
won’t sent four copies of the same broadcast
frame out of a single interface.

96
00:06:52,340 --> 00:06:56,031
Traffic using the EtherChannel will be load
balanced among the physical interfaces in

97
00:06:56,031 --> 00:06:57,480
the group.

98
00:06:57,480 --> 00:07:01,400
An algorithm is used to determine which traffic
will use which physical interface.

99
00:07:01,400 --> 00:07:04,390
I will give you more details on this later.

100
00:07:04,390 --> 00:07:08,340
So, DSW1 received the broadcast frame.

101
00:07:08,340 --> 00:07:10,060
What will it do now?

102
00:07:10,060 --> 00:07:14,270
It will flood the broadcast frame out of all
interfaces, except the one it was received

103
00:07:14,270 --> 00:07:15,810
on.

104
00:07:15,810 --> 00:07:19,300
So let’s say DSW1 has these two other links
here.

105
00:07:19,300 --> 00:07:23,300
Which interfaces will DSW1 forward the frame
out of?

106
00:07:23,300 --> 00:07:25,260
Only these two.

107
00:07:25,260 --> 00:07:29,230
Why didn’t it forward the frame out of the
other three interfaces in the etherchannel?

108
00:07:29,230 --> 00:07:34,810
I’ll repeat it once more, although this
etherchannel contains four separate physical

109
00:07:34,810 --> 00:07:37,960
interfaces, they behave as a single interface.

110
00:07:37,960 --> 00:07:42,370
DSW1 won’t send the broadcast frame back
out of the same interface it was received

111
00:07:42,370 --> 00:07:43,370
on.

112
00:07:43,370 --> 00:07:48,160
So it isn’t forwarded back to ASW1, and
no Layer 2 loop is formed.

113
00:07:48,160 --> 00:07:54,600
It’s kind of like this, instead of four
separate interfaces, perhaps gigabit ethernet

114
00:07:54,600 --> 00:08:00,130
interfaces, connecting ASW1 to DSW1, it’s
as if there is a single four-gigabit ethernet

115
00:08:00,130 --> 00:08:01,740
interface.

116
00:08:01,740 --> 00:08:06,940
The bandwidth of the four separate interfaces
is combined to form one faster interface,

117
00:08:06,940 --> 00:08:10,780
a virtual four-gigabit interface.

118
00:08:10,780 --> 00:08:15,680
The difference between the physical characteristics
and the logical or virtual characteristics

119
00:08:15,680 --> 00:08:20,420
of a network are something you need to understand
as a network engineer.

120
00:08:20,420 --> 00:08:23,350
For example we studied VLANs.

121
00:08:23,350 --> 00:08:29,130
Multiple PCs can all be connected to the same
switch and therefore be in the same LAN, however

122
00:08:29,130 --> 00:08:35,190
VLANs virtually divide these PCs into separate
virtual LANs, each behaving as a separate

123
00:08:35,190 --> 00:08:36,680
LAN.

124
00:08:36,680 --> 00:08:43,090
Likewise, these interfaces exist as four separate
physical interfaces, but now they form a single

125
00:08:43,090 --> 00:08:45,690
virtual interface.

126
00:08:45,690 --> 00:08:51,230
Some other names for an EtherChannel are a
Port Channel and a LAG, which stands for Link

127
00:08:51,230 --> 00:08:52,760
Aggregation Group.

128
00:08:52,760 --> 00:08:58,390
You’ll see that, to configure an etherchannel
in Cisco IOS, you need to use a few different

129
00:08:58,390 --> 00:09:00,870
terms.

130
00:09:00,870 --> 00:09:04,500
Now let’s take a look at how etherchannel
load balances.

131
00:09:04,500 --> 00:09:07,450
It load balances based on ‘flows’.

132
00:09:07,450 --> 00:09:08,820
What is a flow?

133
00:09:08,820 --> 00:09:12,830
A flow is a communication between two nodes
in the network.

134
00:09:12,830 --> 00:09:16,880
So for example, between PC1 and SRV1.

135
00:09:16,880 --> 00:09:21,210
By the way, you usually won’t see a server
or a printer connected directly to a distribution

136
00:09:21,210 --> 00:09:27,810
layer switch, these are also end hosts which
you should connect to the access layer switches.

137
00:09:27,810 --> 00:09:31,060
Just to simplify this network diagram I’ll
leave it like this, though.

138
00:09:31,060 --> 00:09:36,960
So, let’s say PC1 initiates an exchange
of data with SRV1, and it sends a few frames

139
00:09:36,960 --> 00:09:38,810
to do so.

140
00:09:38,810 --> 00:09:44,760
The frame is received by ASW1, and assuming
it already knows the MAC address of SRV1,

141
00:09:44,760 --> 00:09:48,170
it will forward the frame out of the port
channel to DSW1.

142
00:09:48,170 --> 00:09:51,850
However, which physical interface will it
use?

143
00:09:51,850 --> 00:09:56,300
Well, there is an algorithm it uses to calculate
which physical interface the traffic will

144
00:09:56,300 --> 00:10:01,140
actually be sent on, let’s say it determines
that this interface should be used.

145
00:10:01,140 --> 00:10:07,330
Now, when PC1 sends the next frame in the
flow, in the communication between PC1 and

146
00:10:07,330 --> 00:10:11,880
SRV1, the same interface will be used to forward
the traffic to SRV1.

147
00:10:11,880 --> 00:10:17,260
So, the point is that frames in the same flow
will be forwarded using the same physical

148
00:10:17,260 --> 00:10:18,620
interface.

149
00:10:18,620 --> 00:10:22,791
If frames in the same flow were forwarded
using different physical interfaces, some

150
00:10:22,791 --> 00:10:28,230
frames may arrive at the destination out of
order, which can cause problems.

151
00:10:28,230 --> 00:10:32,950
Some applications can deal with frames arriving
out of order, but some applications can’t.

152
00:10:32,950 --> 00:10:40,800
Now, if PC1 wants to print something and initiates
a separate communication flow with PR1, ASW1

153
00:10:40,800 --> 00:10:44,890
will once again forward the frame using its
virtual port channel interface.

154
00:10:44,890 --> 00:10:49,200
However, it will make a separate calculation
to determine which physical interface will

155
00:10:49,200 --> 00:10:51,270
be used for the flow.

156
00:10:51,270 --> 00:10:55,870
For example, it might determine that this
interface will be used for the flow.

157
00:10:55,870 --> 00:11:00,990
Just like before, when PC1 sends another frame
in the flow, the same member interface of

158
00:11:00,990 --> 00:11:04,220
the etherchannel will be used to forward it.

159
00:11:04,220 --> 00:11:07,650
How about if PC2 also wants to print something?

160
00:11:07,650 --> 00:11:12,460
It sends the first frame in the flow to ASW1,
which will then do a calculation to determine

161
00:11:12,460 --> 00:11:15,650
which physical interface in the etherchannel
will be used.

162
00:11:15,650 --> 00:11:17,540
perhaps this one is used.

163
00:11:17,540 --> 00:11:23,339
So, this is how EtherChannel performs load
balancing, by using different physical interfaces

164
00:11:23,339 --> 00:11:26,380
in the etherchannel for different flows.

165
00:11:26,380 --> 00:11:30,480
The calculation that is done to determine
which physical interface to use takes into

166
00:11:30,480 --> 00:11:32,300
account a few inputs.

167
00:11:32,300 --> 00:11:37,810
Actually, you can change the inputs used in
the interface selection calculation.

168
00:11:37,810 --> 00:11:40,170
Here are the inputs that can be used.

169
00:11:40,170 --> 00:11:41,770
Source MAC address.

170
00:11:41,770 --> 00:11:46,800
So, all frames with the same source MAC address
will always use the same interface in the

171
00:11:46,800 --> 00:11:47,970
etherchannel.

172
00:11:47,970 --> 00:11:51,279
Or, destination MAC address.

173
00:11:51,279 --> 00:11:56,520
In this case, all frames with the same destination
MAC address will always use the same physical

174
00:11:56,520 --> 00:11:57,980
interface.

175
00:11:57,980 --> 00:12:02,160
You can also use both the source AND destination
MAC addresses.

176
00:12:02,160 --> 00:12:08,520
So for example, frames from PC1 to SRV1 will
use always use a certain interface, frames

177
00:12:08,520 --> 00:12:14,150
from PC2 to SRV1 will always use a certain
interface, which might be the same or different

178
00:12:14,150 --> 00:12:20,500
than the one used for traffic from PC1 to
SRV1, frames from PC1 to PR1 might use another

179
00:12:20,500 --> 00:12:23,050
different interface, etc.

180
00:12:23,050 --> 00:12:28,950
The calculation is done based on both the
source and destination MAC addresses.

181
00:12:28,950 --> 00:12:34,230
You can also configure etherchannel to select
the interface based on the source IP address,

182
00:12:34,230 --> 00:12:40,270
destination IP address, or both source AND
destination IP addresses.

183
00:12:40,270 --> 00:12:46,510
Some switches also support load-balancing
based on the Layer 4 TCP or UDP port numbers,

184
00:12:46,510 --> 00:12:49,050
but those are a topic for another lesson.

185
00:12:49,050 --> 00:12:54,940
Also, which methods the switch can use depends
on the switch model, some may only support

186
00:12:54,940 --> 00:13:00,620
using the MAC addresses, some may support
only MAC or IP addresses, and some may support

187
00:13:00,620 --> 00:13:02,360
all methods.

188
00:13:02,360 --> 00:13:08,020
So, we haven’t actually configured an etherchannel
yet, but since I just mentioned it let’s

189
00:13:08,020 --> 00:13:12,850
take a look at how to check and configure
the load-balancing method.

190
00:13:12,850 --> 00:13:19,440
Use the command SHOW ETHERCHANNEL LOAD-BALANCE
to see the current load-balancing method.

191
00:13:19,440 --> 00:13:23,890
You can see the default for this model of
switch is to load balance based on the source

192
00:13:23,890 --> 00:13:25,870
and destination IP addresses.

193
00:13:25,870 --> 00:13:34,230
So, for example, all traffic from 10.0.0.1
with a destination of 10.0.0.2 will always

194
00:13:34,230 --> 00:13:38,460
use a certain physical interface within the
etherchannel.

195
00:13:38,460 --> 00:13:41,660
Down here you can see a more specific breakdown.

196
00:13:41,660 --> 00:13:47,830
Frames which encapsulate IP packets, whether
IPv4 or IPv6, will be load-balanced based

197
00:13:47,830 --> 00:13:50,810
on the source and destination IP addresses.

198
00:13:50,810 --> 00:13:56,810
However, notice at the top it says non-IP
will use the source and destination MAC addresses.

199
00:13:56,810 --> 00:14:02,150
Well, that’s because if an IP packet isn’t
encapsulated in the Ethernet frame, there

200
00:14:02,150 --> 00:14:07,180
is no IP address that can be used to determine
the load-balancing, so the MAC addresses are

201
00:14:07,180 --> 00:14:08,830
used instead.

202
00:14:08,830 --> 00:14:14,230
Now, as for how to change the load-balancing
method, enter global config mode and use this

203
00:14:14,230 --> 00:14:16,290
command.

204
00:14:16,290 --> 00:14:20,860
PORT-CHANNEL LOAD-BALANCE, followed by the
method.

205
00:14:20,860 --> 00:14:26,340
In this case I changed it to use the source
and destination MAC addresses of the frame.

206
00:14:26,340 --> 00:14:30,470
Then I confirmed once more, and you can see
the load-balancing configuration has been

207
00:14:30,470 --> 00:14:32,910
successfully changed.

208
00:14:32,910 --> 00:14:36,300
By the way, here are the choices available
on this device.

209
00:14:36,300 --> 00:14:41,610
It can load-balance based on MAC or IP addresses,
and in either case it can load-balanced based

210
00:14:41,610 --> 00:14:47,550
on either the source, the destination, or
both the source AND destination addresses.

211
00:14:47,550 --> 00:14:52,420
Now, I want to point out one thing which is
a little frustrating about etherchannel configuration

212
00:14:52,420 --> 00:14:55,110
on Cisco devices.

213
00:14:55,110 --> 00:14:59,140
What keyword do you use to configure the load-balancing method?

214
00:14:59,140 --> 00:15:00,840
PORT-CHANNEL.

215
00:15:00,840 --> 00:15:05,020
And what keyword do you use to view the load-balancing
method?

216
00:15:05,020 --> 00:15:06,580
ETHERCHANNEL.

217
00:15:06,580 --> 00:15:10,500
Different words are used for the same thing,
which is a bit frustrating.

218
00:15:10,500 --> 00:15:15,170
Actually, later you’ll find that there is
even one more that you need to remember.

219
00:15:15,170 --> 00:15:19,420
So, these are the first two commands to remember
for this video.

220
00:15:19,420 --> 00:15:23,860
SHOW ETHERCHANNEL LOAD-BALANCE, to check the
load-balancing method being used.

221
00:15:23,860 --> 00:15:29,330
And, PORT-CHANNEL LOAD-BALANCE, followed by
the load-balancing method, to configure the

222
00:15:29,330 --> 00:15:32,360
load-balancing.

223
00:15:32,360 --> 00:15:36,560
Now let’s get into actually creating an
EtherChannel between two switches.

224
00:15:36,560 --> 00:15:40,240
There are three methods of EtherChannel configuration.

225
00:15:40,240 --> 00:15:45,680
First up is PAgP, which stands for Port Aggregation
Protocol.

226
00:15:45,680 --> 00:15:51,440
It is a Cisco proprietary protocol, so it
can only be used on Cisco switches.

227
00:15:51,440 --> 00:15:55,480
If you’re trying to form an EtherChannel
with a Juniper switch, for example, you can’t

228
00:15:55,480 --> 00:15:56,830
use PAgP.

229
00:15:56,830 --> 00:15:59,880
Now, what does PAgP do?

230
00:15:59,880 --> 00:16:05,110
It dynamically negotiates the creation and
maintenance of the EtherChannel.

231
00:16:05,110 --> 00:16:11,170
Just a few days ago we covered DTP, which
does a similar thing regarding trunk formation.

232
00:16:11,170 --> 00:16:15,540
Frames are sent to the neighboring switch
to see if it wants to form an EtherChannel,

233
00:16:15,540 --> 00:16:19,630
and then the switches agree upon either forming
an EtherChannel or not.

234
00:16:19,630 --> 00:16:26,140
Okay, the next method of configuration is
LACP, which stands for Link Aggregation Control

235
00:16:26,140 --> 00:16:27,690
Protocol.

236
00:16:27,690 --> 00:16:32,610
It is an industry standard protocol, once
again from our friends at the IEEE, its code

237
00:16:32,610 --> 00:16:34,790
is 802.3ad.

238
00:16:34,790 --> 00:16:39,430
Basically, it does the same thing as PAgP.

239
00:16:39,430 --> 00:16:44,019
It dynamically negotiates the creation and
maintenance of the EtherChannel, like DTP

240
00:16:44,019 --> 00:16:46,529
does for trunks.

241
00:16:46,529 --> 00:16:51,850
Because it is an industry standard protocol,
it doesn’t run only on Cisco switches, so

242
00:16:51,850 --> 00:16:56,519
it can be used to form EtherChannels with
switches from other vendors.

243
00:16:56,519 --> 00:17:01,149
Because of this, LACP is the preferred method
of configuring EtherChannels.

244
00:17:01,149 --> 00:17:05,510
Actually, the exam topics list only states
LACP.

245
00:17:05,510 --> 00:17:10,470
However, for the test you really should be
familiar with the other methods, for some

246
00:17:10,470 --> 00:17:14,959
reason Cisco’s exam topics lists aren’t
very reliable.

247
00:17:14,959 --> 00:17:19,050
So, the last method is static EtherChannel.

248
00:17:19,050 --> 00:17:24,130
In this case a protocol isn’t used to determine
if an EtherChannel should be formed.

249
00:17:24,130 --> 00:17:28,830
Instead, interfaces are statically configured
to form an EtherChannel.

250
00:17:28,830 --> 00:17:34,260
This is usually avoided, because you want
the switches to dynamically maintain the EtherChannel,

251
00:17:34,260 --> 00:17:38,040
for example you want the switch to remove
an interface from the EtherChannel if there

252
00:17:38,040 --> 00:17:40,660
is some sort of problem on the interface.

253
00:17:40,660 --> 00:17:46,510
Okay, finally, up to 8 interfaces can be formed
into a single EtherChannel.

254
00:17:46,510 --> 00:17:53,809
Actually, LACP allows up to 16, but only 8
will be active, the other 8 will be in standby

255
00:17:53,809 --> 00:17:58,150
mode, waiting for an active interface to fail.

256
00:17:58,150 --> 00:18:01,330
So let’s look into how to configure each
method.

257
00:18:01,330 --> 00:18:07,160
The configuration for each is almost identical,
you just have to swap out some keywords.

258
00:18:07,160 --> 00:18:11,320
First I used the interface range command to
configure all of the member interfaces at

259
00:18:11,320 --> 00:18:12,920
once.

260
00:18:12,920 --> 00:18:17,000
This is a good idea for EtherChannel, because
the configurations on each member interface

261
00:18:17,000 --> 00:18:21,300
must match, so if you configure them all at
once you can guarantee that.

262
00:18:21,300 --> 00:18:24,960
I’ll talk more about that after I show you
the configurations.

263
00:18:24,960 --> 00:18:31,500
Anyway, to actually configure the EtherChannel
use this command, with yet another new keyword.

264
00:18:31,500 --> 00:18:37,850
CHANNEL-GROUP, followed by a number that identifies
the virtual interface, MODE, and then as you

265
00:18:37,850 --> 00:18:41,720
can see I used the question mark to see what
options there are.

266
00:18:41,720 --> 00:18:48,810
There are five options, two of them are used
for PAgP, two for LACP, and one for static

267
00:18:48,810 --> 00:18:50,920
etherchannel.

268
00:18:50,920 --> 00:18:53,780
These two are used for PAgP.

269
00:18:53,780 --> 00:18:57,700
Do you recognize these names from another
Cisco proprietary protocol?

270
00:18:57,700 --> 00:19:03,510
DTP used the same modes to form trunks, and
the function of each mode is basically the

271
00:19:03,510 --> 00:19:05,350
same.

272
00:19:05,350 --> 00:19:10,890
Desirable mode actively tries to form an EtherChannel,
and auto mode will only form an EtherChannel

273
00:19:10,890 --> 00:19:16,710
if the other side is set to desirable, but
not if the other side is set to auto.

274
00:19:16,710 --> 00:19:18,480
So here’s a summary.

275
00:19:18,480 --> 00:19:23,380
If both sides of the connection are set to
auto, no etherchannel will be formed.

276
00:19:23,380 --> 00:19:29,390
However, auto and desirable, or desirable
and desirable, will form an etherchannel.

277
00:19:29,390 --> 00:19:33,720
Anyway, I decided to configure this side as
desirable.

278
00:19:33,720 --> 00:19:38,000
You can see that the virtual port-channel
interface was created, with the number we

279
00:19:38,000 --> 00:19:40,960
used in the channel-group command.

280
00:19:40,960 --> 00:19:46,450
You can see it here in the output of the SHOW
IP INTERFACE BRIEF command, down at the bottom.

281
00:19:46,450 --> 00:19:52,120
So, remember that the CHANNEL-GROUP command
is used to configure the etherchannel, but

282
00:19:52,120 --> 00:19:56,890
the name of the virtual interface that is
created is ‘port-channel’.

283
00:19:56,890 --> 00:20:02,350
By the way, this channel group number has
to match between interfaces on the same switch,

284
00:20:02,350 --> 00:20:06,870
however it DOESN’T have to match the channel-group
number on the other switch.

285
00:20:06,870 --> 00:20:14,470
For example, channel-group 1 on ASW1 can form
an EtherChannel with channel-group 2 on DSW1.

286
00:20:14,470 --> 00:20:20,110
The number is just used to identify the virtual
interface number on the local switch.

287
00:20:20,110 --> 00:20:23,960
Because you can have multiple etherchannels
on a single switch, you need the number to

288
00:20:23,960 --> 00:20:27,270
identify them.

289
00:20:27,270 --> 00:20:31,000
Next let’s look at LACP configuration.

290
00:20:31,000 --> 00:20:36,110
After explaining all of that, there’s not
much else to explain about LACP.

291
00:20:36,110 --> 00:20:39,020
Just notice that mode names are different.

292
00:20:39,020 --> 00:20:43,170
Instead of desirable, LACP uses active mode.

293
00:20:43,170 --> 00:20:46,690
And instead of auto, LACP uses passive mode.

294
00:20:46,690 --> 00:20:52,130
So, if both ends are configured in passive
mode an EtherChannel won’t be formed.

295
00:20:52,130 --> 00:20:58,400
However, active and passive, or active and
active, will form an EtherChannel.

296
00:20:58,400 --> 00:21:02,240
In this case, I configured this side as active.

297
00:21:02,240 --> 00:21:05,620
Once again, the port-channel interface is
created.

298
00:21:05,620 --> 00:21:10,090
Note that, even if you configure both sides
as passive, the virtual interface will still

299
00:21:10,090 --> 00:21:12,290
be created on each switch.

300
00:21:12,290 --> 00:21:16,929
However, it won’t actually be functioning
as an EtherChannel unless one side is in active

301
00:21:16,929 --> 00:21:18,160
mode.

302
00:21:18,160 --> 00:21:24,160
So, as you can see the command is basically
the same, just the mode names are different.

303
00:21:24,160 --> 00:21:28,460
Once again, the channel-group number has to
match between member interfaces on the local

304
00:21:28,460 --> 00:21:32,590
switch, but it doesn’t have to match the
number on the neighbor switch.

305
00:21:32,590 --> 00:21:37,460
Finally, let’s see how static EtherChannel
is configured.

306
00:21:37,460 --> 00:21:42,370
There aren’t two separate modes, just one,
‘ON’ which manually tells these interfaces

307
00:21:42,370 --> 00:21:45,050
to form an EtherChannel.

308
00:21:45,050 --> 00:21:48,880
This will create a port-channel interface,
just like before.

309
00:21:48,880 --> 00:21:52,470
By the way, on mode only works with on mode.

310
00:21:52,470 --> 00:21:59,830
On and desirable, or on and active will not
successfully form an EtherChannel.

311
00:21:59,830 --> 00:22:03,400
Another command you should know is the CHANNEL-PROTOCOL command.

312
00:22:03,400 --> 00:22:07,940
This manually configures the EtherChannel
negotiation protocol that the member interfaces

313
00:22:07,940 --> 00:22:09,310
should use.

314
00:22:09,310 --> 00:22:14,790
This actually isn’t a very useful command,
because you don’t need to configure it.

315
00:22:14,790 --> 00:22:20,130
If you configure CHANNEL-GROUP 1 MODE DESIRABLE
or AUTO, the interface will automatically

316
00:22:20,130 --> 00:22:27,250
use PAgP, or if you configure CHANNEL-GROUP
1 MODE ACTIVE or PASSIVE, the interface will

317
00:22:27,250 --> 00:22:29,070
automatically use LACP.

318
00:22:29,070 --> 00:22:32,630
So, there isn’t really a point in using
this command.

319
00:22:32,630 --> 00:22:38,130
However, I think you should know it for the
exam at least, so here’s a brief explanation.

320
00:22:38,130 --> 00:22:45,650
Of course there are two options, LACP and
PAGP, I decided to configure LACP.

321
00:22:45,650 --> 00:22:50,820
Then I tried the CHANNEL-GROUP 1 MODE DESIRABLE
command, but it was rejected because of the

322
00:22:50,820 --> 00:22:52,160
protocol mismatch.

323
00:22:52,160 --> 00:22:59,050
I manually configured these interfaces to
use LACP, but the desirable mode is PAgP,

324
00:22:59,050 --> 00:23:01,570
so the command was rejected.

325
00:23:01,570 --> 00:23:06,580
If I try CHANNEL-GROUP 1 MODE ON it is rejected
as well.

326
00:23:06,580 --> 00:23:11,800
Then I do CHANNEL-GROUP 1 MODE ACTIVE, and
the command works, because active mode is

327
00:23:11,800 --> 00:23:13,450
LACP.

328
00:23:13,450 --> 00:23:21,060
So, after configuring the EtherChannel, in
whatever mode, PAgP, LACP, or static, you

329
00:23:21,060 --> 00:23:24,850
can then configure the port-channel interface
itself.

330
00:23:24,850 --> 00:23:29,110
Note that I’m just using the LACP example
here, since all of this information is the

331
00:23:29,110 --> 00:23:32,120
same regardless of which method you use.

332
00:23:32,120 --> 00:23:38,780
I also did the same configurations over on
DSW1, so the EtherChannel is up and running.

333
00:23:38,780 --> 00:23:46,160
I entered interface config mode for the port-channel
1 interface, and then configured it as a trunk.

334
00:23:46,160 --> 00:23:52,240
Now in the output of SHOW INTERFACES TRUNK,
you can see port-channel 1, listed as Po1,

335
00:23:52,240 --> 00:23:54,360
is a trunk.

336
00:23:54,360 --> 00:23:59,150
Notice that the individual physical interfaces
aren’t listed here, only the port-channel

337
00:23:59,150 --> 00:24:00,150
interface.

338
00:24:00,150 --> 00:24:04,010
Here’s a section of the output of SHOW RUNNING-CONFIG.

339
00:24:04,010 --> 00:24:06,929
There’s something interesting to notice
here.

340
00:24:06,929 --> 00:24:11,890
The trunk configurations that I configured
on the port-channel interface were also applied

341
00:24:11,890 --> 00:24:17,750
to the physical interfaces, I didn’t manually
configure the physical interfaces as trunks.

342
00:24:17,750 --> 00:24:23,220
Now, one more important point about EtherChannel
configuration.

343
00:24:23,220 --> 00:24:29,690
Member interfaces, the physical interfaces
in the EtherChannel, must have matching configurations.

344
00:24:29,690 --> 00:24:31,650
What do I mean by that?

345
00:24:31,650 --> 00:24:33,850
They must have the same duplex setting.

346
00:24:33,850 --> 00:24:36,840
They must have the same speed.

347
00:24:36,840 --> 00:24:41,039
They must have the same switchport mode, meaning
access or trunk.

348
00:24:41,039 --> 00:24:45,840
If they are a trunk, they must have the same
allowed VLANs and native VLANs.

349
00:24:45,840 --> 00:24:50,880
If an individual interface’s configurations
do not match the others, it will be excluded

350
00:24:50,880 --> 00:24:54,100
from the EtherChannel.

351
00:24:54,100 --> 00:24:58,550
When it comes to verifying the status of an
EtherChannel using SHOW commands, the most

352
00:24:58,550 --> 00:25:02,340
useful command is SHOW ETHERCHANNEL SUMMARY.

353
00:25:02,340 --> 00:25:06,760
Down here is a list of the port-channel interfaces
on the switch.

354
00:25:06,760 --> 00:25:13,360
Next to port-channel 1 it has two flags, an
upper-case S and upper-case U.

355
00:25:13,360 --> 00:25:16,870
To check the meaning of these, look at the
legend up top.

356
00:25:16,870 --> 00:25:20,080
S means it is a Layer 2 etherchannel.

357
00:25:20,080 --> 00:25:23,420
S stands for switchport, by the way.

358
00:25:23,420 --> 00:25:29,030
U means in use, meaning the EtherChannel is
active and being used.

359
00:25:29,030 --> 00:25:32,630
Next to the physical ports there is the flag
‘P’.

360
00:25:32,630 --> 00:25:36,620
This means that these ports are properly bundled
in the port-channel.

361
00:25:36,620 --> 00:25:40,370
These are the flags you want to see in an
operational Layer 2 EtherChannel.

362
00:25:40,370 --> 00:25:45,790
Now, let’s take a look at a couple situations
in which we will see other flags.

363
00:25:45,790 --> 00:25:49,900
So, I shutdown the port-channel 1 interface.

364
00:25:49,900 --> 00:25:54,810
Now next to both the port-channel interface
and the member interfaces you can see the

365
00:25:54,810 --> 00:25:56,370
flag ‘D’.

366
00:25:56,370 --> 00:25:57,570
That means down.

367
00:25:57,570 --> 00:26:04,280
Okay, I’ll enable the interface again and
show you another flag you might see.

368
00:26:04,280 --> 00:26:08,470
Now I changed one of the member interfaces
to access mode.

369
00:26:08,470 --> 00:26:11,620
Now it has the lower-case ‘s’ flag.

370
00:26:11,620 --> 00:26:14,530
Note that this is different than the upper-case
S flag.

371
00:26:14,530 --> 00:26:15,910
It means suspended.

372
00:26:15,910 --> 00:26:22,980
So, only G0/0 is suspended, but the EtherChannel
is still operating with just three interfaces,

373
00:26:22,980 --> 00:26:27,610
G0/1, 2, and 3.

374
00:26:27,610 --> 00:26:31,620
Another command you can use is SHOW ETHERCHANNEL PORT-CHANNEL.

375
00:26:31,620 --> 00:26:37,290
You can see the number of ports in the port-channel,
which protocol is being used etc.

376
00:26:37,290 --> 00:26:41,809
One important bit of information that you
can’t find in SHOW ETHERCHANNEL SUMMARY

377
00:26:41,809 --> 00:26:47,600
but is displayed in this command is the channel-group
mode, active in this case, because I used

378
00:26:47,600 --> 00:26:50,860
the CHANNEL-GROUP 1 MODE ACTIVE command earlier.

379
00:26:50,860 --> 00:26:55,870
However, for EtherChannel the most common
command you’re going to be using is definitely

380
00:26:55,870 --> 00:26:57,340
SHOW ETHERCHANNEL SUMMARY.

381
00:26:57,340 --> 00:27:01,870
I just wanted to show you one other option.

382
00:27:01,870 --> 00:27:05,669
Because I started this video talking about
spanning-tree, let’s see how it is affected

383
00:27:05,669 --> 00:27:08,460
when EtherChannel is configured.

384
00:27:08,460 --> 00:27:13,280
As you can see, only the port-channel interface
is listed, the physical interfaces do not

385
00:27:13,280 --> 00:27:15,690
appear in the output of this command at all.

386
00:27:15,690 --> 00:27:21,000
So, as I said earlier, spanning-tree is treating
these four physical interfaces as a single

387
00:27:21,000 --> 00:27:23,530
logical interface.

388
00:27:23,530 --> 00:27:27,750
Instead of blocking three of them, they can
all forward and receive traffic, with no worry

389
00:27:27,750 --> 00:27:30,940
of Layer 2 loops.

390
00:27:30,940 --> 00:27:35,510
To close off this lecture, let’s take a
brief look at Layer 3 EtherChannels.

391
00:27:35,510 --> 00:27:40,900
I’ve replaced ASW1 and DSW1 with multilayer
switches.

392
00:27:40,900 --> 00:27:45,950
Instead of a Layer 2 connection between them,
let’s use a Layer 3 connection.

393
00:27:45,950 --> 00:27:50,970
Modern network design often leans toward using
Layer 3 connections between switches, because

394
00:27:50,970 --> 00:27:54,909
that way spanning-tree won’t be an issue
anywhere in the network.

395
00:27:54,909 --> 00:27:59,059
We could have four switches interconnected
in a mesh, and if we’re connecting them

396
00:27:59,059 --> 00:28:04,220
with Layer 3 routed ports, all interfaces
will be up and forwarding, none will have

397
00:28:04,220 --> 00:28:07,190
to be disabled due to spanning tree.

398
00:28:07,190 --> 00:28:11,169
Now you may be thinking, didn’t you just
show that EtherChannel means that spanning-tree

399
00:28:11,169 --> 00:28:12,870
doesn’t have to block any ports?

400
00:28:12,870 --> 00:28:17,179
Well, we’re just looking at a connection
between two switches.

401
00:28:17,179 --> 00:28:21,220
Even if we’re using EtherChannel, Layer
2 loops can still occur if multiple switches

402
00:28:21,220 --> 00:28:24,039
are connected together in a loop.

403
00:28:24,039 --> 00:28:26,669
For example, look at this diagram.

404
00:28:26,669 --> 00:28:30,890
All of the connections between switches are
using EtherChannel, but if we don’t block

405
00:28:30,890 --> 00:28:36,059
any of the port-channel interfaces, broadcasts
can still loop around the switches like this

406
00:28:36,059 --> 00:28:38,310
and cause a broadcast storm.

407
00:28:38,310 --> 00:28:42,309
So, spanning-tree will block one of these
port-channel interfaces.

408
00:28:42,309 --> 00:28:47,059
However, if all of these connections between
switches were made using routed ports, not

409
00:28:47,059 --> 00:28:52,059
Layer 2 switchports, there is no need to run
spanning-tree at all.

410
00:28:52,059 --> 00:28:57,960
Routed ports don’t forward Layer 2 broadcasts,
so no Layer 2 loops can be formed.

411
00:28:57,960 --> 00:29:01,549
You already know how to configure routed ports
with the NO SWITCHPORT command.

412
00:29:01,549 --> 00:29:05,549
Let’s see how to configure a Layer 3 EtherChannel.

413
00:29:05,549 --> 00:29:10,190
So, starting from a clean configuration, no
port-channels have been configured yet on

414
00:29:10,190 --> 00:29:11,350
ASW1.

415
00:29:11,350 --> 00:29:17,330
I enter interface range config mode for the
member interfaces, and this time before using

416
00:29:17,330 --> 00:29:24,200
the CHANNEL-GROUP command, I use the NO SWITCHPORT
command to make them Layer 3 routed interfaces.

417
00:29:24,200 --> 00:29:31,720
Then, after using the CHANNEL-GROUP command,
I used SHOW RUNNING-CONFIG to check the config.

418
00:29:31,720 --> 00:29:35,620
Notice that the port-channel interface that
was created has the NO SWITCHPORT command

419
00:29:35,620 --> 00:29:37,400
applied to it automatically.

420
00:29:37,400 --> 00:29:43,000
Now, since we’re making a Layer 3 etherchannel,
we need an IP address.

421
00:29:43,000 --> 00:29:45,530
Where do you think it should be configured?

422
00:29:45,530 --> 00:29:48,230
It should be configured on the port-channel
interface.

423
00:29:48,230 --> 00:29:49,679
So, there it is.

424
00:29:49,679 --> 00:29:54,280
Now, let’s check the SHOW ETHERCHANNEL SUMMARY
command once more.

425
00:29:54,280 --> 00:29:59,670
So, the only difference in the output is that
instead of the upper-case ‘S’ flag, it

426
00:29:59,670 --> 00:30:01,470
has the ‘R’ flag.

427
00:30:01,470 --> 00:30:02,780
What does that mean?

428
00:30:02,780 --> 00:30:08,730
It means it is a Layer 3 EtherChannel, R stands
for routed port.

429
00:30:08,730 --> 00:30:14,360
In the output of SHOW IP INTERFACE BRIEF,
you can see the IP address configured on port-channel

430
00:30:14,360 --> 00:30:15,360
1.

431
00:30:15,360 --> 00:30:19,960
So, now ASW1 and DSW1 are like two routers
connected together.

432
00:30:19,960 --> 00:30:26,059
They are connected at Layer 3 and spanning-tree
is not running on the connection between them.

433
00:30:26,059 --> 00:30:31,220
However, just like with the Layer 2 EtherChannel,
traffic will now be load-balanced over the

434
00:30:31,220 --> 00:30:33,409
four member interfaces.

435
00:30:33,409 --> 00:30:38,309
Okay let’s quickly review the commands we
covered.

436
00:30:38,309 --> 00:30:43,240
First is PORT-CHANNEL LOAD-BALANCE, followed
by the mode, which, depending on the switch

437
00:30:43,240 --> 00:30:49,840
model, can involve MAC addresses, IP addresses,
or Layer 4 port numbers, using either the

438
00:30:49,840 --> 00:30:56,020
source, destination, or both source and destination
in the calculation to determine which physical

439
00:30:56,020 --> 00:31:00,520
interface is used to forward any specific
flow of traffic.

440
00:31:00,520 --> 00:31:07,640
To view the current EtherChannel load-balancing
configuration, use SHOW ETHERCHANNEL LOAD-BALANCE.

441
00:31:07,640 --> 00:31:12,220
To configure an interface to be part of an
EtherChannel, use the command CHANNEL-GROUP,

442
00:31:12,220 --> 00:31:18,570
followed by the port-channel number, MODE,
and then the mode, which can be DESIRABLE,

443
00:31:18,570 --> 00:31:22,350
AUTO, ACTIVE, PASSIVE, or ON.

444
00:31:22,350 --> 00:31:27,480
The most useful show command for EtherChannel
is SHOW ETHERCHANNEL SUMMARY, displaying a

445
00:31:27,480 --> 00:31:32,230
summary of all of the EtherChannels on the
switch and their status.

446
00:31:32,230 --> 00:31:36,870
One more show command you can use is SHOW
ETHERCHANNEL PORT-CHANNEL, which displays

447
00:31:36,870 --> 00:31:42,380
some more detailed information about the port-channel
interfaces on the switch.

448
00:31:42,380 --> 00:31:44,670
Those are all of the commands we learned today.

449
00:31:44,670 --> 00:31:48,380
Of course, there are many more commands that
can be used, but we don’t need to go any

450
00:31:48,380 --> 00:31:51,630
deeper into the concept of EtherChannels.

451
00:31:51,630 --> 00:31:56,260
As long as you understand their basic purpose
and how to set them up and verify their status,

452
00:31:56,260 --> 00:31:58,270
you should be good for the CCNA.

453
00:31:58,270 --> 00:32:02,669
Okay let’s go to today’s quiz.

454
00:32:02,669 --> 00:32:07,679
Watch until the end of the quiz for a bonus
question from Boson ExSim for CCNA, without

455
00:32:07,679 --> 00:32:13,049
a doubt the best practice exams for the CCNA,
and the ones I used when preparing for my

456
00:32:13,049 --> 00:32:15,419
CCNA and CCNP exams.

457
00:32:15,419 --> 00:32:19,940
Let’s go to question 1 of the quiz.

458
00:32:19,940 --> 00:32:24,410
Which of the following channel-group mode
combinations will result in an operational

459
00:32:24,410 --> 00:32:25,410
EtherChannel?

460
00:32:25,410 --> 00:32:27,120
Choose three.

461
00:32:27,120 --> 00:32:29,419
A, on – on.

462
00:32:29,419 --> 00:32:31,990
B, passive – passive.

463
00:32:31,990 --> 00:32:34,450
C, desirable – auto.

464
00:32:34,450 --> 00:32:36,909
D, auto – auto.

465
00:32:36,909 --> 00:32:39,610
E, active – desirable.

466
00:32:39,610 --> 00:32:41,850
F, on – desirable.

467
00:32:41,850 --> 00:32:43,990
Or G, active – active.

468
00:32:43,990 --> 00:32:50,140
Pause the video to think about your answer.

469
00:32:50,140 --> 00:32:53,440
The answers are A, C, and G.

470
00:32:53,440 --> 00:33:01,120
A, on – on, creates a static EtherChannel,
which doesn’t use PAgP or LACP to negotiate

471
00:33:01,120 --> 00:33:02,530
the EtherChannel.

472
00:33:02,530 --> 00:33:07,029
C, desirable – auto, creates an EtherChannel
using PAgP.

473
00:33:07,029 --> 00:33:11,130
G, active – active, creates an EtherChannel
using LACP.

474
00:33:11,130 --> 00:33:15,299
So, A, C, and G are the correct answers.

475
00:33:15,299 --> 00:33:21,500
B, passive - passive won’t create an etherchannel
because LACP passive mode doesn’t actively

476
00:33:21,500 --> 00:33:23,730
try to form an etherchannel.

477
00:33:23,730 --> 00:33:28,610
Same for D, PAgP auto mode doesn’t actively
try to form an EtherChannel.

478
00:33:28,610 --> 00:33:35,200
E, active – desirable, and F, on – desirable,
mix two different EtherChannel modes, which

479
00:33:35,200 --> 00:33:38,080
won’t result in a valid EtherChannel configuration.

480
00:33:38,080 --> 00:33:41,830
Let’s go to question 2.

481
00:33:41,830 --> 00:33:46,840
In the output of the show etherchannel summary
command, you notice that the physical interfaces

482
00:33:46,840 --> 00:33:50,720
in the EtherChannel you configured have the
flag (P) next to them.

483
00:33:50,720 --> 00:33:52,020
What does this mean?

484
00:33:52,020 --> 00:33:56,230
A, the interfaces are in LACP passive mode.

485
00:33:56,230 --> 00:33:59,900
B, the interfaces are bundled in the port-channel.

486
00:33:59,900 --> 00:34:05,570
C, the interfaces are paused until the other
switch’s EtherChannel is configured.

487
00:34:05,570 --> 00:34:09,320
Or D, the etherchannel is a Layer 2 EtherChannel.

488
00:34:09,320 --> 00:34:14,700
Pause the video to think about your answer.

489
00:34:14,700 --> 00:34:19,230
The answer is B, the interfaces are bundled
in the port-channel.

490
00:34:19,230 --> 00:34:23,369
This is the flag you want to see next to the
member interfaces of an EtherChannel.

491
00:34:23,369 --> 00:34:27,619
Here’s some sample output of SHOW ETHERCHANNEL
SUMMARY.

492
00:34:27,619 --> 00:34:31,160
As you can see, P means the port is bundled
in the port-channel.

493
00:34:31,160 --> 00:34:35,230
Let’s go to question 3.

494
00:34:35,230 --> 00:34:40,030
Which of the following member interface parameters
need to match to form an EtherChannel?

495
00:34:40,030 --> 00:34:42,149
Choose two.

496
00:34:42,149 --> 00:34:44,230
A, Interface ID.

497
00:34:44,230 --> 00:34:46,929
B, IP address.

498
00:34:46,929 --> 00:34:49,250
C, interface speed.

499
00:34:49,250 --> 00:34:53,149
Or D, switchport mode, access or trunk.

500
00:34:53,149 --> 00:34:58,990
Pause the video to think about your answer.

501
00:34:58,990 --> 00:35:03,460
The answers are C, interface speed, and D,
switchport mode.

502
00:35:03,460 --> 00:35:08,240
These are two of the settings that have to
match for interfaces to form an EtherChannel.

503
00:35:08,240 --> 00:35:13,890
A, interface ID, is unique to each interface,
so it cannot match.

504
00:35:13,890 --> 00:35:18,370
And even if you’re configuring a Layer 3
EtherChannel, the member interfaces won’t

505
00:35:18,370 --> 00:35:24,070
have IP addresses, the IP address must be
configured on the virtual port-channel interface.

506
00:35:24,070 --> 00:35:26,960
So B, IP address, is also incorrect.

507
00:35:26,960 --> 00:35:33,660
Okay, next let’s take a look at a question
about EtherChannel from Boson ExSim for CCNA.

508
00:35:33,660 --> 00:35:40,060
Okay, for today's Boson ExSim practice question
we have a question about EtherChannel.

509
00:35:40,060 --> 00:35:42,760
And this is a really good question, quite
challenging.

510
00:35:42,760 --> 00:35:44,760
So let's take a look.

511
00:35:44,760 --> 00:35:49,920
You issue the following commands on SwitchA
and then on SwitchB, so there are two switches.

512
00:35:49,920 --> 00:35:51,270
So let's see the commands.

513
00:35:51,270 --> 00:35:53,350
First, INTERFACE PORT-CHANNEL 1.

514
00:35:53,350 --> 00:35:58,700
So, this isn't necessary but it creates the
port-channel in advance, before actually doing

515
00:35:58,700 --> 00:36:00,410
the INTERFACE RANGE command.

516
00:36:00,410 --> 00:36:07,000
So this virtual port-channel exists, the interface
exists, but no physical interfaces have been

517
00:36:07,000 --> 00:36:10,210
made members of that virtual interface.

518
00:36:10,210 --> 00:36:16,810
Okay, then we enter the INTERFACE RANGE command
for FastEthernet 0/5 and 6.

519
00:36:16,810 --> 00:36:22,609
We manually configure the channel protocol,
the negotiation protocol, LACP in this case.

520
00:36:22,609 --> 00:36:25,560
And then finally we use the CHANNEL-GROUP
1 MODE ON command.

521
00:36:25,560 --> 00:36:30,339
Now normally, as I showed you in this video,
when you use the CHANNEL-GROUP command the

522
00:36:30,339 --> 00:36:34,350
port-channel interface is automatically created,
so this isn't always necessary.

523
00:36:34,350 --> 00:36:37,640
Okay, so that's SwitchA.

524
00:36:37,640 --> 00:36:40,339
CHANNEL-PROTOCOL LACP, CHANNEL-GROUP 1 MODE
ON.

525
00:36:40,339 --> 00:36:42,440
How about SwitchB?

526
00:36:42,440 --> 00:36:46,619
Again, we create the virtual port-channel
interface beforehand.

527
00:36:46,619 --> 00:36:53,250
Enter interface range config mode for FastEthernet0/5 and 6, this time we manually configure the

528
00:36:53,250 --> 00:36:58,420
protocol as PAgP, before once again doing
CHANNEL-GROUP 1 MODE ON.

529
00:36:58,420 --> 00:37:02,800
So, which of the following statements is true
about the resulting EtherChannel link between

530
00:37:02,800 --> 00:37:04,970
SwitchA and SwitchB?

531
00:37:04,970 --> 00:37:06,420
Select the best answer.

532
00:37:06,420 --> 00:37:12,390
A, a link is formed using LACP because it
was configured first and has priority.

533
00:37:12,390 --> 00:37:15,980
As you can see here, LACP was configured first.

534
00:37:15,980 --> 00:37:18,680
B, no link is formed.

535
00:37:18,680 --> 00:37:24,400
Okay, C, a link is formed using PAgP because
it was configured last and has priority.

536
00:37:24,400 --> 00:37:28,050
So, it was configured here on SwitchB.

537
00:37:28,050 --> 00:37:31,800
And then D, a link is formed without an aggregation
protocol.

538
00:37:31,800 --> 00:37:36,450
So you see both of these switches used the
command CHANNEL-GROUP 1 MODE ON.

539
00:37:36,450 --> 00:37:40,600
This configure static protocol (*EtherChannel),
without an aggregation protocol.

540
00:37:40,600 --> 00:37:43,080
So, what do you think is the answer?

541
00:37:43,080 --> 00:37:48,640
Pause the video here to think about it.

542
00:37:48,640 --> 00:37:50,520
Okay, hopefully you got the answer.

543
00:37:50,520 --> 00:37:54,040
I think the correct answer is B, no link is
formed.

544
00:37:54,040 --> 00:37:55,980
Now, why is that?

545
00:37:55,980 --> 00:37:58,660
So, first you create the port-channel interface.

546
00:37:58,660 --> 00:38:02,650
So it does exist, the virtual interface.

547
00:38:02,650 --> 00:38:08,000
Then you manually configure the channel protocol
on the physical interfaces.

548
00:38:08,000 --> 00:38:12,580
But when you use the command CHANNEL-GROUP
1 MODE ON to tell these physical interfaces

549
00:38:12,580 --> 00:38:18,869
to join this port-channel interface, to join
the EtherChannel, this command will be rejected.

550
00:38:18,869 --> 00:38:21,330
The CHANNEL-GROUP 1 MODE ON command.

551
00:38:21,330 --> 00:38:27,430
Because we already manually configured LACP,
so the only modes you can actually configure

552
00:38:27,430 --> 00:38:29,790
are ACTIVE and PASSIVE.

553
00:38:29,790 --> 00:38:33,490
MODE ON will not work, the command will be
rejected.

554
00:38:33,490 --> 00:38:34,780
And then same thing on SwitchB.

555
00:38:34,780 --> 00:38:38,530
This time instead of LACP it's PAgP.

556
00:38:38,530 --> 00:38:43,580
So you manually configured the channel-protocol
PAgP, so even though this port-channel interface

557
00:38:43,580 --> 00:38:49,910
exists, these interfaces won't actually join
it because the CHANNEL-GROUP 1 MODE ON command

558
00:38:49,910 --> 00:38:50,910
will be rejected.

559
00:38:50,910 --> 00:38:53,350
So, I think B is the correct answer.

560
00:38:53,350 --> 00:38:55,460
Let's check.

561
00:38:55,460 --> 00:38:56,900
And indeed it is.

562
00:38:56,900 --> 00:39:02,180
So here is Boson's explanation, quite a lengthy,
in-detail explanation.

563
00:39:02,180 --> 00:39:05,890
And this is something really great about ExSim.

564
00:39:05,890 --> 00:39:12,380
If you're ever unsure about why B is correct,
or why A, C, and D are incorrect, we've got

565
00:39:12,380 --> 00:39:17,900
all of these great, in-detail explanations
helping you out.

566
00:39:17,900 --> 00:39:20,480
And then finally, at the end there are references.

567
00:39:20,480 --> 00:39:26,839
This is to the official cert guide, EtherChannel
is covered in Volume 1, Chapter 10.

568
00:39:26,839 --> 00:39:32,580
And then also two links to Cisco documentation,
which is freely available online and is also

569
00:39:32,580 --> 00:39:34,950
a great study resource.

570
00:39:34,950 --> 00:39:37,990
Okay, so that's today's Boson ExSim practice
question.

571
00:39:37,990 --> 00:39:42,839
If you want to get a copy of Boson ExSim,
please follow the link in the video description.

572
00:39:42,839 --> 00:39:44,900
I really like these practice exams.

573
00:39:44,900 --> 00:39:49,839
I used them myself for my CCNA and CCNP, so
I really feel confident about recommending

574
00:39:49,839 --> 00:39:50,950
them to you.

575
00:39:50,950 --> 00:39:57,770
So once again, follow the link in the video
description to get a copy of Boson ExSim.

576
00:39:57,770 --> 00:40:00,599
There are supplementary materials for this
video.

577
00:40:00,599 --> 00:40:04,480
There is a flashcard deck to use with the
software ‘Anki’.

578
00:40:04,480 --> 00:40:09,240
There will also be a packet tracer practice
lab so you can get some hands-on practice.

579
00:40:09,240 --> 00:40:11,690
That will be in the next video.

580
00:40:11,690 --> 00:40:15,480
Sign up for my mailing list via the link in
the description, and I’ll send you all of

581
00:40:15,480 --> 00:40:20,829
the flashcards and packet tracer lab files
for the course.

582
00:40:20,829 --> 00:40:25,900
Before finishing today’s video I want to
thank my JCNP-level channel members.

583
00:40:25,900 --> 00:40:31,180
Thank you to funnydart, Joshua, Scott, Aleksa,
Hassan, Gerrard, Tibi, Vikram, Joyce, Marek,

584
00:40:31,180 --> 00:40:38,710
Samil, Velvijaykum, C Mohd, Johan, Mark, Miguel,
Yousif, Kone, Boson Software, the creators

585
00:40:38,710 --> 00:40:45,250
of ExSim, Sidi, Magrathea, Devin, Charlsetta,
Lito, Yonatan, Mike, Aleksander, and Vance.

586
00:40:45,250 --> 00:40:50,000
Sorry if I pronounced your name incorrectly,
but thank you so much for your support.

587
00:40:50,000 --> 00:40:55,900
One of you is still displaying as Channel
failed to load, if this is you please let

588
00:40:55,900 --> 00:40:59,070
me know and I’ll see if YouTube can fix
it.

589
00:40:59,070 --> 00:41:04,650
This is the list of JCNP-level members at
the time of recording by the way, June 6th

590
00:41:04,650 --> 00:41:08,840
2020, if you signed up recently and your name
isn’t on here don’t worry, you’ll be

591
00:41:08,840 --> 00:41:11,800
in future videos.

592
00:41:11,800 --> 00:41:12,880
Thank you for watching.

593
00:41:12,880 --> 00:41:17,360
Please subscribe to the channel, like the
video, leave a comment, and share the video

594
00:41:17,360 --> 00:41:20,630
with anyone else studying for the CCNA.

595
00:41:20,630 --> 00:41:23,320
If you want to leave a tip, check the links
in the description.

596
00:41:23,320 --> 00:41:29,910
I'm also a Brave verified publisher and accept
BAT, or Basic Attention Token, tips via the

597
00:41:29,910 --> 00:41:30,910
Brave browser.

598
00:41:30,910 --> 00:41:32,080
That's all for now.
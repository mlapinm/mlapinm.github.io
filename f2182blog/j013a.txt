1.410
Welcome to Jeremy’s IT Lab. This is a free, complete course for the CCNA 200-301. If you
8.820
like these videos, please subscribe to follow along with the series. Also, please like and
14.110
leave a comment, and share the video to help spread this free series of videos. Thanks
18.970
for your help. Also, remember to download and use the Anki flashcards with the link
23.949
in the description, which will help you very much in remembering what you have learned. Let’s get started.
30.939
This is the 7th lecture in the series. In the past couple videos we talked about Ethernet
35.930
LAN switching, for example within this small network of PCs, attached to a switch. In this
42.500
video, however, we’ll start to expand our horizon, and take a look at how traffic is
47.260
forwarded not WITHIN a LAN, but between different LANs. Basically, we are going up the OSI model
54.289
from Layer 2, the data link layer, to Layer 3, the network layer. Let’s do a quick review of Layer 3.
63.199
This slide is from Day 3’s video on the OSI model. Let’s review some characteristics
68.860
of Layer 3, the Network layer. The network layer provides connectivity between end hosts
74.980
on DIFFERENT networks, outside of the local area network. Layer 3 provides logical addressing,
82.440
specifically IP addresses. Where Layer 2 uses MAC addresses, which are assigned to
88.990
the device when it is made, IP addresses are logical addresses you assign when you configure
94.470
the device. Layer 3 provides path selection between source and destination. Over larger,
102.240
more complex networks, for example the Internet, there can be many different possible paths
107.720
to a destination. Selecting the best path to the destination is part of Layer 3’s
114.070
functionality. Routers operate at Layer 3. So far in this course we haven’t talked
119.320
much about routers. That’s going to change over these next few videos, however, as we
124.250
talk about Layer 3. In this video, our focus will be specifically on the logical Layer
130.390
3 addresses, IP addresses.
134.790
You may recognize this network from the previous videos on Ethernet LAN switching. These PCs
140.420
are all connected by switches, so they are part of the same network. These Layer 2 devices,
146.820
switches, do not separate different networks. They connect and expand networks. I could
152.990
connect two more switches, each with multiple PCs connected to them, to this network, and
158.610
it would still be one network, one LAN. Because of this, the PCs all have IP addresses in
165.370
the same Layer 3 network, 192.168.1.0/24. PC1’s IP address is 192.168.1.1, PC2’s
177.570
IP address is 192.168.1.2, PC3’s IP address is 192.168.1.3, and PC4’s IP address is
189.120
192.168.1.4. If PC1 sends a broadcast frame with a destination MAC address of all Fs,
198.190
After SW1 receives the frame, it will broadcast it out all of its interfaces except the
203.990
one it was received on,
206.560
so that means G0/1 and G0/2. SW2 will then do the same with the frame, broadcasting it
213.709
out of all of its interfaces, except the one it was received on.
218.220
so that means G0/0 and G0/1. As you can see, all other PCs in the network have received
225.430
the frame. Now, what if I put a router between SW1 and SW2?
232.319
Now I’ve put R1 in between the two switches. Now instead of one network, the PCs have been
238.580
split into two networks. Let’s say SW1, PC1, and PC2 are still on the 192.168.1.0/24
247.250
network, but now SW2, PC3 and PC4 are on the 192.168.2.0/24 network, with PC3 being 192.168.2.1
261.850
and PC4 being 192.168.2.2. You may have noticed that, in these network IP addresses, the first
270.180
three groups of numbers, 192.168.1, and 192.168.2, represent the network itself, and only this
279.880
last 0 changes to represent the end hosts on the network, the PCs. You may also have
286.930
wondered what these /24s mean at the end. Actually, they are used to tell what part
293.080
of the address represents the network, and which part represents the end hosts, the PCs.
299.810
/24 means that the first 3 groups of numbers represent the network. In this video I’m
306.740
going to go in depth about how these IP addresses work. But first, there’s one more thing
312.130
missing in this network diagram. The router needs an IP address. Actually, not just one
318.850
IP address, it needs an IP address for each network it is connected to. So, let’s give
325.020
R1’s G0/0 interface an IP address of 192.168.1.254, and it’s G0/1 interface an IP address of 192.168.2.254.
339.270
This time, if R1 sends a frame to the broadcast MAC address of all Fs, SW1 will receive the frame,
348.340
and it will forward it out of all of interfaces except the one the frame was received on.
352.840
So, it sends the frame out of G0/1 and G0/2, and PC2 and R1 receive the frame. However,
360.979
that’s where it ends. The broadcast is limited to the local network, it doesn’t cross the
366.510
router and go to SW2, PC3, and PC4. I’ll go more into detail about routing and Layer
373.240
3 forwarding, but as I said, this video will focus on IP addresses themselves, so let’s take a look.
381.510
This is a chart from Wikipedia showing the IP version 4 header. IP, or Internet protocol,
388.180
is the primary layer 3 protocol in use today, and version 4 is the version in use in most
394.150
networks. As you can see, there are a lot of different fields in the IPv4 header, more
400.030
than in the Ethernet header. We’ll talk more about the IPv4 header in another video,
405.600
so today let’s look at these two fields, the source IP address and destination IP address.
413.070
These fields are both 32-bits in length, as you can see they stretch from 0 to 31 in this
419.210
chart. So, IP addresses are 32-bits, or 4 bytes, in length.
426.130
Let’s take a look at this IPv4 address, 192.168.1.254. An IPv4 address is 32 bits
436.070
long, so each of these four groups of numbers represents 8 bits. 192 represents 8 bits,
444.650
168 represents 8 bits, 1 represents 8 bits, and 254 also represents 8 bits. If we write these
454.669
8 bits out as 1s and 0s, 192 is 11 00 00 00, 168 is 10 10 10 00, 1 is 00 00 00 01, and
472.730
254 is 11 11 11 10. This way of writing numbers using just 0s and 1s is called binary. However,
484.070
binary is difficult to read and understand for us humans, so IP addresses are written using
489.479
what’s called dotted decimal, because there are four decimal numbers, 192, 168, 1, and
496.419
254, separated by dots, or periods. Let’s spend some time learning about binary, which is important
504.090
to understand IPv4 addresses.
508.090
Before looking at binary, let’s review decimal and hexadecimal. In decimal, also known as
514.459
base 10, each digit increases by a factor of 10. For example, this number 3294 consists
524.199
of 1 unit of 4, 9 units of 10, 2 units of 100, and 3 units of 1000. Notice that they increase by a factor of 10.
537.639
1 x 10 is 10. 10 x 10 is 100. 100 x 10 is 1000, and next would be 1000 x 10, which is
548.110
ten thousand. Now, let’s look at this number in hexadecimal. Decimal 3294 is written in
557.350
hexadecimal as C D E. How does that work? Well, the first digit represents 1s, so this
564.709
is E times 1, and E = 14, so that equals 14. The next digit increases by a factor of 16,
575.079
and 1 * 16 is 16 of course, so this is D times 16, and D in hexadecimal is equal to 13, making this equal to decimal
586.329
208. Finally, the next digit increases by a factor of 16 once again, and 16 times 16
593.429
is equal to 256, so this is C times 256. In hexadecimal, C is equal to 12, so this is equal to decimal 3072.
609.730
If you add those numbers up, you get 3294. So, that’s a quick review of decimal and hexadecimal.
618.179
Now let’s look at binary.
620.309
So, looking back at this IP address 192.168.1.254, let’s look at how each of these numbers
628.189
is written in binary, starting with 192, which is 11 00 00 00.
637.649
Binary is base 2, meaning each digit increases by a factor of 2, it doubles. So, that means
644.790
that this 11 00 00 00 really is 0 1s, then 1 x 2 is 2, so 0 2s, then 2 x 2 is 4, so 0
658.019
4s, then 4 x 2 is 8, so 0 8s, then 8 x 2 is 16, so 0 16s, 16 x 2 is 32, so 0 32s, 32 x
673.339
2 is 64, so 1 64, and 64 x 2 is 128, so 1 128 If you add 128 and 64 together, you get 192.
690.680
Next let’s look at how 168 is converted to binary, which is 10 10 10 00.
698.420
So, 10 10 10 00 in binary means 1 unit of 128, 1 unit of 32, and 1 unit of 8. 128 plus
712.420
32 plus 8 is equal to 168.
717.360
Next up is 1, which is the decimal representation of binary 00 00 00 01.
725.300
This is pretty simple. 1 is equal to 1 unit of 1. Let’s go to the last 8 bits of the IP address.
734.980
254 is equal to 11 11 11 10 in binary. Let’s take a look.
743.649
Binary 11 11 11 10 represents 1 unit of 128, 1 unit of 64, 1 unit of 32, 1 unit of 16,
756.290
1 unit of 8, 1 unit of 4, and 1 unit of 2. Add those all together, and you get 254.
765.130
So, hopefully you have an idea of how binary works now. Before we do some practice converting
771.499
between decimal and binary, I want to teach you one more term. You’ll often hear each
777.689
of these 8 bit groups referred to as ‘octets’. Now, let’s get some practice converting
783.549
binary octets to decimal.
785.749
Here’s an example. We have a binary octet of 10 00 11 11. How can we go about converting
795.420
this to decimal? First, I recommend writing the value of each binary digit over the binary
801.839
numbers. You can start with 1 on the right, and then multiply by 2 for each digit as you
807.649
move to the left. Or if you prefer, start by writing 128 over the digit on the left,
814.809
and divide by 2 as you move to the right. Once you have written these values, simply
820.499
add up the value of each 1, and you get the answer. 128 + 8 + 4 + 2 + 1 equals 143. So,
832.480
binary 10 00 11 11 is equal to decimal 143. Let’s do another example.
842.869
Now we have binary 01 11 01 10. Once again, write the value of each binary digit over
851.489
the octet. So, we have 1 unit of 64, 1 unit of 32, 1 unit of 16, 1 unit of 4, and 1 unit
862.899
of 2. Add each of those numbers together, and you get the answer, which is 118. So,
871.239
binary 01 11 01 10 is equal to decimal 118.
878.649
What is binary 11 10 11 00 in decimal? This time I won’t display the value of each binary
886.620
digit above. Write down the number yourself, or try to do the calculation in your head.
893.709
Pause the video to figure out the answer. Got it? 128 + 64 + 32 + 8 + 4 equals
906.970
236. Okay, we’ll do some more binary to decimal conversion practice in the quiz for
913.569
today’s video, let’s move on.
917.310
Now let’s try converting in the opposite direction, from decimal to binary. We have
922.540
the decimal number 221, how can we go about converting it to binary? I recommend writing
930.169
out the values of each bit in a binary octet, like this. Then, starting from 128, try to
937.790
subtract each number from the decimal number you’re trying to convert. As you can see,
943.869
we can subtract 128 from 221, so write a 1 under 128. Now, we’ve got 93 left, can we
952.790
subtract 64 from 93? Yes we can, and we’re left with 28. So, write a 1 under 64. Next,
964.009
can we subtract 32 from 28? Well, we can, but we’d end up with a negative number,
970.179
so for our purposes, no we can’t. So, write a 0 under 32. Next, 16 is smaller than 28,
979.480
so let’s subtract 16 from 28. We’re left with 12, and write a 1 under 16. Next is 8,
989.339
and it’s smaller than 12, so let’s subtract 8 from 12 and write a 1 under 8. Next, subtract
997.049
4 from 4, and write a 1 under 4. We’re left with 0, so we can’t subtract any further.
1005.860
That means we can just write 0 and 2 and 1. So, there’s our answer. Decimal 221 is equivalent
1014.820
to binary 11 01 11 00 (**WRONG: CHECK ERRATA**).
1020.420
Let’s do another example. Let’s convert decimal 127 to binary. Try to figure it out
1028.620
yourself first. Pause the video to find the answer. Okay, hopefully you found the answer,
1038.550
let’s check. We can’t subtract 128 from 127, so write a 0 under 128. We can subtract
1047.510
64 from 127, which leaves 63, and I’ll write a 1 under 64. Then subtract 32 from 63, and
1057.950
write a 1 under 32, and we’re left with 31. Next subtract 16 from 31, 15 remains,
1068.370
and write a 1 under 16. Subtract 8 from 15, and write a 1 under 8. You’re left with
1077.080
7, so subtract 4 from 7 , you get 3, and write a 1 under 4. Subtract 2 from 3, and write
1086.800
a 1 under 2. Finally, subtract 1 from 1 and you’re left with 0. There’s our answer.
1096.060
Decimal 127 in binary is 01 11 11 11.
1102.740
Let’s do one more example of decimal to binary conversion. Again, try to find the
1108.730
answer yourself. Write down the numbers and convert decimal 207 to binary. Pause the video
1115.950
to think about your answer. Okay, hopefully you found the answer, let’s check. First,
1126.180
write out the values for each bit of the binary octet. Subtract 128 from 207, and write a
1133.720
1 under 128. Subtract 64 from 79, and write a 1 under 64. We can’t subtract 32 from
1144.180
15, so write a 0 under 32. You can’t subtract 16 from 15 either, so write a 0 under 16.
1154.850
Subtract 8 from 15, and write a 1 under 8. Subtract 4 from 7, and write a 1 under 4.
1164.040
Subtract 2 from 3, and write a 1 under 2. And finally, subtract 1 from 1 and you get 0.
1170.800
There’s the answer. Decimal 207 is equivalent to 11 00 11 11 in binary.
1180.620
Before moving on, you probably figured this out by yourself already, but the range of
1185.000
possible numbers that can be represented with 8 binary bits ranges from 0, if all bits are
1191.310
0, to 255, if all bits are 1, because 128 + 64 + 32 + 16 + 8 + 4 + 2 + 1 equals 255.
1204.920
So, an IPv4 address is really a series of 32 bits. It is split up into 4 octets, and
1213.730
then written in dotted decimal format to make it simpler for us humans to read and understand.
1220.240
However, you may remember there was this /24 that I said was used to identify which part
1226.640
of the IP address represents the network and which represents the end host. Since an IP
1233.470
address is 32 bits, can you guess what this /24 means? It means that the first 24
1241.380
bits of this IP address represent the network portion of the address, and the remaining
1246.930
8 represent the end host.
1249.570
So, the first 24 bits is equal to the first 3 octets, because 8 + 8 + 8 equals 24.
1259.680
So 192.168.1 is the network portion of the address, and 254 is the host portion.
1268.280
Here’s a quick look back at our small network. The IP address of PC1, PC2, and R1’s G0/0
1277.640
interface are 192.168.1.1/24, 192.168.1.2/24, and 192.168.1.254/24. Notice that the network
1292.280
portion of each IP address is the same, because they are all part of the same local network,
1298.230
only the host portion is different. Likewise, the IP addresses of PC3, PC4, and R1’s G0/1
1306.620
interface are 192.168.2.1/24, 192.168.2.2/24, and 192.168.2.254/24, only the host portion
1320.310
of the address is different because they are on the same local area network.
1324.740
Let’s follow the same process as before with another IP address. If you want some
1331.000
extra practice, try to convert these 32 binary bits into an IPv4 address. Pause the video
1337.850
if you want to try to find the answer on your own. Okay, so the 32 bits can be split into
1346.350
4 octets like this. Then the four octets can be converted into dotted decimal like this.
1354.630
This time, /16 is used instead of /24. Which portion is the network portion and which is the host portion?
1364.050
Well, /16 means the first 16 bits, or the first half, are the network portion. So, the
1372.300
first two octets are the network portion, and the last two octets are the host portion.
1378.380
Therefore, 154.78 is the network portion, and 111.32 is the host portion. Let’s do one more example.
1389.200
Here’s another IPv4 address. Try to convert these 32 bits into dotted decimal. Pause the
1397.320
video now if you want to try. Okay, so you can divide the 32 bits into 4 octets like
1406.840
this, and then convert the octets into dotted decimal like this. This time, it’s /8. So,
1414.750
which part of the address is the network portion, and which is the host portion?
1420.950
Since the first 8 bits are the network portion, that means that the first octet is the network
1425.811
portion, and the last three octets are the host portion.
1431.320
So 12 is the network portion, and 128.251.23 is the host portion.
1438.680
Now, IPv4 addresses are split up into 5 different ‘classes’. The class of an IPv4 address
1447.200
is determined by the first octet of the address. The first is class A, which has a first octet
1454.680
beginning with 0. If the first octet begins with 0, that means that the numeric range
1460.580
of the first octet is from 0 to 127, because 64 + 32 + 16 + 8 + 4 + 2 + 1 gives a maximum
1470.840
of 127. The second class is class B, which has a first octet beginning with 1 0, and
1479.890
therefore a numeric range of 128 to 191. The third class is class C, which has a first
1488.160
octet beginning with 1 1 0, and therefore the numeric range for the first octet is 192
1494.760
to 223. Class D has a first octet beginning with 1 1 1 0, and the numeric range of the
1503.600
first octet is 224 to 239. Finally, class E has a first octet beginning with 1111, and
1513.970
therefore the numeric range for the first octet is 240 to 255.
1519.390
However, the classes of address we’ll be focusing on are A, B, and C. Addresses in
1526.440
class D are reserved for ‘multicast’ addresses. Multicast is another type of address, separate
1532.900
from the unicast and broadcast addresses we talked about in previous videos. We will talk
1538.350
about them, but that will be later in the course. Class E addresses are reserved for
1543.560
experimental uses, and we won’t talk about them in this course. Now, one more thing about
1549.550
the Class A range. The end of the class A range is usually considered to be 126, NOT
1556.730
127. Why is that? Let’s take a look.
1561.900
The 127 range is reserved for ‘loopback addresses’. The range is anything with a
1567.760
first octet of 127, so 127.0.0.0 to 127.255.255.255. These addresses are used to test the ‘network
1579.950
stack’ of the local device. If a device sends any network traffic to an address in
1585.650
this range, it is simply processed back up the TCP/IP stack as if it were traffic received
1592.150
from another device. In this image, I pinged 127.0.0.1 on my windows PC, and you can see
1600.470
the responses. My PC is responding to its own pings. In this image, I sent a ping to
1607.970
a random IP address in the 127 range, 127.23.68.241, and again my PC responds back to its own ping.
1619.200
Notice the round trip times, all 0 milliseconds. That’s because the traffic isn’t going
1625.000
anywhere, my PC is just sending and receiving these pings to and from itself.
1629.460
So here’s the chart again with just classes A, B, and C. I’ve also added one more column,
1638.720
the prefix length, which is the /8, /16, and /24 which is used to identify the length of
1645.860
the network portion of the address. Class A addresses use a /8 prefix, Class B addresses
1653.090
use a /16 prefix, and Class C addresses use a /24 prefix.
1660.090
Actually, if you look back at these three addresses we used in our examples, you can
1665.260
see they are , Class A, class B, and Class C addresses, and their prefix lengths match
1672.010
the table. /8 for class A, /16 for class B, and /24 for class C. In class A, there are
1682.380
fewer possible network addresses, however because the network (*host) portion is very long,
1688.440
there can be many hosts on each network. Class C is the opposite, there are many more possible
1695.210
networks, but because the host portion is smaller there are fewer hosts on each network.
1700.710
Let’s take a look at the numbers.
1703.540
So, this is another chart I’ve taken off of wikipedia. The leading bits column refers
1710.110
to the first bits of the first octet, which I displayed in my previous table. The ‘size
1716.200
of network number bit field’ displays the number of bits in the network portion of the
1720.520
IP address, which as I mentioned is 8 for class A, 16 for class B, and 24 for class
1727.800
C. ‘size of rest bit field’ indicates the remaining number of bits in the address, which is
1734.670
the host portion of the address. 24 bits for class A, 16 for class B, and 8 for class C.
1742.050
Now, this part here displays the number of possible networks in each class. As I said,
1749.760
class A has fewer potential networks, but more hosts in each network, class C is the
1755.720
opposite, and class B is in between. Class A has 128 possible networks, Class B has about
1764.140
16,000 networks, and Class C has about 2 million networks. Class A allows about 16.7 million
1772.690
hosts in each network, Class B allows about 65,000 hosts in each network, and class C
1779.421
allows 256 hosts in each network. However, because the first address in each network
1786.330
is the network address, it cant be assigned to hosts. Also the last address of the network
1792.800
is the broadcast address, the Layer 3 address used when you want to send traffic to all
1797.690
hosts, and it also can’t be assigned to hosts, so really the host count is two less, for example
1804.490
254 in class C.
1809.520
Now I want to briefly talk about another way of writing these prefix lengths. Using a slash,
1815.570
followed by the length of the prefix, is a newer and easier way of writing the prefix
1819.740
length. On Juniper network devices, for example, you write prefix lengths using this slash
1826.630
notation. However, Cisco devices still use an older, slightly more complicated way of
1832.559
writing the prefix length. That is using a dotted decimal netmask. A netmask is written
1839.250
in dotted decimal like an IP address, where the network portion is all 1s and the host
1845.170
portion is all 0s. For example, the network mask of a class A address is 255.0.0.0. That’s
1854.650
the dotted decimal version of 11 11 11 11, followed by 24 zeroes. So, what do you think
1862.790
the netmask of a Class B address is?... It’s 255.255.0.0, which is two octets of 1s, followed
1871.840
by two octets of zeroes, written in dotted decimal. Finally, what do you think the netmask
1877.820
of a Class C address is? It’s 255.255.255.0, which is three octets of 1s, followed by 1
1887.130
octet of zeroes, again written in dotted decimal notation. So, these prefix lengths and these
1893.940
netmasks are the same things, just written in different ways.
1899.670
Before moving on to the quiz for today’s video, I want to explain two more types of
1903.170
IP addresses which I briefly mentioned before, the network and broadcast addresses. If the host portion of an IP address is all
1912.100
0’s, it means it is the Network address, the identifier of the network itself. In our
1918.830
diagram here, you can see 192.168.1.0/24. We know that /24 means the first three octets
1927.670
are the network portion, and the last octet is the host portion. Since, the host portion
1933.610
is 0, it means the last octet, the host portion, is all 0s. Therefore, this address, 192.168.1.0/24,
1943.990
is the network address. Keep in mind, the network address cannot be assigned to a host.
1950.770
The network address is the first address of the network, but the first USABLE address
1955.780
is one above the network address, in this case it’s 192.168.1.1, which is assigned to PC1.
1964.200
So, the network address is the first address, with a host portion of all 0s. However, the
1972.179
LAST address in a network, with a host portion of all 1s, is the broadcast address for the
1977.670
network. Like the network address, the broadcast address CANNOT be assigned to a host. So although
1985.700
it’s the last address in the network the last USABLE address is actually 1 under the
1991.200
broadcast address, in this case, that’s 192.168.1.254, the address assigned to R1’s G0/0 interface.
2002.070
So, the broadcast address is the layer 3 address used to send a packet to all hosts on the
2007.440
local network. If a packet is sent with this destination IP address, what do you think
2013.350
will be the destination MAC address of the frame it is encapsulated in? Think about the
2018.840
Ethernet LAN switching videos... it will be all F’s, the broadcast MAC Address. If PC1,
2027.170
for example, sent a ping to 192.168.1.255, it would be received by PC2 and R1’s G0/0 interface.
2039.630
Once again, I think we’ve covered a lot of ground in this video. Let’s list what
2043.990
we covered before moving on to today’s quiz. First, I talked about dotted decimal and binary.
2051.499
Binary is how computers think, but 32 bit IPv4 addresses are difficult to remember for
2056.529
us humans, so we convert IPv4 addresses to dotted decimal form to make them easier to
2062.359
read and remember. You learned that IPv4 addresses consist of a network portion and a host portion.
2071.069
Hosts on the same network will have the same network portion, but a unique host portion
2075.560
of their IP addresses. You learned about the IPv4 address classes. We looked at the
2082.700
different ways of indicating the length of the network prefix, by writing the prefix
2086.899
length with a slash or by using a netmask. and finally, you learned about the network
2092.650
address, which has a host portion of all 0s, and is used to identify the network itself,
2098.410
not any particular host on the network. Also, the broadcast address, which has a host portion of all 1s,
2105.839
which is used to send network traffic to all hosts on the network.
2109.890
So, before moving on to the quiz I want to remind you to download and use the flashcards
2114.780
for this lesson to help you remember what you’ve studied in this lesson. Now, for
2119.789
today’s quiz, I’m going to focus exclusively on converting IPv4 addresses between binary
2125.049
and dotted decimal. There will be 10 questions, instead of the usual 5, and hopefully afterward
2132.119
you’ll feel confident converting IPv4 addresses between binary and dotted decimal. Let’s get started.
2139.489
Question 1. Convert the following IPv4 address to dotted decimal notation. Pause the video
2146.109
to solve the question, then unpause to check your answer.
2154.060
The answer is 63.56.231.19. Let’s go the question 2.
2161.780
Convert the following IPv4 address to dotted decimal notation. Pause the video to solve
2166.960
the question, then unpause to check your answer.
2174.320
The answer is 243.127.98.1. Let’s go question 3.
2182.940
Convert the following IPv4 address to dotted decimal notation. Pause the video to solve
2188.190
the question, and unpause to check your answer.
2195.700
The answer is 111.6.89.199. Let’s go question 4.
2203.730
Convert the following IPv4 address to dotted decimal notation. Pause the video to solve
2209.230
the question, and unpause to check your answer.
2216.220
The answer is 207.198.47.76. Let’s go question 5.
2225.750
Convert the following IPv4 address to dotted decimal notation. Pause the video to solve
2231.200
the question, and unpause to check your answer.
2238.680
The answer is 100.201.33.253. Let’s go question 6.
2247.180
Convert the following IPv4 address to binary notation. 88.46.90.91. Pause the video to
2256.170
solve the question, and unpause to check your answer. And here’s the answer. Let's go to question 7.
2272.489
Convert the following IPv4 address to binary notation. 221.234.246.163. Pause the video
2283.099
to solve the question, and unpause to check your answer. And here’s the answer. Let's
2295.130
go to question 8.
2298.039
Convert the following IPv4 address to binary notation. 3.41.143.222. Pause the video to
2307.910
solve the question, and unpause to check your answer. And here’s the answer. Let's go to question 9.
2322.519
Convert the following IPv4 address to binary notation. 10.200.231.91. Pause the video to
2331.200
solve the question, and unpause to check your answer. And here’s the answer. Let's go to question 10.
2345.049
Convert the following IPv4 address to binary notation. 248.87.255.152. Pause the video
2354.869
to solve the question, and unpause to check your answer. And here’s the answer.
2363.670
Okay, that’s all for the quiz, I hope you feel confident converting IPv4 addresses between
2370.980
binary and dotted decimal notation. As usual, there will be supplementary materials to help
2377.210
you review what you’ve learned. There will be review flashcards using Anki, which I highly
2382.980
recommend you download and use to review. There will also be a packet tracer practice
2388.700
lab, however it will be after Part 2’s video, so there won’t be a lab for today’s video
2394.369
specifically. Good luck with your studies.
2397.940
Thank you for watching. Please subscribe to the channel, like the video, leave a comment,
2404.119
and share the video with anyone else studying for the CCNA. If you want to leave a tip,
2409.200
check the links in the description. I'm also a Brave verified publisher, and accept BAT,
2414.809
or Basic Attention Token, tips via the Brave browser. That's all for now.
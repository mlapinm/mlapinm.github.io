1
00:00:01,800 --> 00:00:04,180
Welcome to Jeremy’s IT Lab.

2
00:00:04,180 --> 00:00:07,680
This is a free, complete course for the CCNA.

3
00:00:07,680 --> 00:00:11,990
If you like these videos, please subscribe
to follow along with the series.

4
00:00:11,990 --> 00:00:17,080
Also, please like and leave a comment, and
share the video to help spread this free series

5
00:00:17,080 --> 00:00:18,470
of videos.

6
00:00:18,470 --> 00:00:20,579
Thanks for your help.

7
00:00:20,579 --> 00:00:24,300
In this video we will continue our study of
spanning tree.

8
00:00:24,300 --> 00:00:29,069
In part 1 we focused on the basic purpose
of spanning tree and how to calculate a spanning

9
00:00:29,069 --> 00:00:30,810
tree topology.

10
00:00:30,810 --> 00:00:36,489
In this video we will look into more detail
at the operation of spanning tree.

11
00:00:36,489 --> 00:00:39,800
First let’s see what we’ll cover in this
video.

12
00:00:39,800 --> 00:00:44,050
First of all we will take a look at spanning tree states and timers.

13
00:00:44,050 --> 00:00:49,019
You already know the blocking and forwarding
states, but there are also a couple transitional

14
00:00:49,019 --> 00:00:53,749
states between those two, and some timers
that determine when the switch moves between

15
00:00:53,749 --> 00:00:54,749
each state.

16
00:00:54,749 --> 00:01:00,800
I’ll show you the spanning tree BPDU (bridge protocol data unit, what fields are included in it

17
00:01:00,800 --> 00:01:04,140
and what their purpose  is.

18
00:01:04,140 --> 00:01:08,950
Then we’ll take a look at some optional
features of STP, sometimes called the spanning

19
00:01:08,950 --> 00:01:13,140
tree ‘toolkit’, some additional features
that you can enable that improve spanning

20
00:01:13,140 --> 00:01:15,840
tree, we’ll cover some of them briefly.

21
00:01:15,840 --> 00:01:20,470
Finally, we’ll cover spanning tree configurations.

22
00:01:20,470 --> 00:01:25,141
Spanning tree runs by default so you don’t
actually have to do any configuration, but

23
00:01:25,141 --> 00:01:29,590
you should know how to change which switch
becomes the root switch and such, so you can

24
00:01:29,590 --> 00:01:32,370
make sure traffic follows the best path.

25
00:01:32,370 --> 00:01:35,980
Also, make sure to stick around to the end
of today’s quiz.

26
00:01:35,980 --> 00:01:41,460
I will feature one practice question from
Boson Software’s ExSim, a fantastic set

27
00:01:41,460 --> 00:01:44,720
of practice exams for the CCNA.

28
00:01:44,720 --> 00:01:49,100
Pretty much everyone who uses them agrees
they are the best practice exams out there,

29
00:01:49,100 --> 00:01:52,570
and are an essential part of preparing for
the CCNA.

30
00:01:52,570 --> 00:01:58,360
They definitely helped me pass all of my CCNA
and CCNP exams on the first try!

31
00:01:58,360 --> 00:02:05,130
If you want to grab a copy of ExSim, please
follow the link in the video description.

32
00:02:05,130 --> 00:02:08,670
First let’s take a look at spanning
tree port states.

33
00:02:08,670 --> 00:02:14,080
You are already familiar with two, BLOCKING
and FORWARDING, but there are two others,

34
00:02:14,080 --> 00:02:16,340
LISTENING and LEARNING.

35
00:02:16,340 --> 00:02:19,640
BLOCKING and FORWARDING are the two ‘stable’
states.

36
00:02:19,640 --> 00:02:25,700
Root and Designated ports remain stable in a Forwarding state, and Non-designated ports remain stable

37
00:02:25,700 --> 00:02:28,070
in a Blocking state.

38
00:02:28,070 --> 00:02:33,200
Note that they only remain stable as long
as there are no changes in the network topology.

39
00:02:33,200 --> 00:02:38,750
If a new device is added, an interface is
shutdown, or a hardware failure occurs somewhere,

40
00:02:38,750 --> 00:02:41,490
they may have to change states.

41
00:02:41,490 --> 00:02:46,380
But as I said, as long as the network is stable,
each spanning tree interface will be stable

42
00:02:46,380 --> 00:02:48,190
in one of these states.

43
00:02:48,190 --> 00:02:51,990
Now, there are also two transitional states.

44
00:02:51,990 --> 00:02:55,890
Listening and Learning are transitional states
which are passed through when an interface

45
00:02:55,890 --> 00:03:00,370
is activated, or when a Blocking port must
transition to a Forwarding state due to a

46
00:03:00,370 --> 00:03:02,350
change in the network topology.

47
00:03:02,350 --> 00:03:08,290
Actually, there is one more state you might
hear of, this is the disabled state.

48
00:03:08,290 --> 00:03:12,620
This simply refers to an interface that is
administratively disabled, meaning shutdown.

49
00:03:12,620 --> 00:03:16,520
We won’t really talk about the disabled
state much because it doesn’t really play

50
00:03:16,520 --> 00:03:19,820
any role in spanning tree, the interface is
shut down.

51
00:03:19,820 --> 00:03:26,360
Okay, let’s take a look at these states,
starting with the Blocking state.

52
00:03:26,360 --> 00:03:30,120
Non-designated ports are in a Blocking state.

53
00:03:30,130 --> 00:03:34,440
Interfaces in a Blocking state are effectively
disabled to prevent loops.

54
00:03:34,440 --> 00:03:40,700
This is what makes spanning tree work, disabling
redundant interfaces to avoid loops.

55
00:03:40,700 --> 00:03:45,030
Interfaces in a Blocking state do not send/receive
regular network traffic.

56
00:03:45,030 --> 00:03:50,480
Any regular traffic that arrives on an interface
in a blocking state will simply be dropped.

57
00:03:50,480 --> 00:03:55,800
However, Interfaces in a Blocking state do
receive STP BPDUs.

58
00:03:55,800 --> 00:04:01,820
They need to receive and process BPDUs to
be aware of the spanning tree topology, and be ready

59
00:04:01,820 --> 00:04:05,590
to transition toward a forwarding state if
they need to.

60
00:04:05,590 --> 00:04:12,080
But, interfaces in a Blocking state do NOT
forward STP BPDUs.

61
00:04:12,080 --> 00:04:17,349
Finally, interfaces in a Blocking state do
NOT learn MAC addresses.

62
00:04:17,349 --> 00:04:21,569
If regular traffic arrives on the interface
it is dropped without adding the MAC address

63
00:04:21,569 --> 00:04:25,330
to the MAC address table.

64
00:04:25,330 --> 00:04:30,330
After the Blocking state, interfaces with
the Designated or Root role enter the Listening

65
00:04:30,330 --> 00:04:31,759
state.

66
00:04:31,759 --> 00:04:38,250
Let me just repeat that only Designated or
Root ports enter the Listening state, Non-designated

67
00:04:38,250 --> 00:04:39,909
ports are always Blocking.

68
00:04:39,909 --> 00:04:43,871
That’s because Listening is a transitional
state that eventually leads to the forwarding

69
00:04:43,871 --> 00:04:49,150
state, so there’s no need for a Non-designated
port to enter this state.

70
00:04:49,150 --> 00:04:52,680
The Listening state is 15 seconds long by
default.

71
00:04:52,680 --> 00:04:56,229
This is determined by a timer called the ‘Forward
delay’ timer.

72
00:04:56,229 --> 00:05:00,439
You’ll soon see that this timer isn’t
used only for the Listening state.

73
00:05:00,439 --> 00:05:04,689
Anyway, remember that it is 15 seconds by
default.

74
00:05:04,689 --> 00:05:10,740
An interface in the Listening state ONLY forwards/receives Spanning Tree BPDUs.

75
00:05:10,740 --> 00:05:14,099
It does NOT send or receive regular traffic.

76
00:05:14,099 --> 00:05:18,520
If a regular unicast frame is received on
a port in the Listening state, it will be

77
00:05:18,520 --> 00:05:20,870
discarded.

78
00:05:20,870 --> 00:05:25,439
An interface in the Listening state also does
NOT learn MAC addresses from regular traffic

79
00:05:25,439 --> 00:05:26,760
that arrives on the interface.

80
00:05:26,760 --> 00:05:31,490
I said the same thing about the Blocking state,
but let me explain.

81
00:05:31,490 --> 00:05:36,340
As you know well already, when a frame arrives
on a switch interface, the switch uses the

82
00:05:36,340 --> 00:05:41,180
source MAC address field to ‘learn’ that
MAC address, and it updates the MAC address

83
00:05:41,180 --> 00:05:45,620
table with the MAC address, interface, and
VLAN information.

84
00:05:45,620 --> 00:05:50,800
However, if an interface is in the spanning
tree Listening state, it will not do this.

85
00:05:50,800 --> 00:05:57,619
The traffic is simply dropped, and the MAC
address learning process does not occur.

86
00:05:57,619 --> 00:06:02,979
After the Listening state, a Designated or
Root port will enter the Learning state.

87
00:06:02,979 --> 00:06:06,180
The Learning state is 15 seconds long by default.

88
00:06:06,180 --> 00:06:10,690
This is determined by the Forward delay timer,
so the same timer is used for both the Listening

89
00:06:10,690 --> 00:06:15,689
and Learning states, meaning by default it
takes a total of 30 seconds to move through

90
00:06:15,689 --> 00:06:19,309
both states and enter a forwarding state.

91
00:06:19,309 --> 00:06:24,629
Same as in the Listening state, an interface
in the Learning state ONLY sends or receives

92
00:06:24,629 --> 00:06:27,009
spanning tree protocol BPDUs.

93
00:06:27,009 --> 00:06:31,069
Also, it does NOT send or receive regular traffic.

94
00:06:31,069 --> 00:06:35,650
However, here is the difference between the
Listening and Learning states.

95
00:06:35,650 --> 00:06:40,089
An interface in the Learning state learns
MAC addresses from regular traffic that arrives

96
00:06:40,089 --> 00:06:41,440
on the interface.

97
00:06:41,440 --> 00:06:46,349
So, an interface in the learning state is
preparing to forward traffic by building up

98
00:06:46,349 --> 00:06:49,499
some of its MAC address table beforehand.

99
00:06:49,499 --> 00:06:53,509
Finally, we have the forwarding state.

100
00:06:53,509 --> 00:06:57,940
Root and Designated ports are in a Forwarding
state when they're stable.

101
00:06:57,940 --> 00:07:01,110
A port in the Forwarding state operate as
normal.

102
00:07:01,110 --> 00:07:03,479
So, what does that mean?

103
00:07:03,479 --> 00:07:07,990
A port in the Forwarding state sends and receives
BPDUs.

104
00:07:07,990 --> 00:07:10,979
It sends and receives normal traffic.

105
00:07:10,979 --> 00:07:15,110
Also it learns MAC addresses from the frames that
arrive on it, and adds them to the MAC address

106
00:07:15,110 --> 00:07:16,110
table.

107
00:07:16,110 --> 00:07:20,119
So, it’s a switchport operating as normal.

108
00:07:20,119 --> 00:07:24,460
For review, here’s a summary of each spanning
tree port state.

109
00:07:24,460 --> 00:07:29,469
For reference, I’ve also added the Disabled
state to the bottom, which as I said before

110
00:07:29,469 --> 00:07:34,939
is the spanning tree state of a shutdown,
administratively disabled, interface.

111
00:07:34,939 --> 00:07:39,160
Pause the video if you want to take a look
at this table and use it for review.

112
00:07:39,160 --> 00:07:43,310
You can also review using the flashcard deck,
make sure to download it from the link in

113
00:07:43,310 --> 00:07:46,469
the video description.

114
00:07:46,469 --> 00:07:49,610
Now let’s talk about each of the timers
used in Spanning Tree.

115
00:07:49,610 --> 00:07:54,960
I’ve already mentioned the Hello and Forward
Delay timers, but I haven’t mentioned Max

116
00:07:54,960 --> 00:07:57,029
Age yet.

117
00:07:57,029 --> 00:08:00,800
First up let’s look more in detail at the
hello timer.

118
00:08:00,800 --> 00:08:05,990
It determines how often the root bridge sends
hello BPDUs, by default it will send them

119
00:08:05,990 --> 00:08:08,490
every 2 seconds.

120
00:08:08,490 --> 00:08:13,900
Other switches in the network do not originate
their own BPDUs, but they will forward BPDUs

121
00:08:13,900 --> 00:08:15,279
they receive.

122
00:08:15,279 --> 00:08:18,370
However, there is one thing I didn’t mention
before.

123
00:08:18,370 --> 00:08:22,659
The switches will only forward BPDUs on their
DESIGNATED PORTs.

124
00:08:22,659 --> 00:08:26,189
Let’s see how that works.

125
00:08:26,189 --> 00:08:28,810
First off, I showed you this slide in day
20’s video.

126
00:08:28,810 --> 00:08:33,899
Assuming these switches all come online at
the same time, each assumes they are the root

127
00:08:33,899 --> 00:08:38,469
bridge, and each will send BPDUs out of all
interfaces.

128
00:08:38,469 --> 00:08:43,500
However, once the network has converged and
all switches and ports are stabilized in their

129
00:08:43,500 --> 00:08:46,480
roles, only the root bridge sends BPDUs.

130
00:08:46,480 --> 00:08:51,780
Then, the other switches will forward these
BPDUs on their designated ports, updating

131
00:08:51,780 --> 00:08:58,430
information like the bridge root cost, sending
bridge ID, sending port ID, etc.

132
00:08:58,430 --> 00:09:05,050
Then, two seconds later, the root bridge will
send BPDUs again, and the other switches will

133
00:09:05,050 --> 00:09:09,240
again forward these BPDUs on their designated
ports.

134
00:09:09,240 --> 00:09:14,420
Note that they do not forward the BPDUs out
of their root ports and non-designated ports,

135
00:09:14,420 --> 00:09:16,170
only their designated ports.

136
00:09:16,170 --> 00:09:19,480
So, that’s the hello timer.

137
00:09:19,480 --> 00:09:22,220
Next up, the forward delay timer.

138
00:09:22,220 --> 00:09:26,589
This is the length of the Listening and Learning
transitional states that a port goes through

139
00:09:26,589 --> 00:09:29,370
when it moves to forwarding.

140
00:09:29,370 --> 00:09:34,490
Note that this is the length of each of the
states, not the total length of both combined.

141
00:09:34,490 --> 00:09:40,060
So, with the default Forward delay timer of
15 seconds, it takes a total of 30 seconds

142
00:09:40,060 --> 00:09:44,610
for the switchport to move through both states
and forward traffic.

143
00:09:44,610 --> 00:09:50,450
Then the final timer, one I haven’t told
you about yet, is the max age timer.

144
00:09:50,450 --> 00:09:55,440
This timer indicates how long an interface
will wait to change the spanning tree topology after

145
00:09:55,440 --> 00:09:57,360
ceasing to receive BPDUs.

146
00:09:57,360 --> 00:10:00,279
So, this will need some more explanation.

147
00:10:00,279 --> 00:10:02,930
Let’s take a look.

148
00:10:02,930 --> 00:10:08,399
Remember that each collision domain has one
designated port, and BPDUs are forwarded out

149
00:10:08,399 --> 00:10:10,220
of designated ports.

150
00:10:10,220 --> 00:10:16,829
So, all root ports and non-designated ports
expect to receive BPDUs.

151
00:10:16,829 --> 00:10:24,040
The root bridge, SW3, sends BPDUs, and then
SW1 and SW4 forward them out of their designated

152
00:10:24,040 --> 00:10:27,190
ports.

153
00:10:27,190 --> 00:10:33,029
To demonstrate the Max Age timer, let’s
focus on SW2’s G0/1 interface.

154
00:10:33,029 --> 00:10:37,970
It just received a BPDU, so the max age timer
is reset to 20.

155
00:10:37,970 --> 00:10:40,430
It counts down to 19...

156
00:10:40,430 --> 00:10:42,029
18…

157
00:10:42,029 --> 00:10:46,850
And then the root bridge sends BPDUs, because
of the 2 second hello timer.

158
00:10:46,850 --> 00:10:54,880
they are forwarded by the other switches,
and SW2 resets its max age timer to 20...

159
00:10:54,940 --> 00:10:57,660
19...18…

160
00:10:57,670 --> 00:11:02,420
But what if a failure occurs on the connection
between SW1 and SW2?

161
00:11:02,420 --> 00:11:08,759
The root bridge will send BPDUs, and other
switches will forward the BPDUs, but SW1’s

162
00:11:08,759 --> 00:11:16,000
G0/0 interface is down so SW2 no longer receives
a BPDU on its G0/1 interface.

163
00:11:16,000 --> 00:11:20,170
So, the max age timer continues counting down.

164
00:11:20,170 --> 00:11:21,370
17…

165
00:11:21,370 --> 00:11:22,560
16…

166
00:11:22,560 --> 00:11:28,279
15… and if the failure doesn’t recover
and SW2 doesn’t receive any more BPDUs on

167
00:11:28,279 --> 00:11:34,410
its G0/1 interface, SW2’s max age timer
will count all the way down to 0.

168
00:11:34,410 --> 00:11:37,160
What happens then?

169
00:11:37,160 --> 00:11:42,410
First of all, If another BPDU is received
before the max age timer counts down to 0,

170
00:11:42,410 --> 00:11:46,449
the time will reset to 20 seconds and no changes
will occur.

171
00:11:46,449 --> 00:11:53,160
However, If another BPDU is not received,
the max age timer counts down to 0 and the

172
00:11:53,160 --> 00:11:59,750
switch will reevaluate its STP choices, including
root bridge, and local root, designated, and

173
00:11:59,750 --> 00:12:02,329
non-designated ports.

174
00:12:02,329 --> 00:12:07,310
After these decisions, if a non-designated
port is selected to become a designated or

175
00:12:07,310 --> 00:12:13,519
root port, it will transition from the blocking
state to the listening state (for 15 seconds),

176
00:12:13,519 --> 00:12:18,149
learning state (again for 15 seconds), and then finally
the forwarding state.

177
00:12:18,149 --> 00:12:24,259
So, it can take a total of 50 seconds for
a blocking interface to transition to forwarding.

178
00:12:24,259 --> 00:12:27,160
Why does it take so long?

179
00:12:27,160 --> 00:12:31,870
Well, tThese timers and transitional states
are to make sure that loops aren’t accidentally

180
00:12:31,870 --> 00:12:36,050
created by an interface moving to forwarding
state too soon.

181
00:12:36,050 --> 00:12:40,610
I showed you in the previous lecture how dangerous
a Layer 2 loop can be.

182
00:12:40,610 --> 00:12:44,861
That’s why spanning tree protocol is very
careful about moving an interface to a forwarding

183
00:12:44,861 --> 00:12:45,861
state.

184
00:12:45,861 --> 00:12:51,259
However, a forwarding interface can move directly
to a blocking state, because there is no worry

185
00:12:51,259 --> 00:12:53,990
about creating a loop by blocking an interface.

186
00:12:53,990 --> 00:12:59,509
But, as I just said, a blocking interface
cannot move directly to forwarding state.

187
00:12:59,509 --> 00:13:03,389
It must go through the listening and learning
states.

188
00:13:03,389 --> 00:13:09,500
So let’s move on to check out the spanning
tree BPDU, bridge protocol data unit.

189
00:13:09,500 --> 00:13:13,670
First off, in the Ethernet header section,
notice the destination.

190
00:13:13,670 --> 00:13:25,120
Cisco’s PVST+ uses the destination MAC address
of 0100.0ccc.cccd for its BPDUs.

191
00:13:25,120 --> 00:13:30,089
I recommend remembering this, it’s a little
bit of trivia you might need to know for the

192
00:13:30,089 --> 00:13:31,620
test.

193
00:13:31,620 --> 00:13:36,220
For remembering little facts like these, I
highly recommend using the Anki flashcard

194
00:13:36,220 --> 00:13:38,629
deck I include with this video.

195
00:13:38,629 --> 00:13:44,120
I mentioned PVST in the previous lecture,
but what’s PVST+?

196
00:13:44,120 --> 00:13:52,540
Well, PVST is an older version which only
supports Cisco’s ISL for trunk encapsulation.

197
00:13:52,540 --> 00:13:56,120
PVST+ is a newer version which supports dot1q.

198
00:13:56,120 --> 00:14:03,269
I might use the term ‘PVST’ sometimes,
but really I mean PVST+, because ISL is pretty

199
00:14:03,269 --> 00:14:06,019
much never used anymore.

200
00:14:06,019 --> 00:14:11,480
By the way, since I mentioned the MAC address,
regular spanning tree, meaning not Cisco’s

201
00:14:11,480 --> 00:14:21,360
PVST or PVST+, uses a destination MAC address
of 0180.c200.0000.

202
00:14:21,360 --> 00:14:25,820
Again, you probably should remember that fact
for the exam.

203
00:14:25,820 --> 00:14:29,220
Now let’s move on to the spanning tree BPDU
itself.

204
00:14:29,220 --> 00:14:33,990
I don’t think you need to memorize the BPDU for the CCNA, but I just want to

205
00:14:33,990 --> 00:14:38,089
give you an introduction to what is included
in the BPDU.

206
00:14:38,089 --> 00:14:44,210
The first three fields are the protocol identifier,
which is always hexadecimal 0000 for spanning

207
00:14:44,210 --> 00:14:45,339
tree.

208
00:14:45,339 --> 00:14:50,900
The protocol version identifier is set to
0 for classic spanning tree, you’ll see

209
00:14:50,900 --> 00:14:55,860
a different value here when we look at rapid
spanning tree protocol in day 22.

210
00:14:55,860 --> 00:15:04,209
Finally, the BPDU type is hexadecimal 00 for
what’s called a ‘configuration BPDU’.

211
00:15:04,209 --> 00:15:10,749
There are other types of BPDUs, but we don’t
need to go that in depth for the CCNA.

212
00:15:10,749 --> 00:15:15,480
Next up are some flags, these are used to
signal topology changes to other switches.

213
00:15:15,480 --> 00:15:21,660
Again, I don’t think we need to go in depth
about these for the CCNA.

214
00:15:21,660 --> 00:15:27,600
Next up is the root identifier, which gives
the bridge priority, extended system ID, which

215
00:15:27,600 --> 00:15:33,529
is the VLAN ID, 10 in this case, and the bridge
system ID, which is the MAC Address of the

216
00:15:33,529 --> 00:15:34,529
root bridge.

217
00:15:34,529 --> 00:15:39,259
I set the MAC address to all A’s in this
case.

218
00:15:39,259 --> 00:15:41,100
Next is the root path cost.

219
00:15:41,100 --> 00:15:45,930
It’s 0 in this case, so you know that this
is the root bridge.

220
00:15:45,930 --> 00:15:49,589
You can also know this is the root bridge
by looking at this field.

221
00:15:49,589 --> 00:15:55,660
The information in the bridge identifier field
is the same as in the root identifier field,

222
00:15:55,660 --> 00:15:58,879
meaning this is the root bridge.

223
00:15:58,879 --> 00:16:03,769
After that is the port identifier, the interface
which sent the BPDU.

224
00:16:03,769 --> 00:16:07,170
It is hexadecimal 8 0 0 2.

225
00:16:07,170 --> 00:16:14,649
8 0 in hexadecimal is equivalent to 128, which
if you remember from day 20, is the default

226
00:16:14,649 --> 00:16:15,670
port priority.

227
00:16:15,670 --> 00:16:19,449
0 2 is the number of the port itself.

228
00:16:19,449 --> 00:16:22,480
Finally, the timers.

229
00:16:22,480 --> 00:16:27,759
Message age is something I haven’t mentioned
yet, but it starts at 0 at the root bridge

230
00:16:27,759 --> 00:16:32,209
and is increased by 1 each time it is forwarded
by another switch.

231
00:16:32,209 --> 00:16:38,620
It is subtracted from the max age when a switch
receives the BPDU, so for example if the BPDU

232
00:16:38,620 --> 00:16:44,009
is passed through 5 switches, when it reaches
the 6th bridge it will immediately reduce

233
00:16:44,009 --> 00:16:50,060
its max age timer to 15, meaning each time
it receives a BPDU its max age will reset

234
00:16:50,060 --> 00:16:54,690
to 15 instead of 20, even though the max age
timer is 20.

235
00:16:54,690 --> 00:17:01,209
I don’t think that’s an important topic
for the CCNA though, its a bit more advanced.

236
00:17:01,209 --> 00:17:07,940
After that we have the three timers we talked
about, max age, hello, and forward delay.

237
00:17:07,940 --> 00:17:12,240
By the way, the spanning tree timers on the
root bridge determine the spanning tree timers

238
00:17:12,240 --> 00:17:19,020
for the rest of the switches in the network,
even if they are configured differently.

239
00:17:19,020 --> 00:17:23,000
Next let’s talk about some optional features
of spanning tree, sometimes called the spanning

240
00:17:23,000 --> 00:17:25,330
tree toolkit.

241
00:17:25,330 --> 00:17:28,870
These are features that can be enabled to
improve the functionality of spanning tree

242
00:17:28,870 --> 00:17:31,160
protocol in some way.

243
00:17:31,160 --> 00:17:33,810
The first one is called portfast.

244
00:17:33,810 --> 00:17:37,240
It solves one problem of spanning tree.

245
00:17:37,240 --> 00:17:42,720
Portfast can be enabled on interfaces which
are connected to end hosts, like the G0/2

246
00:17:42,720 --> 00:17:45,400
interface on each of these switches.

247
00:17:45,400 --> 00:17:48,280
These are designated ports, in a forwarding
state.

248
00:17:48,280 --> 00:17:54,150
However, when they are first turned on or
first connected to the PCs, they must go through

249
00:17:54,150 --> 00:17:58,930
the Listening and Learning states first before
they can start forwarding traffic.

250
00:17:58,930 --> 00:18:00,500
How long does that take?

251
00:18:00,500 --> 00:18:07,920
15 seconds for Listening and 15 seconds for
Learning, so 30 seconds in total.

252
00:18:07,920 --> 00:18:12,160
I want you to open up Packet Tracer and try
a little experiment.

253
00:18:12,160 --> 00:18:16,620
For this experiment, make sure Show Link Lights
is enabled.

254
00:18:16,620 --> 00:18:21,740
You can enable it by clicking on options,
preferences, and then making sure this box

255
00:18:21,740 --> 00:18:22,790
is checked.

256
00:18:22,790 --> 00:18:29,130
I want you to place a switch and a PC like
this, get a watch or timer ready, and then

257
00:18:29,130 --> 00:18:31,200
connect them.

258
00:18:31,200 --> 00:18:35,060
At first you should see that the link light
on the switch is orange.

259
00:18:35,060 --> 00:18:40,030
This is the same if you connect a real physical
PC to a physical switch, the link light will

260
00:18:40,030 --> 00:18:41,470
be orange.

261
00:18:41,470 --> 00:18:42,620
Why is this?

262
00:18:42,620 --> 00:18:47,170
It’s because the port is not Forwarding
yet, it is going through the Listening and

263
00:18:47,170 --> 00:18:48,540
Learning states.

264
00:18:48,540 --> 00:18:54,310
However, 30 seconds later you should finally
see the link light turn green.

265
00:18:54,310 --> 00:18:56,700
The port is finally forwarding.

266
00:18:56,700 --> 00:19:01,050
I told you why spanning tree goes through
this process before putting a port in the

267
00:19:01,050 --> 00:19:06,220
forwarding state, it’s because Layer 2 loops
are so dangerous for a network that the switch

268
00:19:06,220 --> 00:19:11,960
wants to be absolutely sure no loop will be
formed before forwarding out of that interface.

269
00:19:11,960 --> 00:19:17,440
However, only interfaces connected to another
switch can form a Layer 2 loop.

270
00:19:17,440 --> 00:19:20,200
There is no risk of forming a loop with an
end host.

271
00:19:20,200 --> 00:19:25,280
So, wouldn’t it be nice if these ports connected
to end hosts could start forwarding right

272
00:19:25,280 --> 00:19:30,250
away, without having to wait 30 seconds to
go from listening to learning to forwarding?

273
00:19:30,250 --> 00:19:34,040
Well, that’s what portfast does.

274
00:19:34,040 --> 00:19:38,270
Portfast allows a port to move immediately
to the Forwarding state, bypassing Listening

275
00:19:38,270 --> 00:19:40,080
and Learning.

276
00:19:40,080 --> 00:19:44,930
If used, it must be enabled only on ports
connected to end hosts.

277
00:19:44,930 --> 00:19:50,250
If enabled on a port connected to another
switch it could cause a Layer 2 loop.

278
00:19:50,250 --> 00:19:54,990
The purpose of the listening and learning
states is to avoid causing a loop, so bypassing

279
00:19:54,990 --> 00:19:59,880
them is risky when connected to another switch.

280
00:19:59,880 --> 00:20:03,490
We haven’t looked at any other spanning
tree configurations yet because spanning tree

281
00:20:03,490 --> 00:20:07,320
operates by default even without configuration.

282
00:20:07,320 --> 00:20:13,680
We will look at general spanning tree configuration,
but first lets look at portfast.

283
00:20:13,680 --> 00:20:19,550
Portfast is enabled at the interface level
with the command SPANNING-TREE PORTFAST.

284
00:20:19,550 --> 00:20:24,180
Then we get a warning about what I just told
you, you should only enable portfast on ports

285
00:20:24,180 --> 00:20:26,950
connected to an end host.

286
00:20:26,950 --> 00:20:31,420
There is also a message saying that, even
though portfast was configured, it will only

287
00:20:31,420 --> 00:20:36,890
take effect if the interface is in a non-trunking
mode, so if it is an access port.

288
00:20:36,890 --> 00:20:41,690
That’s because trunk ports are typically
connected to other switches.

289
00:20:41,690 --> 00:20:47,430
You can still configure portfast on a trunk
port, it just won’t take effect.

290
00:20:47,430 --> 00:20:52,431
You can also enable portfast with the following
command in global config mode: spanning-tree

291
00:20:52,431 --> 00:20:54,880
portfast default.

292
00:20:54,880 --> 00:20:59,990
This enables portfast on all access ports,
but not trunk ports.

293
00:20:59,990 --> 00:21:04,910
So, portfast is a great feature for getting
a switchport connected to an end host running

294
00:21:04,910 --> 00:21:08,350
quickly without having to wait 30 seconds.

295
00:21:08,350 --> 00:21:12,270
However, it can still be a risk.

296
00:21:12,270 --> 00:21:16,490
What if an employee plugs another switch into
the network like this?

297
00:21:16,490 --> 00:21:21,500
This employee doesn’t necessarily have malicious
intent, they could just be unaware of exactly

298
00:21:21,500 --> 00:21:23,650
what they are doing.

299
00:21:23,650 --> 00:21:28,550
Because portfast is putting these interfaces
into a forwarding state, a Layer 2 loop is

300
00:21:28,550 --> 00:21:30,630
formed.

301
00:21:30,630 --> 00:21:35,250
Portfast can also cause loops if the network
cabling is changed without proper caution,

302
00:21:35,250 --> 00:21:40,840
perhaps a host is moved to a different switchport
and a switch is connected to its old port.

303
00:21:40,840 --> 00:21:46,280
Anyway, the point is that there is a risk
to using portfast.

304
00:21:46,280 --> 00:21:51,660
However, there is an additional spanning tree
optional feature that we can enable to protect

305
00:21:51,660 --> 00:21:53,360
against such loops.

306
00:21:53,360 --> 00:21:56,590
It’s called BPDU Guard.

307
00:21:56,590 --> 00:22:02,340
If an interface with BPDU Guard enabled receives
a BPDU from another switch, the interface

308
00:22:02,340 --> 00:22:05,990
will be shut down to prevent a loop from forming.

309
00:22:05,990 --> 00:22:09,740
BPDU guard is very simple to configure.

310
00:22:09,740 --> 00:22:15,320
From interface configuration mode, use the
command SPANNING-TREE BPDUGUARD ENABLE.

311
00:22:15,320 --> 00:22:17,050
That’s it.

312
00:22:17,050 --> 00:22:20,840
Similar to portfast, there is also an option
to enable it by default.

313
00:22:20,840 --> 00:22:22,850
That’s this command.

314
00:22:22,850 --> 00:22:29,890
From global config mode, use the command SPANNING-TREE
PORTFAST BPDUGUARD DEFAULT.

315
00:22:29,890 --> 00:22:34,970
This enables BPDU Guard on all portfast-enabled
interfaces.

316
00:22:34,970 --> 00:22:40,010
Notice that the commands are a little different,
to enable it directly on the interface its

317
00:22:40,010 --> 00:22:44,800
spanning-tree bpduguard enable, no mention
of portfast.

318
00:22:44,800 --> 00:22:49,610
However to enable it globally, you have to
include portfast in the command, spanning-tree

319
00:22:49,610 --> 00:22:52,740
portfast bpduguard default.

320
00:22:52,740 --> 00:22:58,270
I took this screenshot in packet tracer, so
the CLI color scheme is a little different

321
00:22:58,270 --> 00:23:04,740
than the previous one, but I connected a switch
to a BPDU-guard enabled interace, and now

322
00:23:04,740 --> 00:23:10,280
you can see what happens when a BPDU arrives
on a BPDU guard-enabled port.

323
00:23:10,280 --> 00:23:14,400
The port is disabled, it is effectively shut
down.

324
00:23:14,400 --> 00:23:17,890
What if you want to enable the port again?

325
00:23:17,890 --> 00:23:23,880
To enable a port that was disabled by BPDU
guard, simply SHUTDOWN, and then NO SHUTDOWN

326
00:23:23,880 --> 00:23:25,540
the interface.

327
00:23:25,540 --> 00:23:28,130
You can see that the interface comes up.

328
00:23:28,130 --> 00:23:33,330
However, if you didn’t actually solve the
problem and it's still connected to a switch,

329
00:23:33,330 --> 00:23:39,120
you can see here that the interface will immediately
be disabled again when the next BPDU arrives.

330
00:23:39,120 --> 00:23:45,730
So, make sure you actually solve the problem
before trying to enable the interface again.

331
00:23:45,730 --> 00:23:52,590
In terms of spanning tree optional features,
the 200-301 exam topics list only mentions

332
00:23:52,590 --> 00:23:53,590
portfast.

333
00:23:53,590 --> 00:24:00,100
I also showed you BPDU guard because it is
connected to portfast, so I think it is included.

334
00:24:00,100 --> 00:24:03,980
There are many other optional features that
can be enabled, and there’s no need to know

335
00:24:03,980 --> 00:24:08,951
all of them for the CCNA, but let me just
quickly introduce two others you should at

336
00:24:08,951 --> 00:24:14,650
least know the name and basic purpose of,
just incase they are mentioned in the exam.

337
00:24:14,650 --> 00:24:18,690
They are Root Guard and Loop Guard.

338
00:24:18,690 --> 00:24:25,170
If you enable root guard on an interface,
even if it receives a superior BPDU (with a lower

339
00:24:25,170 --> 00:24:30,990
bridge ID) on that interface, the switch will
not accept the new switch as the root bridge.

340
00:24:30,990 --> 00:24:33,500
The interface will be disabled.

341
00:24:33,500 --> 00:24:38,470
This helps maintain the spanning tree topology
if someone plugs another switch into the network

342
00:24:38,470 --> 00:24:44,480
either with bad intent, or perhaps without
knowing the impact of their action.

343
00:24:44,480 --> 00:24:50,280
If you enable loop guard on an interface,
even if the interface stops receiving BPDUs,

344
00:24:50,280 --> 00:24:52,690
it will not start forwarding.

345
00:24:52,690 --> 00:24:55,300
The interface will be disabled.

346
00:24:55,300 --> 00:24:59,650
This prevents loops that can happen if an
interface fails only in one direction, causing

347
00:24:59,650 --> 00:25:04,170
what is called a ‘unidirectional link’
that can’t receive data, but is still able

348
00:25:04,170 --> 00:25:06,290
to forward it, or the opposite.

349
00:25:06,290 --> 00:25:10,580
So, those are two other optional spanning
tree features.

350
00:25:10,580 --> 00:25:16,350
However, as I said, You probably don’t have
to know these spanning tree optional features (or others

351
00:25:16,350 --> 00:25:21,750
such as UplinkFast, Backbone Fast, etc) for
the CCNA.

352
00:25:21,750 --> 00:25:25,720
But make sure you know Portfast and BPDU Guard.

353
00:25:25,720 --> 00:25:30,490
If you want to read more about the others
just in case, do a Google search.

354
00:25:30,490 --> 00:25:37,380
Finally, let’s look at some basic spanning
tree configurations, starting with the mode.

355
00:25:37,380 --> 00:25:43,130
You can configure the spanning mode the switch
uses with the command SPANNING-TREE MODE,

356
00:25:43,130 --> 00:25:45,840
and then you can see there are three options.

357
00:25:45,840 --> 00:25:50,950
MST, multiple spanning tree, is not a topic
you need to know for the CCNA.

358
00:25:50,950 --> 00:25:57,120
PVST is the classic spanning tree but with
Cisco’s per-vlan addition, the one we have

359
00:25:57,120 --> 00:25:59,040
been learning about so far.

360
00:25:59,040 --> 00:26:04,340
Rapid-PVST is an improved version I will tell
you about in the next lecture.

361
00:26:04,340 --> 00:26:11,250
Modern Cisco switches run rapid-PVST by default,
and usually there is no reason to change it.

362
00:26:11,250 --> 00:26:15,370
However, if you want to try out the classic
spanning tree for your lab, like I did for

363
00:26:15,370 --> 00:26:23,200
these demonstrations, you can enable it with
this command, SPANNING-TREE MODE PVST.

364
00:26:23,200 --> 00:26:29,400
You can also manually configure the root bridge
by manipulating the bridge priority of a switch.

365
00:26:29,400 --> 00:26:34,660
With these MAC addresses and the default priority
values, SW1 is the root bridge.

366
00:26:34,660 --> 00:26:38,980
However, we could configure SW3 to be the
root bridge.

367
00:26:38,980 --> 00:26:42,880
We could also configure something called a
‘secondary’ root bridge, which will be

368
00:26:42,880 --> 00:26:47,260
next in line to become the root bridge if
the current root bridge fails.

369
00:26:47,260 --> 00:26:51,470
Let’s see how to configure that.

370
00:26:51,470 --> 00:26:56,210
This is how to configure the root bridge,
called the ‘primary’ root bridge.

371
00:26:56,210 --> 00:27:03,410
SPANNING-TREE VLAN, followed by the vlan number,
then ROOT PRIMARY.

372
00:27:03,410 --> 00:27:06,700
Now you can see that this bridge has become the
root.

373
00:27:06,700 --> 00:27:12,100
This command sets the STP priority to 24576.

374
00:27:12,100 --> 00:27:17,720
If another switch already has a priority lower
than 24576, it sets this switch’s priority

375
00:27:17,720 --> 00:27:21,540
to 4096 less than the other switch’s priority.

376
00:27:21,540 --> 00:27:27,330
So, it makes this switch have the lowest priority,
making it the root bridge.

377
00:27:27,330 --> 00:27:30,990
If you then check the running-config, you
can see that the command that is actually

378
00:27:30,990 --> 00:27:37,220
applied in this case is SPANNING-TREE VLAN
1 PRIORITY 24576.

379
00:27:37,220 --> 00:27:43,400
So, this commands tells the switch to apply
the spanning-tree priority command, either

380
00:27:43,400 --> 00:27:51,590
with the priority 24576, or 4096 less than
the current lowest priority.

381
00:27:51,590 --> 00:27:56,300
The command to set the secondary root bridge,
the bridge with the second-lowest priority,

382
00:27:56,300 --> 00:27:57,830
is basically the same.

383
00:27:57,830 --> 00:28:03,670
SPANNING-TREE VLAN, vlan number, ROOT SECONDARY.

384
00:28:03,670 --> 00:28:06,990
Now the priority has been set to 28672.

385
00:28:06,990 --> 00:28:13,650
So, this command sets the spanning tree priority
for this VLAN to 28672.

386
00:28:13,650 --> 00:28:19,691
However, like the root primary command, the
actual command that is applied is the spanning-tree

387
00:28:19,691 --> 00:28:21,230
priority command.

388
00:28:21,230 --> 00:28:26,460
So, for both of these commands, you could
actually use the spanning-tree priority command

389
00:28:26,460 --> 00:28:31,320
as you see here to configure the root bridge,
the spanning-tree root command is just a simple

390
00:28:31,320 --> 00:28:36,600
way to do it without remembering the different
increments of 4096.

391
00:28:36,600 --> 00:28:40,910
You may remember from the last lecture, that
the bridge priority must be set in increments

392
00:28:40,910 --> 00:28:46,130
of 4096, so the root command is easier to
use.

393
00:28:46,130 --> 00:28:49,910
So, this is our topology now.

394
00:28:49,910 --> 00:28:58,030
The interface between SW1 and SW2 is disabled
because SW1 is blocking its G0/0 interface.

395
00:28:58,030 --> 00:29:03,450
This topology is running Cisco’s PVST+,
so actually this is just the topology for

396
00:29:03,450 --> 00:29:05,500
VLAN1.

397
00:29:05,500 --> 00:29:10,100
Perhaps there is another VLAN, VLAN 2, in
this topology, what will the topology look

398
00:29:10,100 --> 00:29:12,360
like for it?

399
00:29:12,360 --> 00:29:17,290
It will look like this, the default topology,
because the root bridge settings we configured

400
00:29:17,290 --> 00:29:19,970
only apply to VLAN 1.

401
00:29:19,970 --> 00:29:26,250
In VLAN 2, the connection between SW1 and
SW2 WON’T be disabled, instead the connection

402
00:29:26,250 --> 00:29:29,820
between SW2 and SW3 will be disabled.

403
00:29:29,820 --> 00:29:34,310
This allows for what’s called spanning tree
load balancing.

404
00:29:34,310 --> 00:29:39,790
If you have multiple VLANs in your network,
blocking the same interface in each VLAN is

405
00:29:39,790 --> 00:29:42,400
a waste of interface bandwidth.

406
00:29:42,400 --> 00:29:46,270
That connection will be doing nothing, just
waiting for another connection to fail so

407
00:29:46,270 --> 00:29:47,710
it can start forwarding.

408
00:29:47,710 --> 00:29:53,030
However, if you configure a different root
bridge for different VLANs, different VLANs

409
00:29:53,030 --> 00:29:55,860
will disable different interfaces.

410
00:29:55,860 --> 00:30:02,370
Okay, to check if you understood that explanation,
let’s do a quick quiz.

411
00:30:02,370 --> 00:30:07,570
This is quiz question 7, because in day 20’s
lecture we did spanning tree quizzes 1 to

412
00:30:07,570 --> 00:30:08,570
6.

413
00:30:08,570 --> 00:30:13,600
Two VLANs are active in this network, 10 and
20.

414
00:30:13,600 --> 00:30:17,950
By default, SW3 is the root bridge for both
VLANs.

415
00:30:17,950 --> 00:30:24,400
Configure SW1 as the primary root for VLAN10
and the secondary root for VLAN20.

416
00:30:24,400 --> 00:30:31,460
Configure SW2 as the primary root for VLAN20
and the secondary root for VLAN10.

417
00:30:31,460 --> 00:30:36,390
Which two commands should you issue on SW1,
and which two commands should you issue on

418
00:30:36,390 --> 00:30:37,390
SW2?

419
00:30:37,390 --> 00:30:42,560
So, use the commands I just showed you, the
spanning-tree root commands, and configure

420
00:30:42,560 --> 00:30:44,980
SW1 and SW2.

421
00:30:44,980 --> 00:30:49,840
You don’t have access to the CLI so just
use an empty text file to write out the commands,

422
00:30:49,840 --> 00:30:52,190
two commands on each switch.

423
00:30:52,190 --> 00:30:57,440
Pause the video now to do so.

424
00:30:57,440 --> 00:30:59,220
Okay, let’s check.

425
00:30:59,220 --> 00:31:05,920
We want to make SW1 the primary root bridge
for VLAN10 and the secondary for VLAN20, so

426
00:31:05,921 --> 00:31:09,260
essentially it acts like a backup root bridge
for VLAN20.

427
00:31:09,260 --> 00:31:14,380
So, these are the commands to issue on SW1.

428
00:31:14,380 --> 00:31:16,990
On SW2 we want to do the opposite.

429
00:31:16,990 --> 00:31:22,480
It should be the root bridge for VLAN20, and
be just the secondary root bridge for VLAN10,

430
00:31:22,480 --> 00:31:28,070
so it will have the second lowest priority
in VLAN10 and become the root for VLAN10 if

431
00:31:28,070 --> 00:31:29,620
SW1 fails.

432
00:31:29,620 --> 00:31:34,860
These are the commands to issue on SW2, basically
the opposite of SW1.

433
00:31:34,860 --> 00:31:37,460
So, did you get the correct answers?

434
00:31:37,460 --> 00:31:39,530
If not, don’t worry.

435
00:31:39,530 --> 00:31:43,490
Please watch the next video which will be
a lab video covering the configurations you

436
00:31:43,490 --> 00:31:48,060
learn in this video, you can practice with
that lab.  Or of course feel free to make your

437
00:31:48,060 --> 00:31:52,390
own labs in packet tracer to practice.

438
00:31:52,390 --> 00:31:58,070
So, with those settings, perhaps the VLAN10 topology
looks like this.

439
00:31:58,070 --> 00:32:01,490
And then perhaps the VLAN20 topology looks like this.

440
00:32:01,490 --> 00:32:07,870
So, different connections are used in different
VLANs, the load is balanced across different

441
00:32:07,870 --> 00:32:13,430
interfaces, this is called load balancing.

442
00:32:13,430 --> 00:32:17,840
Before moving on to the rest of the quiz questions
for today and finishing up, let me quickly

443
00:32:17,840 --> 00:32:22,750
show you how to configure some spanning-tree
port settings.

444
00:32:22,750 --> 00:32:26,590
There are two main settings you can configure
on a spanning tree port.

445
00:32:26,590 --> 00:32:31,320
The cost, and the port priority, and as you
can see from this command they are both configured

446
00:32:31,320 --> 00:32:35,480
on a per-VLAN basis like the bridge priority.

447
00:32:35,480 --> 00:32:38,150
As a review, what is cost?

448
00:32:38,150 --> 00:32:42,870
It’s the root cost, remember the chart I
showed you in day 20.

449
00:32:42,870 --> 00:32:47,800
FastEthernet costs 19, gigabit ethernet costs
4, etc.

450
00:32:47,800 --> 00:32:52,870
It’s used primarily to determine the root
port, and is also used as a tiebreaker in

451
00:32:52,870 --> 00:32:56,740
selecting designated and non-designated ports.

452
00:32:56,740 --> 00:33:00,050
How about the priority, do you remember what
it is used for?

453
00:33:00,050 --> 00:33:05,970
Well, it is the first half of the port ID,
which is the final tiebreaker in determining

454
00:33:05,970 --> 00:33:07,840
the root port.

455
00:33:07,840 --> 00:33:10,390
Why would you want to change either of these
values?

456
00:33:10,390 --> 00:33:17,140
Well, to change the result of the root port
or designated port selection process.

457
00:33:17,140 --> 00:33:20,890
I won’t give a detailed example here, but
we’ll practice it a little bit in the lab

458
00:33:20,890 --> 00:33:24,400
video, so make sure to watch that.

459
00:33:24,400 --> 00:33:29,970
First I configured the cost of this interface,
as you can see the range is from 1 to 200

460
00:33:29,970 --> 00:33:30,970
million.

461
00:33:30,970 --> 00:33:38,370
Then I set the port-priority, which is configured
in increments of 32, from 0 to 224.

462
00:33:38,370 --> 00:33:42,360
Those are the only spanning tree interface
settings you need to know for the CCNA.

463
00:33:42,360 --> 00:33:46,310
Again, stay tuned for the lab video to try
them out.

464
00:33:46,310 --> 00:33:49,210
So, what did we cover?

465
00:33:49,210 --> 00:33:52,480
We covered the different spanning tree states
and timers used.

466
00:33:52,480 --> 00:33:58,410
We took a brief look at the structure of a
spanning tree BPDU, we looked at a few of

467
00:33:58,410 --> 00:34:04,940
the spanning-tree optional features, focusing
on portfast and BPDU guard.

468
00:34:04,940 --> 00:34:10,210
Finally we did some basic spanning tree configurations,
including configuring the root bridge, using

469
00:34:10,210 --> 00:34:14,610
different root bridges in different VLANs
to achieve load balancing across different

470
00:34:14,610 --> 00:34:19,860
interfaces, and then some basic spanning tree
interface settings.

471
00:34:19,860 --> 00:34:25,120
Okay, for today’s quiz we’ll do 3 more
questions about spanning tree, covering what

472
00:34:25,129 --> 00:34:27,740
we learned in this video.

473
00:34:27,740 --> 00:34:33,081
After that, one special practice question
from Boson Software’s ExSim for CCNA, by

474
00:34:33,081 --> 00:34:39,070
far the best practice exams for the CCNA there
are so be sure to watch for that.

475
00:34:39,070 --> 00:34:43,770
If you want to get a copy of Boson ExSim,
please follow the link in the video description.

476
00:34:43,770 --> 00:34:48,490
Now let’s go to question 8 of the quiz.

477
00:34:48,490 --> 00:34:54,160
So, continuing from quiz question 7 we did
earlier, here is number 8.

478
00:34:54,160 --> 00:34:59,170
You connect a PC to a switch, however for
about half a minute you are unable to connect

479
00:34:59,170 --> 00:35:00,720
to the network.

480
00:35:00,720 --> 00:35:05,650
Which two options could fix this issue and
allow you to access the network more quickly?

481
00:35:05,650 --> 00:35:07,110
Choose two.

482
00:35:07,110 --> 00:35:09,480
Each answer is a complete solution.

483
00:35:09,480 --> 00:35:14,180
A, enable portfast on the switch port you
connect the PC to.

484
00:35:14,180 --> 00:35:17,960
B, reduce the STP hello timer.

485
00:35:17,960 --> 00:35:21,760
C, reduce the STP forward delay timer.

486
00:35:21,760 --> 00:35:26,050
Or D, reduce the STP max age timer.

487
00:35:26,050 --> 00:35:32,890
Pause the video to think about your answer,
remember to choose two.

488
00:35:32,890 --> 00:35:39,980
The answers are A and C. A, portfast, allows
switchports to bypass the listening and learning

489
00:35:39,980 --> 00:35:44,970
spanning tree states and enter the forwarding
state immediately, so there will be no delay

490
00:35:44,970 --> 00:35:47,750
after connecting the PC.

491
00:35:47,750 --> 00:35:52,650
As for C, the forward delay timer determines
how long the listening and learning states

492
00:35:52,650 --> 00:35:53,890
are.

493
00:35:53,890 --> 00:35:58,150
If you shorten this timer, the switch will
begin forwarding more quickly.

494
00:35:58,150 --> 00:36:02,581
However, it is recommended that you leave
the timers at their default settings, these

495
00:36:02,581 --> 00:36:05,440
default settings were chosen for a reason.

496
00:36:05,440 --> 00:36:09,310
Okay let’s go to question 9.

497
00:36:09,310 --> 00:36:17,140
A packet capture indicates that a switch port
has an STP port ID of 0x8002.

498
00:36:17,140 --> 00:36:20,660
What is the STP port priority of this port?

499
00:36:20,660 --> 00:36:22,920
A, 80.

500
00:36:22,920 --> 00:36:25,180
B, 32.

501
00:36:25,180 --> 00:36:27,450
C, 128.

502
00:36:27,450 --> 00:36:30,260
Or D, 224.

503
00:36:30,260 --> 00:36:37,070
Pause the video to think about your answer.

504
00:36:37,070 --> 00:36:40,670
The answer is C, 128.

505
00:36:40,670 --> 00:36:47,890
The first half of the port ID, hexadecimal
8 0, is the STP port priority.

506
00:36:47,890 --> 00:36:53,920
Hexadecimal 8 0 is equivalent to 128 in decimal,
so C is the correct answer.

507
00:36:53,920 --> 00:36:57,970
Let’s go to question 10.

508
00:36:57,970 --> 00:37:02,310
You want to make sure that a Layer 2 loop
will not be caused if a user connects a switch

509
00:37:02,310 --> 00:37:04,680
to a switch port.

510
00:37:04,680 --> 00:37:07,640
Which spanning tree optional feature achieves
this?

511
00:37:07,640 --> 00:37:09,720
A, portfast.

512
00:37:09,720 --> 00:37:11,830
B, loop guard.

513
00:37:11,830 --> 00:37:13,710
C, root guard.

514
00:37:13,710 --> 00:37:16,950
Or D, BPDU guard.

515
00:37:16,950 --> 00:37:22,640
Pause the video to think about your anwer.

516
00:37:22,640 --> 00:37:25,900
The answer is D, BPDU guard.

517
00:37:25,900 --> 00:37:31,690
BPDU guard will shutdown an interface if a
BPDU is received on the interface, to prevent

518
00:37:31,690 --> 00:37:34,030
any potential loops.

519
00:37:34,030 --> 00:37:37,900
It should be enabled on portfast-enabled switch
ports connected to end hosts.

520
00:37:37,900 --> 00:37:43,870
Okay, that’s all for the quiz, let’s take
a look at a question from Boson ExSim for

521
00:37:43,870 --> 00:37:45,800
CCNA.

522
00:37:45,800 --> 00:37:51,880
Okay, for today's Boson ExSim practice question
we're going to take a look at the same question

523
00:37:51,880 --> 00:37:56,860
as in Day 20's video because at the end of
Day 20's video I said we hadn't actually learned

524
00:37:56,860 --> 00:38:00,470
enough to answer the questions from Boson
ExSim about spanning tree.

525
00:38:00,470 --> 00:38:03,220
Well, now we can answer at least some of them.

526
00:38:03,220 --> 00:38:06,280
So, let's read the question one more time.

527
00:38:06,280 --> 00:38:10,220
You want to decrease the amount of time that
it takes for switch ports on SwitchA to begin

528
00:38:10,220 --> 00:38:12,140
forwarding.

529
00:38:12,140 --> 00:38:15,750
PortFast is not configured on any of the switch
ports on SwitchA.

530
00:38:15,750 --> 00:38:21,110
You issue the SPANNING-TREE PORTFAST DEFAULT
command from global configuration mode.

531
00:38:21,110 --> 00:38:24,180
Which of the ports on SwitchA will use PortFast?

532
00:38:24,180 --> 00:38:25,700
Select the best answer.

533
00:38:25,700 --> 00:38:29,720
A, no ports because PortFast cannot be enabled
globally.

534
00:38:29,720 --> 00:38:31,520
B, all trunk ports.

535
00:38:31,520 --> 00:38:33,030
C, all ports.

536
00:38:33,030 --> 00:38:34,680
Or D, all access ports.

537
00:38:34,680 --> 00:38:37,620
Okay, you should know the answer to this question.

538
00:38:37,620 --> 00:38:44,320
Please pause the video here to think about
your answer.

539
00:38:44,320 --> 00:38:46,170
Okay, did you get the answer?

540
00:38:46,170 --> 00:38:51,110
So, you should know, we just talked about
it, the answer is D, all access ports.

541
00:38:51,110 --> 00:38:53,930
Or at least I think it is, let's check.

542
00:38:53,930 --> 00:38:58,940
To check your answer click down here, 'show
answer'.

543
00:38:58,940 --> 00:39:00,110
There it is.

544
00:39:00,110 --> 00:39:05,020
Okay, so not only does it tell you it's correct,
but even more importantly it gives you an

545
00:39:05,020 --> 00:39:07,360
explanation of why it's correct.

546
00:39:07,360 --> 00:39:11,500
Why D is correct, and why A, B, and C are
incorrect.

547
00:39:11,500 --> 00:39:15,980
That's one of the great things about Boson
ExSim, is these explanations.

548
00:39:15,980 --> 00:39:21,260
Personally I think a practice exam that just
tells you correct or incorrect, without telling

549
00:39:21,260 --> 00:39:25,800
you why it's correct or why it's incorrect,
isn't very useful.

550
00:39:25,800 --> 00:39:30,290
So let's read just at least this first part
about the explanation.

551
00:39:30,290 --> 00:39:33,570
All access ports on SwitchA will use PortFast.

552
00:39:33,570 --> 00:39:38,370
PortFast enables faster connectivity for hosts
connected to an access layer switch port.

553
00:39:38,370 --> 00:39:43,000
If PortFast is not enabled, a switch port
transitions through the STP listening and

554
00:39:43,000 --> 00:39:46,710
learning states before it enters the forwarding
state.

555
00:39:46,710 --> 00:39:51,880
This process can take as long as 30 seconds
if the default STP timers are used.

556
00:39:51,880 --> 00:39:57,390
In addition, port initialization can take
as long as 50 seconds if Port Aggregation

557
00:39:57,390 --> 00:39:58,870
Protocol is enabled.

558
00:39:58,870 --> 00:40:04,750
I haven't talked about this yet in the course,
that will be coming in Day 23, maybe.

559
00:40:04,750 --> 00:40:07,020
We'll see.

560
00:40:07,020 --> 00:40:10,840
PortFast transitions the port into the STP
forwarding state without going through the

561
00:40:10,840 --> 00:40:13,220
STP listening and learning states.

562
00:40:13,220 --> 00:40:15,900
Okay, and there's more explanation down here.

563
00:40:15,900 --> 00:40:21,040
Plus references, here to the official cert
guide written by Wendell Odom, I highly recommend

564
00:40:21,040 --> 00:40:22,040
it.

565
00:40:22,040 --> 00:40:24,970
And some Cisco documentation you can read
for free online.

566
00:40:24,970 --> 00:40:30,550
Okay, so if you want to get a copy of Boson
ExSim, I highly recommend these practice exams,

567
00:40:30,550 --> 00:40:38,740
I used them myself for my CCNA and CCNP, please
follow the link in the video description.

568
00:40:38,740 --> 00:40:42,100
There will be supplementary materials for
this video.

569
00:40:42,100 --> 00:40:46,630
There will be a review flashcard deck to use
with the software ‘Anki’.

570
00:40:46,630 --> 00:40:50,260
Download the deck from the link in the description.

571
00:40:50,260 --> 00:40:53,420
There will also be a packet tracer practice
lab.

572
00:40:53,420 --> 00:40:57,390
Please be sure to watch the practice lab and
try it yourself, it will give some more

573
00:40:57,390 --> 00:41:02,400
practice with the configurations you learned
in this video.

574
00:41:02,400 --> 00:41:07,520
Before finishing today’s video I want to
thank my JCNP-level channel members.

575
00:41:07,520 --> 00:41:15,450
Thank you to Vikram, Joyce, Marek, Samil,
Velvijaykum, C Mohd, Johan, Mark, Aleksa,

576
00:41:15,450 --> 00:41:22,390
Miguel, Yousif, Kone, Boson Software, the
creators of ExSim, Sidi, Magrathea, Devin,

577
00:41:22,390 --> 00:41:26,830
Charlsetta, Lito, Yonatan, Mike, Aleksandr,
and Vance.

578
00:41:26,830 --> 00:41:33,110
Sorry if I pronounced your name incorrectly,
but thank you so much for your support.

579
00:41:33,110 --> 00:41:38,080
One of you is still displaying as Channel
failed to load, if this is you please let

580
00:41:38,080 --> 00:41:41,360
me know and I’ll see if YouTube can fix
it.

581
00:41:41,360 --> 00:41:47,360
This is the list of JCNP-level members at
the time of recording by the way, May 17th

582
00:41:47,360 --> 00:41:52,920
2020, so if you signed up recently and your name
isn’t on here don’t worry, you’ll definitely

583
00:41:52,920 --> 00:41:56,540
be in the next video.

584
00:41:56,540 --> 00:41:58,110
Thank you for watching.

585
00:41:58,110 --> 00:42:02,170
Please subscribe to the channel, like the
video, leave a comment, and share the video

586
00:42:02,170 --> 00:42:05,369
with anyone else studying for the CCNA.

587
00:42:05,369 --> 00:42:08,250
If you want to leave a tip, check the links
in the description.

588
00:42:08,250 --> 00:42:13,869
I'm also a Brave verified publisher and accept
BAT, or Basic Attention Token, tips via the

589
00:42:13,869 --> 00:42:15,460
Brave browser.

590
00:42:15,460 --> 00:42:16,600
That's all for now.
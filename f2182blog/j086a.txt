1
00:00:01,040 --> 00:00:07,840
Welcome to Jeremy’s IT Lab. This is a free,&nbsp;
complete course for the CCNA. If you like these&nbsp;&nbsp;

2
00:00:07,840 --> 00:00:13,920
videos, please subscribe to follow along with the&nbsp;
series. Also, please like and leave a comment,&nbsp;&nbsp;

3
00:00:13,920 --> 00:00:17,920
and share the video to help spread this&nbsp;
free series of videos. Thanks for your help.

4
00:00:19,280 --> 00:00:23,840
In this video we will finish up the topic&nbsp;
of NAT, Network Address Translation.&nbsp;&nbsp;

5
00:00:24,880 --> 00:00:27,760
NAT is topic 4.1 of the CCNA exam.&nbsp;&nbsp;

6
00:00:28,800 --> 00:00:34,800
In Day 44 I introduced NAT and covered static&nbsp;
NAT, but this video will focus on dynamic NAT.&nbsp;&nbsp;

7
00:00:36,080 --> 00:00:41,200
After this video, I think you’ll have no problems&nbsp;
answering any NAT questions on the CCNA exam.

8
00:00:42,960 --> 00:00:48,240
Here’s what we’ll cover in this video. First, I&nbsp;
will cover one more point about static NAT that&nbsp;&nbsp;

9
00:00:48,240 --> 00:00:53,200
I didn’t mention in the last video. Then&nbsp;
I’ll cover dynamic NAT, in which you don’t&nbsp;&nbsp;

10
00:00:53,200 --> 00:00:58,720
manually map addresses one-to-one, but instead the&nbsp;
router automatically makes the mappings for you.&nbsp;&nbsp;

11
00:00:59,760 --> 00:01:03,520
And then another very important&nbsp;
type of NAT, dynamic PAT,&nbsp;&nbsp;

12
00:01:03,520 --> 00:01:10,400
which translates not only the IP address, but&nbsp;
also the port number. Dynamic PAT is extremely&nbsp;&nbsp;

13
00:01:10,400 --> 00:01:16,880
useful because it allows many devices to share&nbsp;
a single public IP address. As always, watch&nbsp;&nbsp;

14
00:01:16,880 --> 00:01:22,400
until the end of the video for a bonus practice&nbsp;
question from Boson Software’s ExSim for CCNA.

15
00:01:24,480 --> 00:01:30,400
First, some review about static NAT. Static&nbsp;
NAT involves statically configuring one-to-one&nbsp;&nbsp;

16
00:01:30,400 --> 00:01:36,480
mappings of private IP addresses to public&nbsp;
IP addresses. When traffic from the internal&nbsp;&nbsp;

17
00:01:36,480 --> 00:01:40,720
host is sent to the outside network, the&nbsp;
router will translate the source address.&nbsp;&nbsp;

18
00:01:42,000 --> 00:01:50,320
So, I have mapped inside local address&nbsp;
192.168.0.167 to inside global address 100.0.0.1,&nbsp;&nbsp;

19
00:01:50,960 --> 00:02:00,000
and also mapped 192.168.0.168 to 100.0.0.2 Then,&nbsp;
if for example if PC1 wants to access the server&nbsp;&nbsp;

20
00:02:00,000 --> 00:02:09,680
at 8.8.8.8, it sends a packet with source IP&nbsp;
192.168.0.167, a private IP address. R1 then&nbsp;&nbsp;

21
00:02:09,680 --> 00:02:16,000
translates the source address to 100.0.0.1, a&nbsp;
public IP address. When the server sends its&nbsp;&nbsp;

22
00:02:16,000 --> 00:02:23,040
reply, the destination is the public IP address.&nbsp;
R1 translates the destination IP of the reply back&nbsp;&nbsp;

23
00:02:23,040 --> 00:02:31,040
to 192.168.0.167 and forwards it to PC1. Okay,&nbsp;
hopefully you understand this process by now,&nbsp;&nbsp;

24
00:02:31,040 --> 00:02:34,080
but let me demonstrate one other&nbsp;
important point about static NAT.

25
00:02:35,760 --> 00:02:41,360
This one-to-one mapping of IP addresses doesn’t&nbsp;
only allow the internal host to access external&nbsp;&nbsp;

26
00:02:41,360 --> 00:02:47,760
resources, it also allows external hosts to access&nbsp;
the internal host via the inside global address.&nbsp;&nbsp;

27
00:02:49,040 --> 00:02:53,520
So, without PC1 initiating communication&nbsp;
with the server, it could send a packet&nbsp;&nbsp;

28
00:02:53,520 --> 00:03:01,040
to destination IP 100.0.0.1, and because of that&nbsp;
one-to-one IP address mapping R1 would translate&nbsp;&nbsp;

29
00:03:01,040 --> 00:03:09,760
it to 192.168.0.167 and forward it to PC1, and&nbsp;
then PC1 would reply. So, it works two-ways,&nbsp;&nbsp;

30
00:03:10,320 --> 00:03:16,160
not just from inside to outside, but also&nbsp;
from outside to inside. Okay, just wanted&nbsp;&nbsp;

31
00:03:16,160 --> 00:03:21,360
to make that clear since I didn’t mention it&nbsp;
in Day 44. Now let’s move on to dynamic NAT.

32
00:03:23,280 --> 00:03:26,160
In dynamic NAT, the router dynamically maps inside&nbsp;&nbsp;

33
00:03:26,160 --> 00:03:32,160
local addresses to inside global addresses&nbsp;
as needed. So, you don’t manually specify&nbsp;&nbsp;

34
00:03:32,160 --> 00:03:37,040
‘map this IP address to this IP address,&nbsp;
that IP address to that IP address’.&nbsp;&nbsp;

35
00:03:37,760 --> 00:03:42,480
The router makes those mappings automatically, and&nbsp;
then clears the mapping when its no longer needed.&nbsp;&nbsp;

36
00:03:43,280 --> 00:03:49,440
Here’s how it works in Cisco IOS. An ACL is used&nbsp;
to identify which traffic should be translated.&nbsp;&nbsp;

37
00:03:50,400 --> 00:03:55,040
Okay, this part is important, because it’s a&nbsp;
totally different use of an ACL, but it’s a&nbsp;&nbsp;

38
00:03:55,040 --> 00:04:01,120
very common use. ACLs can be used to indicate&nbsp;
which traffic should be forwarded and which&nbsp;&nbsp;

39
00:04:01,120 --> 00:04:06,720
should be blocked, you already know that. But&nbsp;
they can also be used just to identify traffic.&nbsp;&nbsp;

40
00:04:07,520 --> 00:04:13,840
If the source IP of a packet is permitted by the&nbsp;
ACL, the source IP will be translated by NAT.&nbsp;&nbsp;

41
00:04:14,480 --> 00:04:20,480
However if the source IP is denied by the ACL, the&nbsp;
source IP will NOT be translated. But that doesn’t&nbsp;&nbsp;

42
00:04:20,480 --> 00:04:25,440
mean the traffic will be dropped! We’re simply&nbsp;
using the ACL to identify which traffic should be&nbsp;&nbsp;

43
00:04:25,440 --> 00:04:31,280
translated, we’re not using it to drop traffic,&nbsp;
because we won’t apply the ACL to an interface&nbsp;&nbsp;

44
00:04:31,280 --> 00:04:37,120
with the IP ACCESS-GROUP command. Anyway, when&nbsp;
we get to configuration you’ll see how it works.&nbsp;&nbsp;

45
00:04:38,240 --> 00:04:44,080
Then, a NAT pool is used to define the available&nbsp;
inside global addresses that can be used for&nbsp;&nbsp;

46
00:04:44,080 --> 00:04:53,600
translation. For example, on R1 I configured ACL&nbsp;
1, which permits 192.168.0.0/24 and denies all&nbsp;&nbsp;

47
00:04:53,600 --> 00:05:01,920
other traffic. I also configured NAT POOL1,&nbsp;
with a range from 100.0.0.1 to 100.0.0.10.&nbsp;&nbsp;

48
00:05:03,280 --> 00:05:09,680
That means if a packet with a source IP permitted&nbsp;
by ACL 1 arrives, translate the source IP to an&nbsp;&nbsp;

49
00:05:09,680 --> 00:05:17,840
address from POOL1. So, PC1 sends a packet, and&nbsp;
its IP address is permitted by ACL 1. Then R1&nbsp;&nbsp;

50
00:05:17,840 --> 00:05:25,200
translates the source IP to an address from&nbsp;
POOL1, 100.0.0.1. The server sends a reply,&nbsp;&nbsp;

51
00:05:25,200 --> 00:05:30,800
and R1 translates the address back. So, it&nbsp;
looks like the same process as in static NAT.&nbsp;&nbsp;

52
00:05:31,600 --> 00:05:37,360
The difference is that, instead of manually&nbsp;
configuring a mapping from 192.168.0.167&nbsp;&nbsp;

53
00:05:37,360 --> 00:05:43,040
to 100.0.0.1, R1 did it automatically&nbsp;
when the packet from PC1 arrived.&nbsp;&nbsp;

54
00:05:44,240 --> 00:05:49,440
Now, I want to emphasize this point. If the&nbsp;
source IP address is not permitted by the ACL,&nbsp;&nbsp;

55
00:05:50,000 --> 00:05:53,920
it doesn’t mean the packet will be dropped,&nbsp;
it just means it won’t be translated.

56
00:05:55,840 --> 00:06:00,080
Let me explain a few more points about dynamic&nbsp;
NAT, and then we’ll look at the configuration.&nbsp;&nbsp;

57
00:06:01,280 --> 00:06:05,120
Although they are dynamically assigned,&nbsp;
the mappings are still one-to-one,&nbsp;&nbsp;

58
00:06:05,120 --> 00:06:11,840
one inside local IP address per inside global IP&nbsp;
address. If there aren’t enough inside global IP&nbsp;&nbsp;

59
00:06:11,840 --> 00:06:17,280
addresses available, if they are all currently&nbsp;
being used, it is called ‘NAT pool exhaustion’.&nbsp;&nbsp;

60
00:06:18,080 --> 00:06:25,280
In the previous example, the ACL specified a /24&nbsp;
subnet of inside local addresses, but the NAT pool&nbsp;&nbsp;

61
00:06:25,280 --> 00:06:31,200
only had 10 inside global addresses. So, there&nbsp;
can only be 10 translations active at a time.&nbsp;&nbsp;

62
00:06:32,240 --> 00:06:36,640
What happens if there are no available&nbsp;
addresses, but a packet arrives and needs NAT?&nbsp;&nbsp;

63
00:06:37,680 --> 00:06:43,200
If a packet from another inside host arrives and&nbsp;
needs NAT but there are no available addresses,&nbsp;&nbsp;

64
00:06:43,200 --> 00:06:48,160
the router will drop the packet. The host&nbsp;
will be unable to access outside networks&nbsp;&nbsp;

65
00:06:48,160 --> 00:06:53,360
until one of the inside global IP addresses&nbsp;
becomes available. And how does that happen?&nbsp;&nbsp;

66
00:06:54,480 --> 00:07:01,040
Dynamic NAT entries will time out automatically&nbsp;
if not used, or you can clear them manually. So,&nbsp;&nbsp;

67
00:07:01,040 --> 00:07:06,080
in our previous example if PC1 stops&nbsp;
communicating with external hosts for a while,&nbsp;&nbsp;

68
00:07:06,080 --> 00:07:12,000
the inside global address 100.0.0.1 would become&nbsp;
available again for a different host to use.&nbsp;&nbsp;

69
00:07:13,040 --> 00:07:18,320
Or you can use the CLEAR IP NAT TRANSLATION&nbsp;
command anytime to manually clear translations.

70
00:07:20,080 --> 00:07:28,160
Let me demonstrate that NAT pool exhaustion. A&nbsp;
packet with source IP 192.168.0.167 arrives at R1.&nbsp;&nbsp;

71
00:07:28,880 --> 00:07:37,760
It is translated to 100.0.0.1, and then forwarded.&nbsp;
A packet with source IP 192.168.0.168 arrives&nbsp;&nbsp;

72
00:07:37,760 --> 00:07:43,760
and is translated to 100.0.0.2, and then&nbsp;
forwarded. Some other hosts send traffic,&nbsp;&nbsp;

73
00:07:43,760 --> 00:07:50,320
and now those ten inside global IP addresses,&nbsp;
100.0.0.1 through.10, are all being used.&nbsp;&nbsp;

74
00:07:51,520 --> 00:07:57,840
If host 192.168.0.98 tries to send some&nbsp;
traffic to the Internet, what happens?&nbsp;&nbsp;

75
00:07:58,960 --> 00:08:06,560
There are no addresses available, so the router&nbsp;
will drop the packet. But, perhaps 192.168.0.167&nbsp;&nbsp;

76
00:08:06,560 --> 00:08:12,640
stops communicating over the Internet. After&nbsp;
some time, its dynamic translation is removed.&nbsp;&nbsp;

77
00:08:13,840 --> 00:08:21,840
If 192.168.0.98 tries to send that traffic&nbsp;
again, , the 100.0.0.1 address is now available&nbsp;&nbsp;

78
00:08:21,840 --> 00:08:27,040
and it can reach the Internet. So, that’s a&nbsp;
difference between static NAT and dynamic NAT.&nbsp;&nbsp;

79
00:08:27,920 --> 00:08:33,920
Although both are one-to-one mappings, static&nbsp;
NAT mappings are permanent. However dynamic NAT&nbsp;&nbsp;

80
00:08:33,920 --> 00:08:38,480
mappings are temporary, they will time out when&nbsp;
they are no longer needed, and then another host&nbsp;&nbsp;

81
00:08:38,480 --> 00:08:44,720
can use that same public IP address. However,&nbsp;
hosts are still unable to use the same public&nbsp;&nbsp;

82
00:08:44,720 --> 00:08:50,880
IP address at the same time. To do that, you&nbsp;
have to use PAT, Port Address Translation.

83
00:08:52,560 --> 00:08:57,040
But before looking at Port Address Translation,&nbsp;
let’s cover dynamic NAT configuration.&nbsp;&nbsp;

84
00:08:58,160 --> 00:09:02,720
First, just like in static NAT you must&nbsp;
define the inside and outside interfaces.&nbsp;&nbsp;

85
00:09:03,680 --> 00:09:09,040
Then define the traffic that should be translated.&nbsp;
As I mentioned before, traffic permitted by this&nbsp;&nbsp;

86
00:09:09,040 --> 00:09:16,800
ACL will be translated. So, this ACL tells R1&nbsp;
to translate all traffic from 192.168.0.0/24.&nbsp;&nbsp;

87
00:09:18,000 --> 00:09:24,320
Then define the pool of inside global IP&nbsp;
addresses. The command is IP NAT POOL,&nbsp;&nbsp;

88
00:09:24,320 --> 00:09:29,200
then the pool name. After that you&nbsp;
specify the first IP address in the range,&nbsp;&nbsp;

89
00:09:29,200 --> 00:09:37,520
and then the last IP address in the range. So I&nbsp;
specified a range from 100.0.0.0 to 100.0.0.255.&nbsp;&nbsp;

90
00:09:38,560 --> 00:09:43,440
Finally, you have to specify the prefix&nbsp;
length, either with the PREFIX-LENGTH option&nbsp;&nbsp;

91
00:09:43,440 --> 00:09:50,320
or the NETMASK option. IOS uses this to check&nbsp;
if both addresses, the first and last address&nbsp;&nbsp;

92
00:09:50,320 --> 00:09:55,120
of the range, are in the same subnet. If&nbsp;
they aren’t, the command will be rejected.&nbsp;&nbsp;

93
00:09:56,560 --> 00:10:02,960
Finally, configure dynamic NAT by mapping the&nbsp;
ACL to the pool, with IP NAT INSIDE SOURCE,&nbsp;&nbsp;

94
00:10:02,960 --> 00:10:08,720
and then instead of STATIC use LIST, followed&nbsp;
by the ACL number or name, and then POOL,&nbsp;&nbsp;

95
00:10:08,720 --> 00:10:14,880
followed by the pool name. And that’s all there&nbsp;
is to dynamic NAT configuration. It’s a bit more&nbsp;&nbsp;

96
00:10:14,880 --> 00:10:20,720
complicated than static NAT configuration, but&nbsp;
it’s not so difficult. So, with the configurations&nbsp;&nbsp;

97
00:10:20,720 --> 00:10:28,960
complete I sent some traffic from PC1 and PC2 to&nbsp;
8.8.8.8. Let’s check out R1’s translation table.

98
00:10:30,560 --> 00:10:36,640
So, here’s R1’s table after sending pings as&nbsp;
well as DNS traffic to the server at 8.8.8.8.&nbsp;&nbsp;

99
00:10:37,600 --> 00:10:44,480
Notice there are three entries for each&nbsp;
mapping, three for 192.168.0.167 to 100.0.0.1,&nbsp;&nbsp;

100
00:10:45,120 --> 00:10:53,600
and three for 192.168.0.168 to 100.0.0.2. When&nbsp;
the router dynamically creates the inside local to&nbsp;&nbsp;

101
00:10:53,600 --> 00:10:59,840
inside global mappings, these entries are created.&nbsp;
And then when those mappings are actually used,&nbsp;&nbsp;

102
00:10:59,840 --> 00:11:05,920
when translations are made, separate entries like&nbsp;
these UDP entries or these ICMP entries are made.&nbsp;&nbsp;

103
00:11:07,120 --> 00:11:11,360
Now, those UDP and ICMP entries will&nbsp;
be cleared after about a minute,&nbsp;&nbsp;

104
00:11:11,920 --> 00:11:16,720
but the original dynamic mappings themselves&nbsp;
have a default timeout value of 24 hours,&nbsp;&nbsp;

105
00:11:17,280 --> 00:11:20,080
and each time a translation&nbsp;
is made the timer resets.&nbsp;&nbsp;

106
00:11:21,200 --> 00:11:26,720
So, dynamic NAT mappings actually last quite&nbsp;
a long time. You can change the default timers&nbsp;&nbsp;

107
00:11:26,720 --> 00:11:32,320
if you want, but that’s not something you need&nbsp;
to know for the CCNA. Note that, although these&nbsp;&nbsp;

108
00:11:32,320 --> 00:11:38,560
entries look like the static NAT entries from Day&nbsp;
44, if I use the CLEAR IP NAT TRANSLATION command,&nbsp;&nbsp;

109
00:11:39,120 --> 00:11:42,560
these entries will be cleared because&nbsp;
they are not static, they are dynamic.

110
00:11:44,240 --> 00:11:46,480
Now here’s SHOW IP NAT STATISTICS.&nbsp;&nbsp;

111
00:11:47,360 --> 00:11:50,960
Note that I entered this command when all&nbsp;
6 of those translation entries were active,&nbsp;&nbsp;

112
00:11:51,680 --> 00:11:57,280
so it displays 6 total active translations.&nbsp;
6 dynamic entries, and 4 extended.&nbsp;&nbsp;

113
00:11:58,160 --> 00:12:02,960
So, all of those entries were dynamic, but can&nbsp;
you guess which ones are the extended entries?&nbsp;&nbsp;

114
00:12:03,600 --> 00:12:09,680
They are those UDP and ICMP temporary entries&nbsp;
that were cleared after a minute. But again, the&nbsp;&nbsp;

115
00:12:09,680 --> 00:12:14,640
details of extended entries aren’t something you&nbsp;
need to know for the CCNA. What I really want to&nbsp;&nbsp;

116
00:12:14,640 --> 00:12:21,280
point out here is that you can confirm the dynamic&nbsp;
mapping from ACL 1 to POOL1 here. So, just like&nbsp;&nbsp;

117
00:12:21,280 --> 00:12:26,960
with static NAT, the two SHOW commands you should&nbsp;
know for dynamic NAT are SHOW IP NAT TRANSLATIONS&nbsp;&nbsp;

118
00:12:27,520 --> 00:12:33,600
and SHOW IP NAT STATISTICS. You should be familiar&nbsp;
with both of these commands for the CCNA exam.

119
00:12:35,120 --> 00:12:40,400
Now let’s move to PAT, Port Address Translation,&nbsp;
which is also known as NAT overload.&nbsp;&nbsp;

120
00:12:41,440 --> 00:12:45,680
It translates both the IP address and the&nbsp;
port number of a packet, if necessary.&nbsp;&nbsp;

121
00:12:46,480 --> 00:12:52,000
And what’s the purpose of translating the port&nbsp;
number? By using a unique port number for each&nbsp;&nbsp;

122
00:12:52,000 --> 00:12:57,680
communication flow between internal hosts and&nbsp;
external hosts, a single public IP address can&nbsp;&nbsp;

123
00:12:57,680 --> 00:13:04,640
be used by many different internal hosts. TCP&nbsp;
and UDP port numbers are 16 bits in length,&nbsp;&nbsp;

124
00:13:04,640 --> 00:13:10,880
which means there are over 65,000 port numbers.&nbsp;
Then, the router will keep track of which inside&nbsp;&nbsp;

125
00:13:10,880 --> 00:13:16,560
local address is using which inside global&nbsp;
address and port. So, the router will keep&nbsp;&nbsp;

126
00:13:16,560 --> 00:13:22,080
track of the communication flows by using unique&nbsp;
port numbers for each flow. Let me demonstrate.&nbsp;&nbsp;

127
00:13:23,280 --> 00:13:32,880
PC1 sends a DNS message to 8.8.8.8. Its source IP&nbsp;
is 192.168.0.167, and it selects a random source&nbsp;&nbsp;

128
00:13:32,880 --> 00:13:42,720
port, 54321. PC2 also sends a DNS message&nbsp;
to 8.8.8.8, with source IP 192.168.0.168.&nbsp;&nbsp;

129
00:13:43,680 --> 00:13:49,200
It also selects a random source port, and it&nbsp;
happens to choose the same source port as PC1,&nbsp;&nbsp;

130
00:13:49,200 --> 00:13:57,520
54321. R1 translates the source IP of PC1’s&nbsp;
message to 100.0.0.1, and keeps the source&nbsp;&nbsp;

131
00:13:57,520 --> 00:14:06,320
port the same, 54321. For PC2’s message, it&nbsp;
also translates the source IP to 100.0.0.1,&nbsp;&nbsp;

132
00:14:06,320 --> 00:14:13,040
but it changes the source port to 54322. Why&nbsp;
does it do that? It’s so it can keep track of&nbsp;&nbsp;

133
00:14:13,040 --> 00:14:18,480
the communication flows. If both flows&nbsp;
use the same source IP and source port,&nbsp;&nbsp;

134
00:14:18,480 --> 00:14:23,440
when the replies come from the server, R1&nbsp;
won’t know which reply to send to which PC.&nbsp;&nbsp;

135
00:14:24,720 --> 00:14:29,840
So, the server sends the replies to&nbsp;
R1. Both have destination IP 100.0.0.1,&nbsp;&nbsp;

136
00:14:31,280 --> 00:14:39,280
but one has destination port 54321, and the&nbsp;
other 54322. Because of the unique port numbers,&nbsp;&nbsp;

137
00:14:39,280 --> 00:14:47,280
R1 knows to send this reply to PC1 and this reply&nbsp;
to PC2. In this example, both PCs selected the&nbsp;&nbsp;

138
00:14:47,280 --> 00:14:52,000
same random source port number, because I wanted&nbsp;
to show the router translating the source port.&nbsp;&nbsp;

139
00:14:53,120 --> 00:14:56,960
However, if PC2 selected a different&nbsp;
random source port than PC1,&nbsp;&nbsp;

140
00:14:57,520 --> 00:15:00,080
then R1 would have no need&nbsp;
to translate the source port.&nbsp;&nbsp;

141
00:15:00,640 --> 00:15:05,840
It would simply use the source port PC2 selected&nbsp;
and use that to keep track of the sessions.&nbsp;&nbsp;

142
00:15:06,800 --> 00:15:13,280
So, that’s how PAT works. Because many inside&nbsp;
hosts can share a single public IP, PAT&nbsp;&nbsp;

143
00:15:13,280 --> 00:15:18,640
is very useful for preserving public IP addresses,&nbsp;
and it is used in networks all over the world.&nbsp;&nbsp;

144
00:15:19,600 --> 00:15:24,880
Of the three types we have covered, static&nbsp;
NAT, dynamic NAT, and PAT, PAT is the most&nbsp;&nbsp;

145
00:15:24,880 --> 00:15:29,680
widely used because it allows so many inside&nbsp;
hosts to share a single public IP address.

146
00:15:31,280 --> 00:15:38,480
Here’s how to configure PAT. It’s basically the&nbsp;
same as dynamic NAT, you just add one keyword. So,&nbsp;&nbsp;

147
00:15:38,480 --> 00:15:44,560
first define the inside and outside interfaces.&nbsp;
Then, define which traffic should be translated&nbsp;&nbsp;

148
00:15:44,560 --> 00:15:52,400
by using an ACL. Again, traffic permitted by the&nbsp;
ACL will be translated. Then define the pool of&nbsp;&nbsp;

149
00:15:52,400 --> 00:16:00,720
inside global IP addresses. This time I defined&nbsp;
a smaller range, from 100.0.0.0 to 100.0.0.3.&nbsp;&nbsp;

150
00:16:02,000 --> 00:16:06,480
Chances are, unless the internal network is&nbsp;
very large, you won’t need more than a single&nbsp;&nbsp;

151
00:16:06,480 --> 00:16:13,360
IP address, but this provides some scalability,&nbsp;
some room for growth. Note that I still specified&nbsp;&nbsp;

152
00:16:13,360 --> 00:16:19,760
a prefix length of 24 bits. As long as the&nbsp;
specified address range is in the same subnet,&nbsp;&nbsp;

153
00:16:19,760 --> 00:16:26,960
this specified prefix length doesn’t&nbsp;
really matter. 100.0.0.0 through 100.0.0.3&nbsp;&nbsp;

154
00:16:26,960 --> 00:16:34,880
all fit in the subnet 100.0.0.0/24, so the command&nbsp;
is valid. Finally, the NAT statement itself.&nbsp;&nbsp;

155
00:16:35,680 --> 00:16:42,160
It’s the same as for dynamic NAT, except at&nbsp;
the end you use the keyword OVERLOAD. IP NAT&nbsp;&nbsp;

156
00:16:42,160 --> 00:16:52,880
INSIDE SOURCE LIST 1 POOL POOL1 OVERLOAD. So,&nbsp;
PC1 and PC2 both send DNS requests to 8.8.8.8.&nbsp;&nbsp;

157
00:16:53,680 --> 00:16:57,360
Let’s take a look at the NAT&nbsp;
translations and statistics on R1.

158
00:16:59,120 --> 00:17:04,800
So, here are the translations on R1. One big&nbsp;
difference compared to regular dynamic NAT&nbsp;&nbsp;

159
00:17:04,800 --> 00:17:10,800
is that those one-to-one dynamic mapping entries&nbsp;
aren’t displayed. That’s because, when using PAT,&nbsp;&nbsp;

160
00:17:10,800 --> 00:17:16,960
there are no one-to-one mappings, they’re many&nbsp;
to one. Many inside local addresses to one&nbsp;&nbsp;

161
00:17:16,960 --> 00:17:26,400
inside global address. As you can see, both&nbsp;
192.168.0.167 and .168 are using 100.0.0.1.&nbsp;&nbsp;

162
00:17:27,360 --> 00:17:32,240
They both selected different source port numbers,&nbsp;
so R1 didn’t need to translate the port numbers.&nbsp;&nbsp;

163
00:17:33,360 --> 00:17:40,240
It will use port number 63925 to track the&nbsp;
communication flow between PC1 and 8.8.8.8,&nbsp;&nbsp;

164
00:17:40,800 --> 00:17:48,400
and it will use port number 59549 to track the&nbsp;
communication flow between PC2 and 8.8.8.8.&nbsp;&nbsp;

165
00:17:49,360 --> 00:17:54,880
And here’s SHOW IP NAT STATISTICS. Feel free&nbsp;
to pause the video to check out the output if&nbsp;&nbsp;

166
00:17:54,880 --> 00:17:59,840
you’re interested, but now I’m going to move on&nbsp;
to show you one more useful way to configure PAT.

167
00:18:01,440 --> 00:18:06,080
One more way to configure PAT, and probably&nbsp;
the more common way, is to configure the&nbsp;&nbsp;

168
00:18:06,080 --> 00:18:10,800
router to use its own public IP address&nbsp;
when translating the source IP of packets.&nbsp;&nbsp;

169
00:18:12,000 --> 00:18:16,240
So, as always you must configure the inside&nbsp;
and outside interfaces on the router.&nbsp;&nbsp;

170
00:18:17,120 --> 00:18:21,120
And then just like before use an ACL to&nbsp;
define which traffic should be translated.&nbsp;&nbsp;

171
00:18:22,480 --> 00:18:25,360
Here’s the difference with the&nbsp;
previous method of configuring PAT.&nbsp;&nbsp;

172
00:18:26,480 --> 00:18:30,000
Instead of specifying a POOL&nbsp;
and then the OVERLOAD keyword,&nbsp;&nbsp;

173
00:18:30,000 --> 00:18:36,640
you specify INTERFACE, then the outside&nbsp;
interface, g0/0 in R1’s case, and then OVERLOAD.&nbsp;&nbsp;

174
00:18:37,920 --> 00:18:45,600
So, R1 will translate the source IP address of&nbsp;
packets from 192.168.0.0/24 to the IP address of&nbsp;&nbsp;

175
00:18:45,600 --> 00:18:54,640
its G0/0 interface, 203.0.113.1. It will also use&nbsp;
a unique source port number for each traffic flow,&nbsp;&nbsp;

176
00:18:54,640 --> 00:18:59,600
so it can keep track of them and multiple&nbsp;
internal hosts can share that single IP address.

177
00:19:01,360 --> 00:19:08,000
Let me demonstrate that. PC1 and PC2&nbsp;
both send DNS requests to 8.8.8.8.&nbsp;&nbsp;

178
00:19:09,040 --> 00:19:16,960
Notice that they both selected a different random&nbsp;
source port. 65205 for PC1 and 59641 for PC2.&nbsp;&nbsp;

179
00:19:18,240 --> 00:19:23,200
R1 translates the source IP address of both&nbsp;
packets, changing them to the IP of R1’s&nbsp;&nbsp;

180
00:19:23,200 --> 00:19:30,960
G0/0 interface, 203.0.113.1. Because both&nbsp;
source port numbers are already different,&nbsp;&nbsp;

181
00:19:30,960 --> 00:19:36,960
there is no need to translate the port numbers.&nbsp;
The server sends the replies, and R1 translates&nbsp;&nbsp;

182
00:19:36,960 --> 00:19:42,320
them back and sends them to their correct&nbsp;
destinations. Because of the unique port numbers,&nbsp;&nbsp;

183
00:19:42,320 --> 00:19:51,840
R1 knows which to translate back to 192.168.0.167&nbsp;
and which to translate back to 192.168.0.168.

184
00:19:52,720 --> 00:19:55,200
Here is R1’s NAT translation table after that.&nbsp;&nbsp;

185
00:19:56,560 --> 00:20:06,080
Notice that both 192.168.0.167 and .168&nbsp;
are using R1’s IP address, 203.0.113.1.&nbsp;&nbsp;

186
00:20:06,080 --> 00:20:10,640
Also notice that, as I said, there was no need&nbsp;
for R1 to translate the source port numbers,&nbsp;&nbsp;

187
00:20:10,640 --> 00:20:17,760
because they were already unique. And here is SHOW&nbsp;
IP NAT STATISTICS. Again, feel free to pause and&nbsp;&nbsp;

188
00:20:17,760 --> 00:20:22,560
check this command out if you want, but going in&nbsp;
depth into all of the output here isn’t necessary.

189
00:20:24,160 --> 00:20:26,400
Here are the new commands&nbsp;
we covered in this video.&nbsp;&nbsp;

190
00:20:27,280 --> 00:20:31,760
If you don’t remember these commands, go back&nbsp;
in the video to review, and also make sure to&nbsp;&nbsp;

191
00:20:31,760 --> 00:20:37,200
practice them in packet tracer either by making&nbsp;
your own labs or by doing my practice labs.

192
00:20:38,880 --> 00:20:42,320
Before moving on to the quiz, let’s&nbsp;
review what we covered in this video.&nbsp;&nbsp;

193
00:20:43,440 --> 00:20:49,120
First, I demonstrated how static NAT not only&nbsp;
allows inside hosts to access external networks,&nbsp;&nbsp;

194
00:20:49,120 --> 00:20:53,600
but it also allows hosts on external&nbsp;
networks to access the internal hosts&nbsp;&nbsp;

195
00:20:53,600 --> 00:21:02,560
using the mapped inside global IP address. Then I&nbsp;
covered dynamic NAT and dynamic PAT. Dynamic PAT&nbsp;&nbsp;

196
00:21:02,560 --> 00:21:08,880
is probably the most common type of NAT. It allows&nbsp;
many internal hosts to share a single public IP,&nbsp;&nbsp;

197
00:21:08,880 --> 00:21:15,280
all at the same time. My home router, for&nbsp;
example, has a single public IP address, and all&nbsp;&nbsp;

198
00:21:15,280 --> 00:21:21,600
of the devices in my home such as my PC, phones&nbsp;
connected to Wi-Fi, etc, all share the single&nbsp;&nbsp;

199
00:21:21,600 --> 00:21:27,840
public IP address when accessing the Internet. And&nbsp;
make sure to watch until the end of the quiz for&nbsp;&nbsp;

200
00:21:27,840 --> 00:21:34,000
a bonus question from Boson Software’s ExSim&nbsp;
for CCNA. Okay, let’s go to quiz question 1.

201
00:21:35,840 --> 00:21:41,120
Which of the following NAT types best fulfills&nbsp;
the goal of preserving public IPv4 addresses?&nbsp;&nbsp;

202
00:21:41,840 --> 00:21:43,840
Pause the video now to think about your answer.

203
00:21:48,640 --> 00:21:55,520
Okay, the answer is D, NAT Overload, aka PAT.&nbsp;
NAT Overload allows many internal hosts to&nbsp;&nbsp;

204
00:21:55,520 --> 00:22:00,480
use a single public IP address because the&nbsp;
router keeps track of communication flows&nbsp;&nbsp;

205
00:22:00,480 --> 00:22:06,560
using the Layer 4 port number. This means most&nbsp;
networks only need a single public IP address,&nbsp;&nbsp;

206
00:22:06,560 --> 00:22:12,560
instead of each device requiring a unique&nbsp;
public IP address. Okay, let’s go to question 2.

207
00:22:14,640 --> 00:22:18,240
Which of the following dynamic NAT&nbsp;
configurations will translate inside&nbsp;&nbsp;

208
00:22:18,240 --> 00:22:25,840
local addresses from 172.16.1.0/24 to&nbsp;
addresses from the subnet 203.0.113.0/25?&nbsp;&nbsp;

209
00:22:27,520 --> 00:22:29,600
Pause the video now to think about the answer.

210
00:22:34,400 --> 00:22:41,840
Okay, the answer is B. So, what’s wrong with&nbsp;
A and C? In A, the pool’s netmask is correct,&nbsp;&nbsp;

211
00:22:41,840 --> 00:22:56,240
255.255.255.128 is /25, but the address range is&nbsp;
203.0.113.0 to 203.0.113.255. 203.0.113.255 does&nbsp;&nbsp;

212
00:22:56,240 --> 00:23:04,560
not fall in the 203.0.113.0/25 subnet, so the&nbsp;
router would reject this command. How about C?&nbsp;&nbsp;

213
00:23:05,360 --> 00:23:12,000
The ACL’s mask is 255.255.255.0, but&nbsp;
ACLs are supposed to use wildcard masks,&nbsp;&nbsp;

214
00:23:12,800 --> 00:23:18,720
so /24 should be 0.0.0.255.&nbsp;
Okay, let’s go to question 3.

215
00:23:21,280 --> 00:23:26,800
Dynamic NAT is configured on R1 and a pool&nbsp;
of 10 inside global addresses is specified.&nbsp;&nbsp;

216
00:23:27,920 --> 00:23:31,680
Currently, all 10 addresses&nbsp;
are being used by inside hosts,&nbsp;&nbsp;

217
00:23:31,680 --> 00:23:35,040
but another inside host attempts&nbsp;
to send a packet over the Internet.&nbsp;&nbsp;

218
00:23:35,680 --> 00:23:40,400
What does R1 do with this packet? Pause&nbsp;
the video now to think about the answer.

219
00:23:45,120 --> 00:23:47,840
Okay, the answer is B, it discards the packet.&nbsp;&nbsp;

220
00:23:48,880 --> 00:23:53,360
When dynamic NAT is being used and a packet&nbsp;
requires NAT, but there are no available&nbsp;&nbsp;

221
00:23:53,360 --> 00:23:59,360
addresses in the pool, the router will simply&nbsp;
discard the packet. Okay, let’s go to question 4.

222
00:24:00,720 --> 00:24:04,160
Which of the following dynamic NAT&nbsp;
configurations will translate inside&nbsp;&nbsp;

223
00:24:04,160 --> 00:24:11,040
local addresses from 10.0.1.0/27 to use the&nbsp;
IP address of the router’s G0/1 interface?&nbsp;&nbsp;

224
00:24:12,000 --> 00:24:17,840
Pause the video now to think about the answer.

225
00:24:19,280 --> 00:24:23,360
Okay the answer is A. It’s the&nbsp;
only option that uses the correct&nbsp;&nbsp;

226
00:24:23,360 --> 00:24:27,760
/27 wildcard mask in the ACL,&nbsp;
the correct IP NAT command,&nbsp;&nbsp;

227
00:24:28,400 --> 00:24:33,760
and assigns the inside and outside interfaces&nbsp;
correctly. Okay, let’s go to question 5.

228
00:24:36,400 --> 00:24:39,840
After specifying the inside&nbsp;
and outside NAT interfaces,&nbsp;&nbsp;

229
00:24:39,840 --> 00:24:45,840
you issue the following commands on R1. What&nbsp;
will happen to hosts from the 192.168.1.0/24&nbsp;&nbsp;

230
00:24:47,360 --> 00:24:50,640
subnet? Pause the video now&nbsp;
to think about the answer.

231
00:24:55,920 --> 00:24:59,760
Okay, the answer is C, the packets&nbsp;
they send will not be translated by&nbsp;&nbsp;

232
00:24:59,760 --> 00:25:05,040
R1. When an ACL is used to identify&nbsp;
which traffic should be translated,&nbsp;&nbsp;

233
00:25:05,040 --> 00:25:10,400
such as in dynamic NAT and PAT, packets&nbsp;
permitted by the ACL will be translated,&nbsp;&nbsp;

234
00:25:10,400 --> 00:25:16,480
and packets denied by the ACL won’t be translated.&nbsp;
Even though the ACL denies the packets,&nbsp;&nbsp;

235
00:25:16,480 --> 00:25:21,760
it doesn’t mean the router will drop the packets,&nbsp;
it just won’t translate them. Okay, that’s all&nbsp;&nbsp;

236
00:25:21,760 --> 00:25:27,840
for the quiz. Now let’s take a look at a bonus&nbsp;
question from Boson Software’s ExSim for CCNA.

237
00:25:30,240 --> 00:25:35,760
Okay, here's today's Boson ExSim practice&nbsp;
question. HostA is attempting to initiate&nbsp;&nbsp;

238
00:25:35,760 --> 00:25:42,800
an HTTP connection to HostB through a NAT router&nbsp;
named RouterA. The devices use the following IP&nbsp;&nbsp;

239
00:25:42,800 --> 00:25:48,480
addresses. Here they are. Which of the following&nbsp;
lines of output would you expect to be displayed&nbsp;&nbsp;

240
00:25:48,480 --> 00:25:53,600
when you issue the SHOW IP NAT TRANSLATIONS&nbsp;
command on RouterA? Select the best answer.&nbsp;&nbsp;

241
00:25:54,560 --> 00:25:58,880
Okay, pause the video now. Take a look at&nbsp;
these options and select the best answer.&nbsp;&nbsp;

242
00:26:04,320 --> 00:26:11,120
Okay let's check. So, first off, what should the&nbsp;
outside local and outside global addresses be?&nbsp;&nbsp;

243
00:26:11,920 --> 00:26:19,600
They should be the IP address of the destination&nbsp;
host, that is HostB, 192.0.2.28. So all of these&nbsp;&nbsp;

244
00:26:19,600 --> 00:26:23,840
are correct. Now how about the inside&nbsp;
local address, what should that be?&nbsp;&nbsp;

245
00:26:24,800 --> 00:26:31,440
That should be the IP address of the source host,&nbsp;
so the actual IP address configured on HostA in&nbsp;&nbsp;

246
00:26:31,440 --> 00:26:42,400
this case. So, 10.1.7.7. So that means A and D are&nbsp;
incorrect. Their inside local address is 10.1.7.1,&nbsp;&nbsp;

247
00:26:42,960 --> 00:26:47,920
which is the IP address of RouterA's internal&nbsp;
interface, and that is not correct. So,&nbsp;&nbsp;

248
00:26:47,920 --> 00:26:54,080
the correct answer is either B or C. Now, how&nbsp;
about the inside global IP address? Should that be&nbsp;&nbsp;

249
00:26:55,120 --> 00:27:06,400
10.1.7.1, like in B, or 203.0.113.62? So, 10.1.7.1&nbsp;
is the IP address of RouterA's internal interface,&nbsp;&nbsp;

250
00:27:07,120 --> 00:27:14,320
and 203.0.113.62 is the IP address of RouterA's&nbsp;
external interface. Now, when doing PAT&nbsp;&nbsp;

251
00:27:15,040 --> 00:27:19,920
and translating to the IP address of the router's&nbsp;
interface, you should translate to the IP&nbsp;&nbsp;

252
00:27:19,920 --> 00:27:26,240
address of the external interface, the public IP&nbsp;
address. So, that means C is the correct answer.&nbsp;&nbsp;

253
00:27:27,600 --> 00:27:34,560
So I will click on show answer and indeed that&nbsp;
is correct. So, here is Boson's explanation of&nbsp;&nbsp;

254
00:27:34,560 --> 00:27:42,160
that answer. You can pause the video now to read&nbsp;
this explanation. And there's some more down here.&nbsp;&nbsp;

255
00:27:46,400 --> 00:27:49,920
Okay, so that was a quick look at&nbsp;
Boson Software's ExSim for CCNA.&nbsp;&nbsp;

256
00:27:50,480 --> 00:27:54,800
These are without a doubt the best practice&nbsp;
exams for the CCNA, and I highly recommend&nbsp;&nbsp;

257
00:27:54,800 --> 00:28:02,080
them. If you want to get Boson ExSim, please&nbsp;
follow the link in the video description.

258
00:28:02,080 --> 00:28:04,480
There are supplementary materials for this video.&nbsp;&nbsp;

259
00:28:05,440 --> 00:28:08,240
There is a flashcard deck to&nbsp;
use with the software ‘Anki’.&nbsp;&nbsp;

260
00:28:09,360 --> 00:28:13,520
There will also be a packet tracer practice&nbsp;
lab so you can get some hands-on practice.&nbsp;&nbsp;

261
00:28:14,320 --> 00:28:19,760
That will be in the next video. Sign up for my&nbsp;
mailing list via the link in the description,&nbsp;&nbsp;

262
00:28:19,760 --> 00:28:23,840
and I’ll send you all of the flashcards&nbsp;
and packet tracer lab files for the course.

263
00:28:26,000 --> 00:28:30,480
Before finishing today’s video I want&nbsp;
to thank my JCNP-level channel members.&nbsp;&nbsp;

264
00:28:31,120 --> 00:28:38,000
To join, please click the ‘Join’ button under the&nbsp;
video. Thank you to Anand, Pavel, Abraham, Serge,&nbsp;&nbsp;

265
00:28:38,000 --> 00:28:45,600
Njoku, Viktor, Roger, Raj, Kenneth, Seamus, H&nbsp;
W, Brandon, Aaron, Marcel, Kone, Donald, C Mohd,&nbsp;&nbsp;

266
00:28:45,600 --> 00:28:52,320
Gustavo, Anthony, Benjamin, Justin, Prakaash,&nbsp;
Nasir, Erlison, Marko, Daming, Ed, Value, John,&nbsp;&nbsp;

267
00:28:52,320 --> 00:28:58,560
Funnydart, Velvijaykum, Mark, Yousif, Boson&nbsp;
Software, Devin, Lito, Yonatan, and Vance.&nbsp;&nbsp;

268
00:28:58,560 --> 00:29:02,560
Sorry if I pronounced your name incorrectly,&nbsp;
but thank you so much for your support.&nbsp;&nbsp;

269
00:29:03,520 --> 00:29:09,840
This is the list of JCNP-level members at the&nbsp;
time of recording by the way, March 24th 2021.&nbsp;&nbsp;

270
00:29:10,720 --> 00:29:16,000
If you signed up recently and your name isn’t&nbsp;
on here don’t worry, you’ll be in future videos.

271
00:29:17,760 --> 00:29:20,880
Thank you for watching. Please&nbsp;
subscribe to the channel,&nbsp;&nbsp;

272
00:29:20,880 --> 00:29:25,840
like the video, leave a comment, and share the&nbsp;
video with anyone else studying for the CCNA.&nbsp;&nbsp;

273
00:29:26,640 --> 00:29:32,240
If you want to leave a tip, check the links in the&nbsp;
description. I'm also a Brave verified publisher&nbsp;&nbsp;

274
00:29:32,240 --> 00:29:38,880
and accept BAT, or Basic Attention Token, tips&nbsp;
via the Brave browser. That's all for now.
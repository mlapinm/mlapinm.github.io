1
00:00:01,040 --> 00:00:06,080
Welcome to Jeremy’s IT Lab. This is&nbsp;
a free, complete course for the CCNA.&nbsp;&nbsp;

2
00:00:06,880 --> 00:00:10,400
If you like these videos, please&nbsp;
subscribe to follow along with the series.&nbsp;&nbsp;

3
00:00:11,120 --> 00:00:15,600
Also, please like and leave a comment, and share&nbsp;
the video to help spread this free series of&nbsp;&nbsp;

4
00:00:15,600 --> 00:00:20,640
videos. Thanks for your help. Also, remember&nbsp;
to sign up via the link in the description to&nbsp;&nbsp;

5
00:00:20,640 --> 00:00:25,360
get all of the lab files for this course, so&nbsp;
you can try it out yourself in packet tracer.

6
00:00:26,960 --> 00:00:30,000
If you want more labs like these,&nbsp;
I highly recommend picking up&nbsp;&nbsp;

7
00:00:30,000 --> 00:00:35,200
Boson’s NetSim for the CCNA, click the link&nbsp;
in the video description to check it out.&nbsp;&nbsp;

8
00:00:35,920 --> 00:00:40,560
It’s a network simulator like packet tracer, but&nbsp;
it’s even better, and it includes all of these&nbsp;&nbsp;

9
00:00:40,560 --> 00:00:45,360
guided labs to not only help you get hands-on&nbsp;
practice configuring and troubleshooting,&nbsp;&nbsp;

10
00:00:45,360 --> 00:00:50,720
but also deepen your understanding of the exam&nbsp;
topics. I used it myself when studying for my&nbsp;&nbsp;

11
00:00:50,720 --> 00:00:54,560
certifications, so I feel confident&nbsp;
about recommending it to all of you.&nbsp;&nbsp;

12
00:00:55,360 --> 00:00:59,680
If you want to get your own copy of NetSim,&nbsp;
please follow the link in the video description.

13
00:01:01,440 --> 00:01:06,880
In today’s video we’ll practice configuring&nbsp;
standard ACLs, access control lists, with a&nbsp;&nbsp;

14
00:01:06,880 --> 00:01:13,760
little OSPF also. Standard ACLs can be used to&nbsp;
identify traffic based on the source IP address&nbsp;&nbsp;

15
00:01:13,760 --> 00:01:20,080
of the packet, and then either permit or deny&nbsp;
it. There are two main ways to configure them,&nbsp;&nbsp;

16
00:01:20,080 --> 00:01:25,840
standard numbered ACLs and standard named&nbsp;
ACLs. In this lab, we’ll practice both.

17
00:01:27,360 --> 00:01:33,120
So let’s get right into it. Step 1 says to&nbsp;
configure OSPF on R1 and R2 to allow full&nbsp;&nbsp;

18
00:01:33,120 --> 00:01:39,200
connectivity between the devices. We don’t&nbsp;
have to do any special OSPF configurations,&nbsp;&nbsp;

19
00:01:39,200 --> 00:01:43,200
let’s just simply enable it on&nbsp;
each interface. I’ll start on R1.

20
00:01:45,360 --> 00:01:52,800
ENABLE. CONF T. ROUTER OSPF 1. I’ll enable&nbsp;
it on the two gig ethernet interfaces first.&nbsp;&nbsp;

21
00:01:53,520 --> 00:02:07,360
NETWORK 172.16.0.0 0.0.255.255 AREA 0. And now&nbsp;
the serial interface. NETWORK 203.0.113.0 0.0.0.3&nbsp;&nbsp;

22
00:02:07,360 --> 00:02:15,440
AREA 0. Let’s see if it was enabled on&nbsp;
each interface. DO SHOW IP OSPF INTERFACE.&nbsp;&nbsp;

23
00:02:17,200 --> 00:02:25,120
Okay, we can see gigabitethernet 0/0, 0/1, and&nbsp;
serial 0/0/0, so it’s activated on all interfaces.

24
00:02:26,960 --> 00:02:28,560
Let’s do the same on R2.&nbsp;&nbsp;

25
00:02:32,000 --> 00:02:40,560
ENABLE. CONF T. ROUTER OSPF 1. Again, I’ll enable&nbsp;
it on the two gig ethernet interfaces first.&nbsp;&nbsp;

26
00:02:41,520 --> 00:02:55,200
NETWORK 192.168.0.0 0.0.255.255 AREA 0. And then&nbsp;
the serial interface. NETWORK 203.0.113.0 0.0.0.3&nbsp;&nbsp;

27
00:02:55,760 --> 00:03:06,320
AREA 0. And let’s check. DO SHOW IP OSPF&nbsp;
INTERFACE. So, we can see gigabitethernet0/0, 0/1,&nbsp;&nbsp;

28
00:03:06,320 --> 00:03:14,480
and serial 0/0/0. Let’s make sure they are&nbsp;
OSPF neighbors. DO SHOW IP OSPF NEIGHBOR.&nbsp;&nbsp;

29
00:03:16,160 --> 00:03:22,560
There’s R1, in the full state. Notice the dash&nbsp;
here. Because this is a serial connection,&nbsp;&nbsp;

30
00:03:22,560 --> 00:03:30,800
the OSPF network type is point-to-point, so no DR&nbsp;
or BDR is needed. Finally let’s check the routing&nbsp;&nbsp;

31
00:03:30,800 --> 00:03:42,080
table. DO SHOW IP ROUTE. R2 learned routes&nbsp;
to 172.16.1.0/24 and 2.0/24 from R1, perfect.&nbsp;&nbsp;

32
00:03:43,520 --> 00:03:55,840
How about on R1? DO SHOW IP ROUTE. R1 learned&nbsp;
routes to 192.168.1.0/24 and 2.0/24 from R2.&nbsp;&nbsp;

33
00:03:56,640 --> 00:04:01,920
So, our OSPF configuration is working and we&nbsp;
now have full connectivity in this network.

34
00:04:03,520 --> 00:04:07,520
Now let’s restrict some of that traffic&nbsp;
according to the network policies in step 2.&nbsp;&nbsp;

35
00:04:08,640 --> 00:04:13,840
Four requirements are listed, and in this case&nbsp;
we should configure one ACL for each requirement.&nbsp;&nbsp;

36
00:04:15,280 --> 00:04:21,440
To get practice with both numbered and named&nbsp;
ACLs, we will configure numbered ACLs on R1 and&nbsp;&nbsp;

37
00:04:21,440 --> 00:04:29,120
named ACLs on R2. As I said in the lecture video,&nbsp;
ACL configuration can be quite flexible. So,&nbsp;&nbsp;

38
00:04:29,120 --> 00:04:33,920
your configurations don’t have to be exactly&nbsp;
the same as mine. But here’s my solution.

39
00:04:35,680 --> 00:04:45,120
The first two requirements are about restricting&nbsp;
access to 192.168.1.0/24 and 2.0/24. Standard ACLs&nbsp;&nbsp;

40
00:04:45,120 --> 00:04:50,560
should be configured as close to the destination&nbsp;
as possible, so we should configure these ACLs on&nbsp;&nbsp;

41
00:04:50,560 --> 00:05:01,840
R2. So let’s return to R2 and configure that first&nbsp;
one. Only PC1 and PC3 can access 192.168.1.0/24.&nbsp;&nbsp;

42
00:05:01,840 --> 00:05:08,480
So, I can make two permit entries, one each&nbsp;
for PC1 and PC3, and then a deny any entry.&nbsp;&nbsp;

43
00:05:09,440 --> 00:05:16,960
The command to enter standard named ACL config&nbsp;
mode is IP ACCESS-LIST STANDARD, and I’ll name it&nbsp;&nbsp;

44
00:05:17,547 --> 00:05:34,880
TO_192.168.1.0/24. Now I’ll permit PC1 . PERMIT&nbsp;
172.16.1.1. And same for PC3. PERMIT 172.16.2.1.&nbsp;&nbsp;

45
00:05:36,080 --> 00:05:41,520
So, PC1 and PC3 are both permitted, and all&nbsp;
other traffic will be denied because of the&nbsp;&nbsp;

46
00:05:41,520 --> 00:05:48,160
‘implicit deny’ at the end of all ACLs. However,&nbsp;
a good practice is to put a DENY ANY statement&nbsp;&nbsp;

47
00:05:48,160 --> 00:05:53,440
at the end anyway, just to make it clear. It’s&nbsp;
not necessary, but it’s something I like to do.

48
00:05:55,760 --> 00:06:00,960
Okay, so the ACL has been created, but it’s not&nbsp;
doing anything yet. We still need to apply it to&nbsp;&nbsp;

49
00:06:00,960 --> 00:06:10,000
an interface. We want to restrict traffic entering&nbsp;
192.168.1.0/24, so I’ll apply it outbound on G0/0.&nbsp;&nbsp;

50
00:06:11,440 --> 00:06:24,320
INTERFACE G0/0. IP ACCESS-GROUP TO_192.168.1.0/24&nbsp;
OUT. Remember that the command to apply an ACL&nbsp;&nbsp;

51
00:06:24,320 --> 00:06:30,640
to an interface uses ACCESS-GROUP, not&nbsp;
ACCESS-LIST. Okay, let’s test if it’s&nbsp;&nbsp;

52
00:06:30,640 --> 00:06:36,320
working. For the sake of time in this video I&nbsp;
won’t test every single requirement totally,&nbsp;&nbsp;

53
00:06:36,320 --> 00:06:41,520
but I still want to demonstrate a little.&nbsp;
So, I’ll try a ping from PC1 to SRV1.

54
00:06:45,920 --> 00:06:54,320
PING 192.168.1.100. Because the ARP process&nbsp;
needs to finish the first ping or two might fail,&nbsp;&nbsp;

55
00:06:54,320 --> 00:06:58,080
but after that we can see that&nbsp;
PC1 is able to reach SRV1.&nbsp;&nbsp;

56
00:06:59,520 --> 00:07:05,200
How about PC2? It shouldn’t be able to&nbsp;
reach SRV1. Let’s try a ping to SRV1.&nbsp;&nbsp;

57
00:07:07,440 --> 00:07:17,440
PING 192.168.1.100. So, 203.0.113.2, which&nbsp;
is R2, tells us that SRV1 is unreachable.&nbsp;&nbsp;

58
00:07:18,320 --> 00:07:24,800
PC2 has been blocked from accessing SRV1.&nbsp;
If we test the same from PC3 and PC4,&nbsp;&nbsp;

59
00:07:24,800 --> 00:07:31,040
we’d find that PC3 can reach SRV1 but PC4 can’t.&nbsp;
Now let’s move on to the next requirement.

60
00:07:32,880 --> 00:07:40,080
Hosts in 172.16.2.0/24&nbsp;
can’t access 192.168.2.0/24.&nbsp;&nbsp;

61
00:07:40,720 --> 00:07:46,800
Again let’s configure an ACL&nbsp;
on R2. IP ACCESS-LIST STANDARD,&nbsp;&nbsp;

62
00:07:47,600 --> 00:08:02,640
and I’ll name it TO_192.168.2.0/24. So, let’s&nbsp;
deny that subnet. DENY 172.16.2.0 0.0.0.255.&nbsp;&nbsp;

63
00:08:04,000 --> 00:08:09,760
However we don’t want to restrict any other&nbsp;
traffic, so next let’s use a PERMIT ANY entry&nbsp;&nbsp;

64
00:08:09,760 --> 00:08:17,600
to allow all other traffic. And finally, let’s&nbsp;
apply it to the interface. INTERFACE G0/1.&nbsp;&nbsp;

65
00:08:19,280 --> 00:08:30,400
IP ACCESS-GROUP TO_192.168.2.0/24 OUT. Why this&nbsp;
interface? Again, because standard ACLs should be&nbsp;&nbsp;

66
00:08:30,400 --> 00:08:35,200
applied as close to the destination as possible,&nbsp;
and we are trying to control traffic destined&nbsp;&nbsp;

67
00:08:35,200 --> 00:08:44,800
for the 192.168.2.0/24 network. Now I’ll quickly&nbsp;
test this ACL, first with a ping from PC1 to SRV2.

68
00:08:46,160 --> 00:08:54,080
PC1 should be able to reach SRV2,&nbsp;
let’s see. PING 192.168.2.100. Again,&nbsp;&nbsp;

69
00:08:54,080 --> 00:09:00,000
a ping or two might be lost until the ARP process&nbsp;
finishes, but then PC1 will be able to ping SRV2.&nbsp;&nbsp;

70
00:09:01,840 --> 00:09:12,080
But if we try from PC3, the ping should&nbsp;
fail. Let’s see. PING 192.168.2.100.&nbsp;&nbsp;

71
00:09:14,000 --> 00:09:17,440
We get that same message,&nbsp;
destination host unreachable.&nbsp;&nbsp;

72
00:09:18,400 --> 00:09:23,360
Now, I’ll return to R2 and let’s take a look at&nbsp;
something I didn’t show in the lecture video.&nbsp;&nbsp;

73
00:09:24,880 --> 00:09:31,520
DO SHOW ACCESS-LISTS. Here you can see&nbsp;
each ACL, but you can also see how many&nbsp;&nbsp;

74
00:09:31,520 --> 00:09:36,560
packets matched each entry of each ACL,&nbsp;
which can be very useful information.

75
00:09:39,120 --> 00:09:45,760
Okay, finally we have to use ACLs&nbsp;
on R1 to stop the 172.16.1.0/24&nbsp;&nbsp;

76
00:09:45,760 --> 00:09:50,800
and 2.0/24 subnets from&nbsp;
communicating. So, let’s go to R1.&nbsp;&nbsp;

77
00:09:53,120 --> 00:09:57,520
I’ll configure the two ACLs first and then&nbsp;
apply them to the appropriate interfaces.&nbsp;&nbsp;

78
00:09:59,360 --> 00:10:03,840
First up, I’ll configure&nbsp;
ACL 1 to deny 172.16.1.0/24&nbsp;&nbsp;

79
00:10:04,880 --> 00:10:11,280
but permit all other traffic. Remember, although&nbsp;
named ACLs use the command IP ACCESS-LIST,&nbsp;&nbsp;

80
00:10:11,920 --> 00:10:23,040
numbered ACLs just use ACCESS-LIST. So,&nbsp;
ACCESS-LIST 1 DENY 172.16.1.0 0.0.0.255.&nbsp;&nbsp;

81
00:10:24,560 --> 00:10:32,080
Then I’ll permit all other traffic.&nbsp;
ACCESS-LIST 1 PERMIT ANY. That’s it for ACL1.&nbsp;&nbsp;

82
00:10:32,880 --> 00:10:41,200
Now I’ll just use the up arrow and edit this&nbsp;
to ACL 2 and make it deny 172.16.2.0/24.&nbsp;&nbsp;

83
00:10:43,280 --> 00:10:50,320
Then do the same for the PERMIT ANY. And&nbsp;
now I’ll check. DO SHOW ACCESS-LISTS.&nbsp;&nbsp;

84
00:10:52,000 --> 00:11:02,720
Okay, ACL1 denies 172.16.1.0/24 but permits all&nbsp;
other traffic, and ACL2 denies 172.16.2.0/24&nbsp;&nbsp;

85
00:11:02,720 --> 00:11:10,720
but permits all other traffic. Now let’s&nbsp;
apply them, ACL1 to G0/1 and ACL2 to G0/0.&nbsp;&nbsp;

86
00:11:12,240 --> 00:11:23,013
INTERFACE G0/1. IP ACCESS-GROUP 1 OUT.&nbsp;
That restricts traffic from 172.16.1.0/24&nbsp;&nbsp;

87
00:11:23,013 --> 00:11:33,200
from accessing 2.0/24. And next, INTERFACE&nbsp;
G0/0. IP ACCESS-GROUP 2 OUT. That restricts&nbsp;&nbsp;

88
00:11:33,200 --> 00:11:44,320
traffic from 172.16.2.0/24 from accessing 1.0/24.&nbsp;
Finally, let’s test. I’ll ping from PC1 to PC3.&nbsp;&nbsp;

89
00:11:45,200 --> 00:11:51,440
Let me show you something new. Here&nbsp;
on PC1 I’ll use the command PING -T,&nbsp;&nbsp;

90
00:11:52,160 --> 00:12:00,000
followed by PC3’s IP address, 172.16.2.1. This&nbsp;
tells PC1 to ping forever, until we stop it.&nbsp;&nbsp;

91
00:12:00,960 --> 00:12:07,680
You can stop it with CTRL + C, but I’ll leave&nbsp;
it for now. Notice that PC1 can’t reach PC3.&nbsp;&nbsp;

92
00:12:08,720 --> 00:12:22,000
Now I’ll do the same from PC3 to PC1. PING&nbsp;
-T 172.16.1.1. Again, PC3 can’t reach PC1.&nbsp;&nbsp;

93
00:12:23,360 --> 00:12:26,960
Now I’ll go back on R1,&nbsp;
and let’s check those ACLs.&nbsp;&nbsp;

94
00:12:29,040 --> 00:12:36,000
DO SHOW ACCESS-LISTS. Notice how many matches&nbsp;
there are for the deny entries, because all of&nbsp;&nbsp;

95
00:12:36,000 --> 00:12:43,040
those pings between PC1 and PC3 are being blocked.&nbsp;
If I use the up arrow to repeat the command,&nbsp;&nbsp;

96
00:12:43,040 --> 00:12:49,840
you can see the count keeps going up. Okay, in&nbsp;
this video we did some basic OSPF configurations&nbsp;&nbsp;

97
00:12:49,840 --> 00:12:55,520
to allow full connectivity in the network, and&nbsp;
then used standard ACLs to restrict specific&nbsp;&nbsp;

98
00:12:55,520 --> 00:13:02,000
traffic. That’s all for this lab. Now let’s&nbsp;
take a look at a lab in Boson NetSim for CCNA.

99
00:13:04,720 --> 00:13:10,960
Okay, here's today's Boson NetSim lab preview.&nbsp;
Now, NetSim for CCNA actually has quite a few&nbsp;&nbsp;

100
00:13:11,600 --> 00:13:19,600
labs for ACLs. Here in the security fundamentals&nbsp;
section of NetSim for CCNA I counted 20 labs for&nbsp;&nbsp;

101
00:13:19,600 --> 00:13:25,840
ACls. That's right, 20, 2 0. So, if you're&nbsp;
getting ready for the CCNA exam and want to&nbsp;&nbsp;

102
00:13:25,840 --> 00:13:32,160
practice labbing ACLs, you gotta get NetSim.&nbsp;
If you complete all of these practice labs&nbsp;&nbsp;

103
00:13:32,160 --> 00:13:37,760
in NetSim for ACLs, you're set for the CCNA exam,&nbsp;
you don't need to know anything more about ACLs.&nbsp;&nbsp;

104
00:13:38,560 --> 00:13:44,960
Okay, so the one I've chosen to show you&nbsp;
today is ACL practice lab 2: standard ACLs.&nbsp;&nbsp;

105
00:13:46,400 --> 00:13:50,720
So, the objective is 'practice configuring&nbsp;
standard ACLs on Cisco routers'.&nbsp;&nbsp;

106
00:13:50,720 --> 00:13:58,160
Pretty simple. Here's the topology,&nbsp;
Router1 with Switch1 and PC1 in VLAN1.&nbsp;&nbsp;

107
00:13:58,720 --> 00:14:06,880
And then Router2 with Switch2 and 3, PC2 and PC3,&nbsp;
in VLAN2 and VLAN3. And here are the commands you&nbsp;&nbsp;

108
00:14:06,880 --> 00:14:12,720
need to know. So in this lab we are configuring&nbsp;
standard numbered ACLs, with this command.&nbsp;&nbsp;

109
00:14:14,960 --> 00:14:20,080
Okay, here are the IP addresses on each device.&nbsp;
Each of the routers has a loopback interface,&nbsp;&nbsp;

110
00:14:21,120 --> 00:14:24,240
and Router2 is using router&nbsp;
on a stick. You can see the&nbsp;&nbsp;

111
00:14:24,960 --> 00:14:29,840
subinterfaces here for interVLAN&nbsp;
routing between VLAN2 and VLAN3.&nbsp;&nbsp;

112
00:14:33,920 --> 00:14:40,960
Okay, here are the lab tasks. Task 1, I think&nbsp;
task 1 is the only task, yes it is. Practice&nbsp;&nbsp;

113
00:14:40,960 --> 00:14:45,920
configuring standard ACLs. Okay, so you&nbsp;
can read this little introduction here.&nbsp;&nbsp;

114
00:14:46,480 --> 00:14:52,640
Just notice the passwords are configured as&nbsp;
Boson. Okay, so from each PC verify that you&nbsp;&nbsp;

115
00:14:52,640 --> 00:14:56,800
can ping the loopback0 interface&nbsp;
addresses of Router1 and Router2.&nbsp;&nbsp;

116
00:14:57,680 --> 00:15:02,240
So, if you look at these log messages here you&nbsp;
can see that OSPF is configured on the routers,&nbsp;&nbsp;

117
00:15:03,840 --> 00:15:09,120
so hopefully these PCs can ping&nbsp;
those interfaces. First, on PC1.&nbsp;&nbsp;

118
00:15:11,360 --> 00:15:18,400
Here's Router1's loopback, okay it works. I&nbsp;
hit, this is control-c to cancel that ping.&nbsp;&nbsp;

119
00:15:21,680 --> 00:15:26,320
And Router2's loopback, that works. Next, PC2.&nbsp;&nbsp;

120
00:15:30,560 --> 00:15:32,240
Okay, looks good.&nbsp;&nbsp;

121
00:15:36,320 --> 00:15:40,160
And that works as well. And finally on PC3.&nbsp;&nbsp;

122
00:15:45,440 --> 00:15:49,120
Okay, and last, Router2's loopback.&nbsp;&nbsp;

123
00:15:51,200 --> 00:15:59,600
That works as well. Okay, from each PC verify&nbsp;
that you can ping every other PC in the topology.&nbsp;&nbsp;

124
00:16:00,880 --> 00:16:04,720
Okay, I'm just for the sake of time I'm&nbsp;
not going to do that. Let me just check&nbsp;&nbsp;

125
00:16:04,720 --> 00:16:18,000
the routes here on the routers. So, Router1 has&nbsp;
routes to 10.0.2.0, which is VLAN2 and 10.0.3.0,&nbsp;&nbsp;

126
00:16:19,040 --> 00:16:26,240
which is VLAN3. And also, VLAN1 is directly&nbsp;
connected. Let's check the routes on Router2.&nbsp;&nbsp;

127
00:16:29,840 --> 00:16:37,840
SHOW IP ROUTE. And it learned, from OSPF, a route&nbsp;
to VLAN1, and it has a route to VLAN2 and VLAN3.&nbsp;&nbsp;

128
00:16:39,680 --> 00:16:46,960
Okay, next step 3. From each PC, verify that you&nbsp;
can Telnet to Router1's loopback0 interface. Okay,&nbsp;&nbsp;

129
00:16:46,960 --> 00:16:50,320
Telnet is something we haven't&nbsp;
looked at yet, but it's a way of&nbsp;&nbsp;

130
00:16:50,880 --> 00:16:55,360
connecting to a device, like a router&nbsp;
or switch, to configure it in the CLI.&nbsp;&nbsp;

131
00:16:57,440 --> 00:17:03,840
So, Telnet to Router1, and it works.&nbsp;
So now you can see I'm in PC1,&nbsp;&nbsp;

132
00:17:05,040 --> 00:17:11,280
but I've connected to Router1 and I can configure&nbsp;
it just like I was connected to the console of&nbsp;&nbsp;

133
00:17:11,280 --> 00:17:20,000
Router1. But I'm going to exit out of there. Okay,&nbsp;
on PC2 I'll try the same thing. TELNET 1.1.1.1.&nbsp;&nbsp;

134
00:17:22,720 --> 00:17:28,560
Enter the password and I'm connected to Router1.&nbsp;
So, I will make a video about Telnet later in the&nbsp;&nbsp;

135
00:17:28,560 --> 00:17:34,960
course, so don't worry about it for now. Okay,&nbsp;
and PC3 let's see if we can connect to Router1.&nbsp;&nbsp;

136
00:17:38,640 --> 00:17:43,040
Okay, looks good. Alright,&nbsp;
and I'll exit out of there.&nbsp;&nbsp;

137
00:17:45,440 --> 00:17:51,280
Okay, so step 4. Create standard ACL1 and&nbsp;
configure it to deny traffic from VLAN2&nbsp;&nbsp;

138
00:17:52,960 --> 00:17:57,600
and VLAN3. All other traffic sources&nbsp;
from Router2 should be permitted.&nbsp;&nbsp;

139
00:17:58,160 --> 00:18:01,600
Use no more than 2 rules when configuring ACL1.&nbsp;&nbsp;

140
00:18:03,680 --> 00:18:10,320
Okay, ACL1, let me see where I have to apply&nbsp;
it. Apply standard ACL1 to the correct interface&nbsp;&nbsp;

141
00:18:10,960 --> 00:18:17,520
and in a direction that will prevent traffic from&nbsp;
VLAN2 and VLAN3 from accessing any of the networks&nbsp;&nbsp;

142
00:18:17,520 --> 00:18:27,840
on Router1. Okay, so let's think about that.&nbsp;
So, on Router1 we want to prevent PC2 and PC3&nbsp;&nbsp;

143
00:18:28,560 --> 00:18:34,400
from connecting to any of these networks.&nbsp;
Either VLAN1 here or the loopback interface&nbsp;&nbsp;

144
00:18:34,400 --> 00:18:42,000
on Router1. So I think we should configure the ACL&nbsp;
on Router1 and apply it inbound on this interface,&nbsp;&nbsp;

145
00:18:42,000 --> 00:18:48,240
so when traffic tries to come to Router1 from&nbsp;
Router2, from these PCs, it will be blocked.&nbsp;&nbsp;

146
00:18:53,520 --> 00:19:06,320
Okay, so, deny traffic from VLAN2 and VLAN3. So&nbsp;
let's configure that. CONF T. ACCESS-LIST 1 DENY&nbsp;&nbsp;

147
00:19:07,200 --> 00:19:18,640
10.10.2.0. And for the wildcard mask I'm going to&nbsp;
use a wildcard mask that includes VLAN2 and VLAN3,&nbsp;&nbsp;

148
00:19:19,680 --> 00:19:31,519
0.0.1.255. And I hope I'm correct about that.&nbsp;
So, this should cover 10.10.2.0 and 10.10.3.0/24.&nbsp;&nbsp;

149
00:19:34,080 --> 00:19:37,760
And then I will create a&nbsp;
permit statement. ACCESS-LIST 1&nbsp;&nbsp;

150
00:19:38,480 --> 00:19:44,480
PERMIT ANY. Because it only says to block traffic&nbsp;
from VLAN2 and VLAN3, it doesn't say anything&nbsp;&nbsp;

151
00:19:44,480 --> 00:19:52,880
about other traffic, so we should permit it. Okay,&nbsp;
apply standard ACL1 to the correct interface and&nbsp;&nbsp;

152
00:19:52,880 --> 00:19:59,280
in a direction that will prevent traffic...okay,&nbsp;
so I will apply that to...what was that interface?&nbsp;&nbsp;

153
00:19:59,280 --> 00:20:11,840
It is this one here, fastethernet0/0, is the&nbsp;
one connected to Router2. IP ACCESS-GROUP 1 IN.&nbsp;&nbsp;

154
00:20:16,240 --> 00:20:22,400
Okay, and then we will try to telnet&nbsp;
and ping Router1's loopback0 interface.&nbsp;&nbsp;

155
00:20:22,960 --> 00:20:30,960
So from PC1 both should work. Okay, so that&nbsp;
works. I connected to Router1. And I'll ping it,&nbsp;&nbsp;

156
00:20:33,600 --> 00:20:37,360
and that works as well. Now from PC2 and PC3,&nbsp;&nbsp;

157
00:20:37,360 --> 00:20:40,640
if our ACL is configured&nbsp;
correctly, this should not work.&nbsp;&nbsp;

158
00:20:44,880 --> 00:20:48,320
Yes, so that didn't work. It says trying 1.1.1.1,&nbsp;&nbsp;

159
00:20:48,320 --> 00:20:52,000
but then it just returned us to the command&nbsp;
prompt, so that didn't work. How about a ping?&nbsp;&nbsp;

160
00:20:55,760 --> 00:21:07,360
Destination host unreachable, okay. Next&nbsp;
I'll try from PC3. TELNET 1.1.1.1. Okay,&nbsp;&nbsp;

161
00:21:07,360 --> 00:21:13,760
same thing, doesn't work. PING 1.1.1.1.&nbsp;
Destination host unreachable, perfect.&nbsp;&nbsp;

162
00:21:15,680 --> 00:21:21,760
Okay next, step 8, create standard ACL 2 and&nbsp;
configure it to deny traffic from VLAN 1.&nbsp;&nbsp;

163
00:21:22,800 --> 00:21:26,560
All other traffic sources should be&nbsp;
permitted. Use no more than 2 rules,&nbsp;&nbsp;

164
00:21:26,560 --> 00:21:32,720
okay. And apply standard ACL 2 to an interface and&nbsp;
in a direction that will prevent remote networks&nbsp;&nbsp;

165
00:21:33,520 --> 00:21:36,160
from pretending to reside on VLAN 1.&nbsp;&nbsp;

166
00:21:39,920 --> 00:21:46,320
Okay, prevent remote networks from pretending to&nbsp;
reside on VLAN 1, let me briefly explain that.&nbsp;&nbsp;

167
00:21:49,280 --> 00:21:56,320
So let's say there is a PC here in VLAN 2&nbsp;
that modifies its source IP address, or it&nbsp;&nbsp;

168
00:21:56,320 --> 00:21:59,680
doesn't have to be here, it could be connected&nbsp;
somewhere else, maybe out here on the Internet,&nbsp;&nbsp;

169
00:21:59,680 --> 00:22:04,880
connected to Router2. And it wants to&nbsp;
access something in VLAN1, let's say PC1.&nbsp;&nbsp;

170
00:22:05,680 --> 00:22:09,120
So it sends a ping to Router1, and the source&nbsp;&nbsp;

171
00:22:09,680 --> 00:22:18,080
is in VLAN 1, and the destination is in VLAN&nbsp;
1, it forwards it to PC1 like normal. However,&nbsp;&nbsp;

172
00:22:18,080 --> 00:22:24,960
if we place an ACL outbound on this interface,&nbsp;
I believe its FastEthernet0/1, ah sorry 1/0,&nbsp;&nbsp;

173
00:22:27,680 --> 00:22:33,920
blocking all traffic with a source in VLAN 1&nbsp;
from exiting that interface it will prevent that.&nbsp;&nbsp;

174
00:22:35,200 --> 00:22:38,640
So, traffic from VLAN 1&nbsp;
will still be able to exit.&nbsp;&nbsp;

175
00:22:39,520 --> 00:22:45,120
But because we applied it outbound on this&nbsp;
interface, that traffic pretending to be in VLAN&nbsp;&nbsp;

176
00:22:45,120 --> 00:22:50,080
1 won't be able to enter. So, this is a security&nbsp;
measure, I will talk more about security later in&nbsp;&nbsp;

177
00:22:50,080 --> 00:22:53,840
the course, so don't worry about it if you don't&nbsp;
understand it perfectly right at the moment.&nbsp;&nbsp;

178
00:22:58,480 --> 00:23:01,120
So, let's configure that here on Router1.&nbsp;&nbsp;

179
00:23:05,280 --> 00:23:21,360
ACCESS-LIST 2 DENY 10.10.1.0 /24. And permit other&nbsp;
traffic. Oops, I forgot this is not a named ACL.&nbsp;&nbsp;

180
00:23:21,360 --> 00:23:28,800
ACCESS-LIST 2 PERMIT ANY. And then I will apply it&nbsp;
to that interface outbound here, FastEthernet1/0.&nbsp;&nbsp;

181
00:23:32,080 --> 00:23:35,840
IP ACCESS-GROUP 2 OUT.&nbsp;&nbsp;

182
00:23:39,440 --> 00:23:43,360
Okay, display and examine the rules&nbsp;
you created for both ACL 1 and ACL 2.&nbsp;&nbsp;

183
00:23:44,640 --> 00:23:50,960
So I'll do that with DO SHOW&nbsp;
ACCESS-LISTS. And there they are.&nbsp;&nbsp;

184
00:23:52,720 --> 00:23:56,640
As you can see, we've already got some&nbsp;
matches for ACL 1 when we tested that&nbsp;&nbsp;

185
00:23:57,440 --> 00:24:03,120
telnet and ping. Okay, based on what you&nbsp;
have configured so far, apply either ACL&nbsp;&nbsp;

186
00:24:03,120 --> 00:24:09,840
1 or ACL 2 to an interface and in a direction&nbsp;
that will prevent hosts connected to Router 1&nbsp;&nbsp;

187
00:24:10,480 --> 00:24:17,840
from pretending to be hosts on VLAN2 or VLAN3.&nbsp;
Okay, so that is the same principle as before.&nbsp;&nbsp;

188
00:24:19,200 --> 00:24:25,520
So, ACL 1 matches these source&nbsp;
addresses. So because they are the&nbsp;&nbsp;

189
00:24:26,080 --> 00:24:32,480
source, all the traffic should be entering this&nbsp;
interface. No traffic with that source should be&nbsp;&nbsp;

190
00:24:32,480 --> 00:24:39,413
exiting this interface. So, I'll apply the ACL&nbsp;
outbound on this interface, FastEthernet0/0.&nbsp;&nbsp;

191
00:24:41,120 --> 00:24:49,600
Yes, that is correct. Okay, INTERFACE&nbsp;
F0/0. IP ACCESS-GROUP 1 OUT.&nbsp;&nbsp;

192
00:24:52,720 --> 00:24:55,440
Okay, and that is all for the lab. So,&nbsp;&nbsp;

193
00:24:56,000 --> 00:25:01,440
I will use the grade lab function, click on&nbsp;
this icon, and let's see if we got it correct.&nbsp;&nbsp;

194
00:25:03,920 --> 00:25:08,160
Okay, that is correct. You completed&nbsp;
the lab successfully. So you can check&nbsp;&nbsp;

195
00:25:08,160 --> 00:25:13,840
the configuration of each device, nothing is&nbsp;
highlighted so that means I did it correctly.&nbsp;&nbsp;

196
00:25:16,320 --> 00:25:21,680
Okay, so there is a lab from Boson NetSim.&nbsp;
Fairly simple, but also some challenging&nbsp;&nbsp;

197
00:25:21,680 --> 00:25:26,480
parts in it. So that's the thing I like about&nbsp;
NetSim, some of the labs are pretty simple,&nbsp;&nbsp;

198
00:25:26,480 --> 00:25:31,920
some of them are more complex, and some&nbsp;
of them are a mix of both. There are,&nbsp;&nbsp;

199
00:25:31,920 --> 00:25:37,280
as I said before, 20 labs for ACLs here, so&nbsp;
you get quite a variety of practice for access&nbsp;&nbsp;

200
00:25:37,280 --> 00:25:43,040
control lists. If you want to get Boson NetSim,&nbsp;
please follow the link in the video description.

201
00:25:45,280 --> 00:25:49,520
Before finishing today’s video I want&nbsp;
to thank my JCNP-level channel members.&nbsp;&nbsp;

202
00:25:50,240 --> 00:25:56,640
To join, please click the ‘Join’ button under&nbsp;
the video. Thank you to Junhong, OJ, Magrathea,&nbsp;&nbsp;

203
00:25:56,640 --> 00:26:04,320
TheGunguy, l33america, Njabulo, Benjamin,&nbsp;
Tshepiso, Justin, Prakaash, Nasir, Erlison,&nbsp;&nbsp;

204
00:26:04,320 --> 00:26:12,320
Apogee, Marko, Flodo, Daming, Joshua, Jhilmar,&nbsp;
Ed, Value, John, Funnydart, Scott, Hassan, Marek,&nbsp;&nbsp;

205
00:26:12,320 --> 00:26:18,560
Velvijaykum, C Mohd, Mark, Yousif, Sidi, Boson&nbsp;
Software, Devin, Lito, Yonatan, and Vance.&nbsp;&nbsp;

206
00:26:19,440 --> 00:26:23,840
Sorry if I pronounced your name incorrectly,&nbsp;
but thank you so much for your support.&nbsp;&nbsp;

207
00:26:24,480 --> 00:26:30,800
This is the list of JCNP-level members at the&nbsp;
time of recording by the way, November 23rd 2020,&nbsp;&nbsp;

208
00:26:31,600 --> 00:26:37,840
if you signed up recently and your name isn’t&nbsp;
on here don’t worry, you’ll be in future videos.

209
00:26:39,040 --> 00:26:42,080
Thank you for watching. Please&nbsp;
subscribe to the channel,&nbsp;&nbsp;

210
00:26:42,080 --> 00:26:46,800
like the video, leave a comment, and share the&nbsp;
video with anyone else studying for the CCNA.&nbsp;&nbsp;

211
00:26:47,920 --> 00:26:53,520
If you want to leave a tip, check the links in the&nbsp;
description. I'm also a Brave verified publisher&nbsp;&nbsp;

212
00:26:53,520 --> 00:27:00,080
and accept BAT, or Basic Attention Token, tips&nbsp;
via the Brave browser. That's all for now.
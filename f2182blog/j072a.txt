1
00:00:01,100 --> 00:00:03,520
Welcome to Jeremy’s IT Lab.

2
00:00:03,520 --> 00:00:06,709
This is a free, complete course for the CCNA.

3
00:00:06,709 --> 00:00:10,220
If you like these videos, please subscribe
to follow along with the series.

4
00:00:10,220 --> 00:00:14,670
Also, please like and leave a comment, and
share the video to help spread this free series

5
00:00:14,670 --> 00:00:15,670
of videos.

6
00:00:15,670 --> 00:00:17,900
Thanks for your help.

7
00:00:17,900 --> 00:00:21,620
In this video we will cover DNS, Domain Name
System.

8
00:00:21,620 --> 00:00:25,010
DNS is a protocol that you certainly make
use of on a daily basis.

9
00:00:25,010 --> 00:00:31,250
DNS is all about making it easier for us humans
to access different resources over networks

10
00:00:31,250 --> 00:00:33,520
such as the Internet.

11
00:00:33,520 --> 00:00:38,979
For example it allows us to use the domain
name ‘youtube.com’ to access YouTube instead

12
00:00:38,979 --> 00:00:42,249
of having to enter an IP address.

13
00:00:42,249 --> 00:00:47,300
Names like ‘youtube.com’ or ‘google.com’
are much easier for us to remember than IP

14
00:00:47,300 --> 00:00:48,300
addresses.

15
00:00:48,300 --> 00:00:55,589
DNS is part of exam topic 4.3, which says
you must be able to explain the role of DHCP

16
00:00:55,589 --> 00:00:57,350
and DNS within the network.

17
00:00:57,350 --> 00:01:02,299
You don’t need to know DNS in depth for
the CCNA, you don’t need to know the detailed

18
00:01:02,299 --> 00:01:06,850
operations of DNS, just understand its basic
purpose.

19
00:01:06,850 --> 00:01:10,700
The information I give you in this video should
be more than enough for you to answer any

20
00:01:10,700 --> 00:01:13,899
DNS-related questions on the CCNA exam.

21
00:01:13,899 --> 00:01:17,880
Here’s what we’ll cover in this video.

22
00:01:17,880 --> 00:01:19,759
First up, the purpose of DNS.

23
00:01:19,759 --> 00:01:23,960
I already mentioned it, but I’ll explain
a little more.

24
00:01:23,960 --> 00:01:28,020
Then the basic functions of DNS, a quick overview
of how it works.

25
00:01:28,020 --> 00:01:32,969
As I said before, I won’t get into unnecessary
details that you don’t need for the CCNA.

26
00:01:32,969 --> 00:01:38,250
Finally, I’ll show how to configure DNS
in Cisco IOS.

27
00:01:38,250 --> 00:01:42,420
Watch until the end of the video for a bonus
practice question from Boson Software’s

28
00:01:42,420 --> 00:01:45,070
ExSim for CCNA.

29
00:01:45,070 --> 00:01:50,179
ExSim practice exams simulate the style and
difficulty of the real CCNA better than any

30
00:01:50,179 --> 00:01:55,149
other practice exams, and from personal experience
I can say they are a great tool to prepare

31
00:01:55,149 --> 00:01:57,619
for the CCNA exam.

32
00:01:57,619 --> 00:02:01,899
If you want to get ExSim, follow the link
in the video description.

33
00:02:01,899 --> 00:02:05,460
Let’s review the purpose of DNS.

34
00:02:05,460 --> 00:02:13,080
DNS is used to resolve human-readable names,
such as google.com, to IP addresses.

35
00:02:13,080 --> 00:02:15,260
Resolve in this case means convert.

36
00:02:15,260 --> 00:02:20,880
You enter a name, such as google.com, and
it converts it to an IP address.

37
00:02:20,880 --> 00:02:26,790
Machines such as PCs don’t use names, they
use addresses such as the IPv4 and IPv6 addresses

38
00:02:26,790 --> 00:02:29,260
we’ve covered in the course.

39
00:02:29,260 --> 00:02:33,680
However names are much easier for us humans
to use and remember than IP addresses.

40
00:02:33,680 --> 00:02:37,400
IP addresses are human-readable too, of course.

41
00:02:37,400 --> 00:02:41,670
IPv4 addresses especially aren’t too long
when written in dotted decimal, however there’s

42
00:02:41,670 --> 00:02:44,420
no doubt that names are much easier to remember.

43
00:02:44,420 --> 00:02:47,660
What’s the IP address of youtube.com?

44
00:02:47,660 --> 00:02:50,480
Chances are you have no idea.

45
00:02:50,480 --> 00:02:56,210
Thanks to DNS, you can access youtube.com
without having to remember the IP address.

46
00:02:56,210 --> 00:03:00,880
When you type ‘youtube.com’ into a web
browser, your device will ask a DNS server

47
00:03:00,880 --> 00:03:03,230
for the IP address of youtube.com.

48
00:03:03,230 --> 00:03:09,010
The DNS server, or servers, your device uses
can be manually configured or learned via

49
00:03:09,010 --> 00:03:10,340
DHCP.

50
00:03:10,340 --> 00:03:16,760
DHCP is the dynamic host configuration protocol,
that will be the topic of a future video.

51
00:03:16,760 --> 00:03:20,400
Okay, that’s the basic outline of DNS.

52
00:03:20,400 --> 00:03:23,180
Now I’ll use this network to demonstrate
how it works.

53
00:03:23,180 --> 00:03:27,000
Three PCs are connected to R1 via SW1.

54
00:03:27,000 --> 00:03:32,200
R1 is connected to the Internet, and somewhere
across the Internet is Google’s DNS server

55
00:03:32,200 --> 00:03:33,930
with the IP address 8.8.8.8.

56
00:03:33,930 --> 00:03:41,150
So, let’s go on to PC1, a Windows PC, and
check out how DNS works.

57
00:03:41,150 --> 00:03:46,660
Here’s the CLI of PC1, the Windows command
prompt.

58
00:03:46,660 --> 00:03:51,400
I used the command IPCONFIG /ALL to display
various info for PC1.

59
00:03:51,400 --> 00:03:58,010
You should remember this command, ‘verify
IP parameters for client operating systems’

60
00:03:58,010 --> 00:04:00,200
is actually a CCNA exam topic.

61
00:04:00,200 --> 00:04:05,370
I’ll probably make a separate video to cover
that exam topic, but we’ll cover a few Windows

62
00:04:05,370 --> 00:04:06,840
commands in this video.

63
00:04:06,840 --> 00:04:10,890
So, here’s some of the information displayed.

64
00:04:10,890 --> 00:04:15,671
Note that there is also the command IPCONFIG
without the /ALL, but it doesn’t display

65
00:04:15,671 --> 00:04:21,010
what I want to show you, which is the DNS
server of 8.8.8.8 which I configured here

66
00:04:21,010 --> 00:04:23,350
on PC1.

67
00:04:23,350 --> 00:04:28,240
As I said in the previous slide, end hosts
will usually automatically learn which DNS

68
00:04:28,240 --> 00:04:31,790
server to use via the protocol DHCP.

69
00:04:31,790 --> 00:04:36,630
However we haven’t covered that yet in the
course, so I manually configured PC1 to use

70
00:04:36,630 --> 00:04:39,550
Google’s DNS server 8.8.8.8.

71
00:04:39,550 --> 00:04:43,110
Let’s see how DNS works.

72
00:04:43,110 --> 00:04:45,800
I used the command NSLOOKUP youtube.com.

73
00:04:45,800 --> 00:04:52,680
I briefly showed you the NSLOOKUP command
in the NTP video, it stands for ‘Name Server

74
00:04:52,680 --> 00:04:53,680
Lookup’.

75
00:04:53,680 --> 00:04:58,990
It tells the device to ask its DNS server
for the IP address of the specified name.

76
00:04:58,990 --> 00:05:03,389
As we saw before, PC1 is using Google’s
DNS server at 8.8.8.8.

77
00:05:03,389 --> 00:05:06,800
Here’s the answer from Google’s DNS server.

78
00:05:06,800 --> 00:05:16,900
Youtube.com’s IPv4 address is 172.217.25.110,
and its IPv6 address is displayed also.

79
00:05:16,900 --> 00:05:21,310
So I tried a ping, specifying the name instead
of IP address.

80
00:05:21,310 --> 00:05:26,310
The name ‘youtube.com’ is then converted
to an IP address, and PC1 is able to ping

81
00:05:26,310 --> 00:05:28,430
the IP address.

82
00:05:28,430 --> 00:05:32,710
Note that you don’t have to use the NSLOOKUP
command before sending the ping.

83
00:05:32,710 --> 00:05:37,710
If your device doesn’t know the correct
IP address it will automatically ask the server.

84
00:05:37,710 --> 00:05:41,140
I just used NSLOOKUP to demonstrate the command.

85
00:05:41,140 --> 00:05:43,180
Let me show you visually.

86
00:05:43,180 --> 00:05:49,220
To learn the IP address of youtube.com, PC1
sends a DNS query message to its configured

87
00:05:49,220 --> 00:05:51,660
DNS server, 8.8.8.8.

88
00:05:51,660 --> 00:05:58,440
Then the DNS server replies, telling PC1 that
the IP address is 172.217.25.110.

89
00:05:58,440 --> 00:06:03,690
What’s the role of R1 in this exchange?

90
00:06:03,690 --> 00:06:08,190
In this case, R1 isn’t acting as a DNS server
or client.

91
00:06:08,190 --> 00:06:09,990
It is simply forwarding packets.

92
00:06:09,990 --> 00:06:13,530
So, no DNS configuration is required on R1.

93
00:06:13,530 --> 00:06:15,550
That’s an important point.

94
00:06:15,550 --> 00:06:20,460
Often there’s simply no need to do any DNS
configuration on routers.

95
00:06:20,460 --> 00:06:23,920
They just need to perform their job of routing
network traffic.

96
00:06:23,920 --> 00:06:29,560
However, a Cisco router can act as a DNS server
and client, so I’ll show you how to configure

97
00:06:29,560 --> 00:06:33,260
that later in this video.

98
00:06:33,260 --> 00:06:37,450
I used Wireshark to capture the traffic from
that NSLOOKUP command.

99
00:06:37,450 --> 00:06:38,669
There are four messages.

100
00:06:38,669 --> 00:06:40,389
Here’s the first one.

101
00:06:40,389 --> 00:06:50,090
It’s from source 192.168.0.101, PC1, to
destination 8.8.8.8, Google’s DNS server.

102
00:06:50,090 --> 00:06:55,210
Under ‘info’ it says standard query, so
this is a standard DNS query message, a request

103
00:06:55,210 --> 00:06:57,169
to the server.

104
00:06:57,169 --> 00:06:59,830
Notice this part here, ‘A youtube.com’.

105
00:06:59,830 --> 00:07:03,360
I’ll tell you in a minute what that ‘A’
means.

106
00:07:03,360 --> 00:07:12,520
Here’s the next message, from Google’s
DNS server 8.8.8.8 to PC1, 192.168.0.101.

107
00:07:12,520 --> 00:07:16,040
Under ‘info’ it says standard query response.

108
00:07:16,040 --> 00:07:18,780
So this is a response to PC1’s query.

109
00:07:18,780 --> 00:07:26,590
And here it says A youtube.com A 172.217.25.110.

110
00:07:26,590 --> 00:07:28,730
Notice that it’s an IPv4 address.

111
00:07:28,730 --> 00:07:36,860
Now here’s the next message, again a standard
query from 192.168.0.101 to 8.8.8.8.

112
00:07:36,860 --> 00:07:42,830
This time it says AAAA, which we call quadruple
A, youtube.com.

113
00:07:42,830 --> 00:07:45,330
And here’s the standard query response.

114
00:07:45,330 --> 00:07:51,000
Quadruple A youtube.com, quadruple A, followed
by an IPv6 address.

115
00:07:51,000 --> 00:07:54,860
So, can you guess what ‘A’ and ‘quadruple
A’ stand for?

116
00:07:54,860 --> 00:08:00,270
DNS ‘A’ records are used to map names
to IPv4 addresses.

117
00:08:00,270 --> 00:08:05,889
In the first query message, PC1 asked the
DNS server for the A record of youtube.com,

118
00:08:05,889 --> 00:08:09,000
so the DNS server responded with an IPv4 address.

119
00:08:09,000 --> 00:08:15,280
DNS ‘quadruple A’ records are used to
map names to IPv6 addresses.

120
00:08:15,280 --> 00:08:21,510
In the second query message, PC1 asked the
DNS server for the quadruple A record of youtube.com,

121
00:08:21,510 --> 00:08:25,690
so the server responded with an IPv6 address.

122
00:08:25,690 --> 00:08:28,430
Now let’s briefly look inside of that first
query.

123
00:08:28,430 --> 00:08:31,770
Here’s Layer 4, which protocol is used?

124
00:08:31,770 --> 00:08:33,219
It’s UDP.

125
00:08:33,219 --> 00:08:40,039
Remember, DNS uses both TCP and UDP, so why
is UDP used here?

126
00:08:40,039 --> 00:08:43,129
Standard DNS queries and responses typically
use UDP.

127
00:08:43,129 --> 00:08:48,610
TCP is used for DNS messages greater than
512 bytes.

128
00:08:48,610 --> 00:08:52,660
In either case, UDP or TCP, the port number
is 53.

129
00:08:52,660 --> 00:08:58,300
You don’t have to know the details of when
TCP would be used, just remember that standard

130
00:08:58,300 --> 00:09:03,870
DNS queries and responses like these will
usually use UDP, and remember that number,

131
00:09:03,870 --> 00:09:05,809
512 bytes.

132
00:09:05,809 --> 00:09:11,379
If you’d like to know the details, try a
google search for ‘DNS TCP UDP’, you’ll

133
00:09:11,379 --> 00:09:13,639
find lots of great resources.

134
00:09:13,639 --> 00:09:21,199
Finally, down here is the UDP query itself,
asking for the A record of youtube.com.

135
00:09:21,199 --> 00:09:25,769
As I’ve said before, Wireshark is a very
useful tool not just for studying, but it

136
00:09:25,769 --> 00:09:29,490
also has many real-world on-the-job uses.

137
00:09:29,490 --> 00:09:33,569
If you have some time I recommend downloading
it and checking out some of the network traffic

138
00:09:33,569 --> 00:09:37,689
your computer is sending and receiving.

139
00:09:37,689 --> 00:09:41,180
Moving on, let me introduce the DNS cache.

140
00:09:41,180 --> 00:09:45,720
Devices will save the DNS server’s responses
to a local DNS cache.

141
00:09:45,720 --> 00:09:49,220
This means they don’t have to query the
server every single time they want to access

142
00:09:49,220 --> 00:09:51,529
a particular destination.

143
00:09:51,529 --> 00:09:54,269
This saves a lot of unnecessary network traffic.

144
00:09:54,269 --> 00:10:01,410
So, to view the DNS cache on a Windows PC
use the command IPCONFIG /DISPLAYDNS.

145
00:10:01,410 --> 00:10:05,630
Here’s the record for youtube.com.

146
00:10:05,630 --> 00:10:06,999
However look at the record type.

147
00:10:06,999 --> 00:10:12,740
It’s not A or quadruple A, it’s CNAME,
and it lists another domain name.

148
00:10:12,740 --> 00:10:18,689
CNAME, canonical name, is another kind of
DNS record that basically maps a name to another

149
00:10:18,689 --> 00:10:19,689
name.

150
00:10:19,689 --> 00:10:24,459
I looked in the DNS cache for that other domain
name, and here’s the A record with that

151
00:10:24,459 --> 00:10:29,019
same IPv4 address, 172.217.25.110.

152
00:10:29,019 --> 00:10:33,119
So, as you can see there are some complexities
to DNS.

153
00:10:33,119 --> 00:10:38,230
DNS is a very important part of the Internet
and is interesting to study, but once again

154
00:10:38,230 --> 00:10:41,420
for the CCNA you just need to know the basics.

155
00:10:41,420 --> 00:10:47,429
Here’s one more command in the Windows command
prompt, you can clear the DNS cache with the

156
00:10:47,429 --> 00:10:50,839
command IPCONFIG /FLUSHDNS.

157
00:10:50,839 --> 00:10:57,559
It says the DNS resolver cache was flushed,
and now when I use IPCONFIG /DISPLAYDNS, nothing

158
00:10:57,559 --> 00:10:59,220
is displayed.

159
00:10:59,220 --> 00:11:04,619
If I try to access youtube.com again, for
example, PC1 will have to send another DNS

160
00:11:04,619 --> 00:11:09,910
query to the DNS server to learn the IP address
again.

161
00:11:09,910 --> 00:11:14,290
Before moving on to R1, here’s one more
point about these PCs.

162
00:11:14,290 --> 00:11:19,490
In addition to a DNS cache, most devices have
a ‘hosts’ file which is simply a list

163
00:11:19,490 --> 00:11:22,459
of hosts and IP addresses.

164
00:11:22,459 --> 00:11:31,809
In Windows it’s in the C:\Windows\System32\drivers\etc
folder, and the name is simply ‘hosts’.

165
00:11:31,809 --> 00:11:35,190
Let’s see what’s in that file.

166
00:11:35,190 --> 00:11:36,730
In Windows it looks like this.

167
00:11:36,730 --> 00:11:43,060
By default there are no hosts listed, however
here on PC1 I added an entry for R1 simply

168
00:11:43,060 --> 00:11:47,079
by typing the IP address, a space, and then
the host name.

169
00:11:47,079 --> 00:11:52,999
I then returned to the command prompt and
entered PING R1, and PC1 was able to ping

170
00:11:52,999 --> 00:11:56,809
R1 because it had an entry in its hosts file.

171
00:11:56,809 --> 00:12:00,029
This isn’t DNS, it’s a simple alternative
to DNS.

172
00:12:00,029 --> 00:12:05,790
A long time ago before DNS was invented, host
files like this were used.

173
00:12:05,790 --> 00:12:09,760
In modern days a hosts file might be used
in a small network to list some hosts on the

174
00:12:09,760 --> 00:12:14,910
local network if necessary, however DNS is
a much better solution.

175
00:12:14,910 --> 00:12:20,259
Okay, so I hope that gave you a general understanding
of how DNS works.

176
00:12:20,259 --> 00:12:26,240
A client wants to access something using a
name, such as accessing a website like youtube.com.

177
00:12:26,240 --> 00:12:31,199
But in order to access the website, it needs
to know the IP address of the destination.

178
00:12:31,199 --> 00:12:35,769
To learn the IP address, the client sends
a query to a DNS server, which informs it

179
00:12:35,769 --> 00:12:38,339
of the IP address.

180
00:12:38,339 --> 00:12:43,660
Now let’s look at how to configure DNS in
Cisco IOS, using R1 as an example.

181
00:12:43,660 --> 00:12:49,779
Let me repeat, for hosts in a network to use
DNS, you don’t need to configure DNS on

182
00:12:49,779 --> 00:12:51,040
the routers.

183
00:12:51,040 --> 00:12:55,110
They will simply forward the DNS messages
like any other packets.

184
00:12:55,110 --> 00:13:01,439
However, the Cisco router itself can be configured
as a DNS server, although it’s rare.

185
00:13:01,439 --> 00:13:07,160
If an internal DNS server is used, usually
it’s a Windows or Linux server.

186
00:13:07,160 --> 00:13:12,699
By ‘internal’ I mean a DNS server in the
local network, not a public server like Google’s.

187
00:13:12,699 --> 00:13:18,509
Also, a Cisco router can be configured as
a DNS client, so you can execute PING and

188
00:13:18,509 --> 00:13:22,569
other commands using names instead of IP addresses.

189
00:13:22,569 --> 00:13:26,490
Here’s how to configure a router as a DNS
server.

190
00:13:26,490 --> 00:13:32,230
First, you should use the command IP DNS SERVER
from global config mode.

191
00:13:32,230 --> 00:13:34,040
This configures the router to act as a DNS
server.

192
00:13:34,040 --> 00:13:41,629
If a client sends a DNS query to R1, R1 will
respond if it has the requested record.

193
00:13:41,629 --> 00:13:46,230
However, for that to work R1 needs to have
some records.

194
00:13:46,230 --> 00:13:51,810
Use the IP HOST command, followed by the host
name and the IP address, to build a host table

195
00:13:51,810 --> 00:13:53,600
on R1.

196
00:13:53,600 --> 00:13:58,430
I configured entries for R1 itself, PC1, PC2,
and PC3.

197
00:13:58,430 --> 00:14:04,329
Next, it’s a good idea to configure an external
DNS server for R1 to use.

198
00:14:04,329 --> 00:14:10,069
R1 will query this server if it doesn’t
have a requested record in its own table.

199
00:14:10,069 --> 00:14:15,149
I configured R1 to use Google’s DNS server
at 8.8.8.8.

200
00:14:15,149 --> 00:14:18,690
I’ll demonstrate how this works in a minute.

201
00:14:18,690 --> 00:14:21,810
The final command is IP DOMAIN LOOKUP.

202
00:14:21,810 --> 00:14:24,860
This enables R1 to perform DNS queries.

203
00:14:24,860 --> 00:14:30,999
If this command isn’t enabled, R1 won’t
be able to query Google’s DNS server.

204
00:14:30,999 --> 00:14:37,100
However, this command is enabled by default,
so usually you won’t have to configure it.

205
00:14:37,100 --> 00:14:41,850
By the way, a lot of resources teach an old
version of the command, which is IP DOMAIN

206
00:14:41,850 --> 00:14:43,649
‘hyphen’ LOOKUP.

207
00:14:43,649 --> 00:14:48,949
This is the old version of the command, however
modern IOS versions still support it.

208
00:14:48,949 --> 00:14:52,529
You should probably know both versions, with
and without the hyphen.

209
00:14:52,529 --> 00:14:56,980
So, that’s how you configure a router to
be a DNS server.

210
00:14:56,980 --> 00:15:00,589
Now let me demonstrate how it works.

211
00:15:00,589 --> 00:15:03,839
So let’s say PC1 wants to ping PC2.

212
00:15:03,839 --> 00:15:09,440
By the way, I configured PC1 to use R1 as
its DNS server, instead of Google.

213
00:15:09,440 --> 00:15:16,279
So I issue the PING PC2 command on PC1, however
note that I used ‘hyphen n 1’ to send

214
00:15:16,279 --> 00:15:19,769
only a single ping, for the purpose of this
demonstration.

215
00:15:19,769 --> 00:15:26,189
PC1 doesn’t have an entry for PC2 in its
own host table, so it has to use DNS to learn

216
00:15:26,189 --> 00:15:29,180
the IP address of PC2.

217
00:15:29,180 --> 00:15:35,319
It sends a query to its DNS server R1, asking
‘What’s the IP address of PC2?’.

218
00:15:35,319 --> 00:15:42,100
R1 has an entry for PC2, I just configured
it in the last slide using the IP HOST command,

219
00:15:42,100 --> 00:15:45,370
so it replies to PC1’s query.

220
00:15:45,370 --> 00:15:52,940
Finally PC1 sends the ping to PC2, PC2 sends
a reply, and the process is over.

221
00:15:52,940 --> 00:15:59,670
Now PC1 has entry for PC2 in its DNS cache,
so if I issue the PING PC2 command again it

222
00:15:59,670 --> 00:16:06,320
won’t have to perform a DNS query, it already
knows PC2’s IP address.

223
00:16:06,320 --> 00:16:09,679
Okay I’ve added the YouTube server to the
diagram.

224
00:16:09,679 --> 00:16:14,540
This time, I issued the command PING YOUTUBE.COM
-N 1.

225
00:16:14,540 --> 00:16:17,499
So let me walk through that process again.

226
00:16:17,499 --> 00:16:22,689
Before PC1 can actually send the ping, it
has to know the IP address of youtube.com,

227
00:16:22,689 --> 00:16:25,800
so it sends a query to its DNS server, R1.

228
00:16:25,800 --> 00:16:30,299
However, R1 doesn’t have an entry for youtube.com.

229
00:16:30,299 --> 00:16:31,600
What does it do?

230
00:16:31,600 --> 00:16:39,310
Remember I used the IP NAME-SERVER 8.8.8.8
command on R1, so R1 can send queries to Google’s

231
00:16:39,310 --> 00:16:40,360
DNS server.

232
00:16:40,360 --> 00:16:44,369
That’s what it does, it sends a DNS query
to 8.8.8.8.

233
00:16:44,369 --> 00:16:50,430
Google’s server replies, telling R1 the
IP address of youtube.com.

234
00:16:50,430 --> 00:16:56,850
Now R1 is able to reply to PC1’s query,
telling it the IP address of youtube.com.

235
00:16:56,850 --> 00:17:01,799
Finally PC1 is able to send the ping to YouTube,
and YouTube sends the reply.

236
00:17:01,799 --> 00:17:06,899
Sorry for the messy diagram, but I hope that
helps you understand how this works.

237
00:17:06,899 --> 00:17:12,990
R1 acts as a DNS server for PC1, but if it
doesn’t have an entry for a record that

238
00:17:12,990 --> 00:17:20,839
PC1 requests, it acts as a DNS client and
asks Google’s DNS server for the record.

239
00:17:20,839 --> 00:17:25,980
To view both the configured hosts, as well
as the hosts learned and cached via DNS, use

240
00:17:25,980 --> 00:17:28,880
the command SHOW HOSTS.

241
00:17:28,880 --> 00:17:34,590
For example, here you can see the cached entry
for youtube.com that R1 learned from Google’s

242
00:17:34,590 --> 00:17:36,019
DNS server.

243
00:17:36,019 --> 00:17:40,150
Notice in the ‘flags’ column it says ‘temp’,
for temporary.

244
00:17:40,150 --> 00:17:43,900
Because this entry was learned via DNS it
is not permanent.

245
00:17:43,900 --> 00:17:47,539
If it expires it will have to be re-learned.

246
00:17:47,539 --> 00:17:52,640
These manually configured entries, however,
are permanent as displayed in the flags column.

247
00:17:52,640 --> 00:17:58,669
Next, here’s how to configure a Cisco router
as a DNS client.

248
00:17:58,669 --> 00:18:03,519
Basically, two of the commands I already showed
you are used to configure a router to act

249
00:18:03,519 --> 00:18:05,120
as a DNS client.

250
00:18:05,120 --> 00:18:10,590
So, to demonstrate this I deleted all DNS
settings from R1.

251
00:18:10,590 --> 00:18:14,019
Then I tried to ping youtube.com, but it didn’t
work.

252
00:18:14,019 --> 00:18:19,250
R1 wasn’t able to translate ‘youtube.com’
to an IP address.

253
00:18:19,250 --> 00:18:26,909
Then I used the command IP NAME-SERVER 8.8.8.8,
configuring R1 to use Google’s DNS server.

254
00:18:26,909 --> 00:18:30,799
I also used the command IP DOMAIN LOOKUP.

255
00:18:30,799 --> 00:18:35,200
Once again, this command is enabled by default
so you don’t actually have to enter it,

256
00:18:35,200 --> 00:18:37,419
but make sure you know it.

257
00:18:37,419 --> 00:18:40,049
Then I tried the ping again and it worked.

258
00:18:40,049 --> 00:18:43,860
So, we have configured R1 as a DNS client.

259
00:18:43,860 --> 00:18:47,330
However, this time it is not a DNS server.

260
00:18:47,330 --> 00:18:54,130
If PC1 tries to use R1 as a DNS server, R1
will not reply to PC1’s queries.

261
00:18:54,130 --> 00:18:57,889
Now there is one more optional command that
you can use.

262
00:18:57,889 --> 00:19:05,050
That is the IP DOMAIN NAME command, I specified
jeremysitlab.com as R1’s domain.

263
00:19:05,050 --> 00:19:10,289
You’ve probably heard the term ‘domain’
or ‘domain name’ before, actually I think

264
00:19:10,289 --> 00:19:13,420
I’ve mentioned it a few times in this video.

265
00:19:13,420 --> 00:19:19,720
Names like ‘google.com’ and ‘jeremysitlab.com’
are domain names, and they define a realm

266
00:19:19,720 --> 00:19:23,990
or area of administrative control in the Internet.

267
00:19:23,990 --> 00:19:30,559
For example, the domain name ‘google.com’
tells us that Gmail at ‘mail.google.com’,

268
00:19:30,559 --> 00:19:37,610
this server ’dns.google.com’, Google’s
NTP servers at ‘time.google.com’ all fall

269
00:19:37,610 --> 00:19:41,090
under Google’s administration and control.

270
00:19:41,090 --> 00:19:45,570
When this command is applied, this will be
a default domain name applied to all hostnames

271
00:19:45,570 --> 00:19:48,260
without a specified domain name.

272
00:19:48,260 --> 00:19:56,730
For example, the command PING PC1 will actually
become PING PC1.JEREMYSITLAB.COM.

273
00:19:56,730 --> 00:20:01,460
Like the IP DOMAIN LOOKUP command, there is
an older version with a hyphen between DOMAIN

274
00:20:01,460 --> 00:20:03,230
and NAME.

275
00:20:03,230 --> 00:20:07,540
That old version is still supported in modern
IOS, so you can use either.

276
00:20:07,540 --> 00:20:11,890
I will cover this command in a later video
about SSH.

277
00:20:11,890 --> 00:20:17,799
SSH is a protocol that can be used to connect
to the CLI of a device to configure it, but

278
00:20:17,799 --> 00:20:20,520
a domain name is needed to enable SSH.

279
00:20:20,520 --> 00:20:25,290
I’ll cover this command more in that video.

280
00:20:25,290 --> 00:20:29,769
For review, here are the commands I showed
you in this video, both the commands you can

281
00:20:29,769 --> 00:20:34,880
use in the Windows command prompt and the
Cisco IOS commands.

282
00:20:34,880 --> 00:20:41,620
If you don’t remember any of these commands,
go back in the video to review.

283
00:20:41,620 --> 00:20:46,110
Before moving on to the quiz, let’s review
what we covered in this video.

284
00:20:46,110 --> 00:20:49,490
First I introduced the purpose of DNS.

285
00:20:49,490 --> 00:20:55,139
Basically it enables the use of easy-to-remember
names like google.com and youtube.com instead

286
00:20:55,139 --> 00:20:57,259
of IP addresses.

287
00:20:57,259 --> 00:21:03,150
DNS clients send queries to DNS servers, asking
for the IP address of a particular name like

288
00:21:03,150 --> 00:21:09,039
youtube.com, and the server replies, telling
it the IP address.

289
00:21:09,039 --> 00:21:13,440
Then I demonstrated some of the basic functions
of DNS by using a Windows PC.

290
00:21:13,440 --> 00:21:19,350
I showed how it used Google’s DNS server
to learn the IP address of youtube.com, and

291
00:21:19,350 --> 00:21:24,210
then it added that IP address to its own DNS
cache.

292
00:21:24,210 --> 00:21:29,950
Finally I showed you how to configure a Cisco
router to be a DNS server and a DNS client.

293
00:21:29,950 --> 00:21:34,710
As I have already said multiple times, in
most cases you don’t need to configure DNS

294
00:21:34,710 --> 00:21:36,620
on a router.

295
00:21:36,620 --> 00:21:40,440
Usually you have a separate DNS server fill
that role.

296
00:21:40,440 --> 00:21:44,160
However you still should know how to configure
it.

297
00:21:44,160 --> 00:21:48,580
Make sure to watch until the end of the quiz
for a bonus question from Boson Software’s

298
00:21:48,580 --> 00:21:53,059
ExSim for CCNA, the best practice exams for
the CCNA.

299
00:21:53,059 --> 00:21:58,299
Okay, let’s go to question 1 of the quiz.

300
00:21:58,299 --> 00:22:03,679
Which of the following Windows command prompt
commands will display the PC’s DNS server?

301
00:22:03,679 --> 00:22:04,950
(select two).

302
00:22:04,950 --> 00:22:06,549
Here are the commands.

303
00:22:06,549 --> 00:22:13,460
Pause the video now to find the correct answers,
select two.

304
00:22:13,460 --> 00:22:19,850
The correct answers are B, IPCONFIG /ALL and
D, NSLOOKUP.

305
00:22:19,850 --> 00:22:24,549
Both of these commands will show the DNS server
that is configured on the PC.

306
00:22:24,549 --> 00:22:31,320
A, IPCONFIG displays things like the PC’s
IP address, subnet mask, and default gateway,

307
00:22:31,320 --> 00:22:34,259
but not details like the DNS server.

308
00:22:34,259 --> 00:22:41,799
C, IPCONFIG /DISPLAYDNS shows the PC’s DNS
cache, but not the DNS server address.

309
00:22:41,799 --> 00:22:48,080
Although the CCNA is focused on the Cisco
CLI, of course, verifying parameters on client

310
00:22:48,080 --> 00:22:52,970
operating systems is now a CCNA exam topic
so I think it’s a good idea to know some

311
00:22:52,970 --> 00:22:54,889
Windows commands.

312
00:22:54,889 --> 00:22:58,799
Okay let’s go to question 2.

313
00:22:58,799 --> 00:23:03,620
Which of the following statements about DNS
are true? (select two).

314
00:23:03,620 --> 00:23:05,190
Here are the options.

315
00:23:05,190 --> 00:23:12,529
Pause the video now to find the correct answers,
select two.

316
00:23:12,529 --> 00:23:19,389
The correct answers are B and D. DNS ‘A’
records map hostnames to IPv4 addresses, so

317
00:23:19,389 --> 00:23:21,140
B is correct.

318
00:23:21,140 --> 00:23:26,570
And a Cisco router can be both a DNS server
and a DNS client at the same time, so D is

319
00:23:26,570 --> 00:23:28,039
correct.

320
00:23:28,039 --> 00:23:34,130
A is incorrect because messages greater than
512 bytes in size are sent using TCP, not

321
00:23:34,130 --> 00:23:35,130
UDP.

322
00:23:35,130 --> 00:23:40,450
UDP is used for messages 512 bytes or less
in size.

323
00:23:40,450 --> 00:23:47,770
As for C, quadruple A records, not triple
A records, map hostnames to IPv6 addresses.

324
00:23:47,770 --> 00:23:50,830
Okay let’s go to question 3.

325
00:23:50,830 --> 00:23:58,740
PC1 is configured to use an external server,
8.8.8.8, as its DNS server.

326
00:23:58,740 --> 00:24:02,779
What DNS command is necessary on R1 to enable
this?

327
00:24:02,779 --> 00:24:04,480
Here are the options.

328
00:24:04,480 --> 00:24:10,940
Pause the video to think about the answer.

329
00:24:10,940 --> 00:24:16,130
The answer is D. No DNS configurations are
needed on R1.

330
00:24:16,130 --> 00:24:20,889
To forward DNS queries and replies between
clients and servers, a router doesn’t need

331
00:24:20,889 --> 00:24:23,080
any DNS configurations.

332
00:24:23,080 --> 00:24:26,100
It will simply forward the packets as normal.

333
00:24:26,100 --> 00:24:30,789
Okay let’s go to question 4.

334
00:24:30,789 --> 00:24:35,669
Which of the following Cisco IOS commands
shows the cached name/IP address mappings

335
00:24:35,669 --> 00:24:38,019
learned via DNS?

336
00:24:38,019 --> 00:24:39,660
Here are the commands.

337
00:24:39,660 --> 00:24:45,629
Pause the video to think about the answer.

338
00:24:45,629 --> 00:24:48,549
The answer is A, SHOW HOSTS.

339
00:24:48,549 --> 00:24:54,610
It displays both the hosts learned via DNS
as well as the manually configured host entries.

340
00:24:54,610 --> 00:25:00,470
B and D are not real commands, and C is the
command for Windows, not for Cisco IOS.

341
00:25:00,470 --> 00:25:05,799
Okay, let’s go to question 5.

342
00:25:05,799 --> 00:25:09,910
Which of the following protocols can hosts
use to automatically learn the address of

343
00:25:09,910 --> 00:25:12,029
their DNS server?

344
00:25:12,029 --> 00:25:13,580
Here are the options.

345
00:25:13,580 --> 00:25:20,240
Pause the video to think about your answer.

346
00:25:20,240 --> 00:25:23,250
The answer is C, DHCP.

347
00:25:23,250 --> 00:25:28,049
Dynamic Host Configuration Protocol allows
hosts to learn various parameters such as

348
00:25:28,049 --> 00:25:33,269
their IP address and subnet mask, default
gateway, and DNS server.

349
00:25:33,269 --> 00:25:35,789
DHCP will be covered in another video.

350
00:25:35,789 --> 00:25:38,710
Okay, that’s all for the quiz.

351
00:25:38,710 --> 00:25:44,750
Now let’s take a look at a bonus question
from Boson Software’s ExSim for CCNA.

352
00:25:44,750 --> 00:25:48,419
Okay here's today's Boson ExSim practice question.

353
00:25:48,419 --> 00:25:54,450
A web browser on HostA sends an HTTP request
to WWW_server.

354
00:25:54,450 --> 00:25:58,720
This is the first time HostA has ever sent
a request to WWW_server.

355
00:25:58,720 --> 00:26:02,659
HostA does not use a hosts files.

356
00:26:02,659 --> 00:26:07,769
With which of the following devices does HostA
establish a TCP connection in this scenario?

357
00:26:07,769 --> 00:26:09,970
Select the best answer.

358
00:26:09,970 --> 00:26:11,169
Here are the options.

359
00:26:11,169 --> 00:26:14,639
A, only DNS_server and WWW_server.

360
00:26:14,639 --> 00:26:20,290
B, DNS_server, Default_GW, and WWW_server.

361
00:26:20,290 --> 00:26:25,529
C, only Default_GW and WWW_server.

362
00:26:25,529 --> 00:26:29,059
Or D, only WWW_server.

363
00:26:29,059 --> 00:26:36,190
Okay pause the video now to find the correct
answer.

364
00:26:36,190 --> 00:26:37,720
Okay let's check.

365
00:26:37,720 --> 00:26:42,289
First, does HostA established a TCP connection
with Default_GW?

366
00:26:42,289 --> 00:26:44,419
No, it does not.

367
00:26:44,419 --> 00:26:49,870
This router simply forwards traffic between
the devices, but HostA is not trying to access

368
00:26:49,870 --> 00:26:55,360
something on this router so there's no need
to establish a TCP connection.

369
00:26:55,360 --> 00:26:57,440
How about with DNS_server?

370
00:26:57,440 --> 00:27:03,710
So it says this is the first time HostA has
ever sent a request to WWW_server.

371
00:27:03,710 --> 00:27:08,330
So that means it has no entry in its DNS cache
for this web server.

372
00:27:08,330 --> 00:27:14,289
And HostA also does not use a hosts file,
so HostA has to contact the DNS server to

373
00:27:14,289 --> 00:27:17,340
learn the IP address of the web server.

374
00:27:17,340 --> 00:27:23,440
So, to learn the IP address from the DNS server,
does it use TCP?

375
00:27:23,440 --> 00:27:26,190
Does it establish a TCP connection?

376
00:27:26,190 --> 00:27:28,720
The answer is no.

377
00:27:28,720 --> 00:27:35,220
As I said in this video, standard DNS queries
and responses use UDP, not TCP.

378
00:27:35,220 --> 00:27:40,309
So there's no need to establish a TCP connection
with this DNS server.

379
00:27:40,309 --> 00:27:42,510
Finally, how about the web server?

380
00:27:42,510 --> 00:27:44,559
Does it establish a TCP connection?

381
00:27:44,559 --> 00:27:50,399
Yes, a web browser on HostA sends an HTTP
request to the web server.

382
00:27:50,399 --> 00:27:58,529
HTTP uses TCP port 80, so HostA must establish
a TCP connection with the web server.

383
00:27:58,529 --> 00:28:03,379
So that means the answer is D, only WWW_server.

384
00:28:03,379 --> 00:28:06,960
Click on show answer and there it is, correct.

385
00:28:06,960 --> 00:28:09,289
So here is Boson's explanation.

386
00:28:09,289 --> 00:28:14,149
You can pause the video to read it, and I
recommend you do.

387
00:28:14,149 --> 00:28:19,249
They also have a reference to some documentation
from Microsoft, explaining DNS and how it

388
00:28:19,249 --> 00:28:25,610
works on both TCP and UDP.

389
00:28:25,610 --> 00:28:28,399
Okay so that's Boson ExSim for the CCNA.

390
00:28:28,399 --> 00:28:32,340
These are by far the best practice exams for
the CCNA.

391
00:28:32,340 --> 00:28:38,700
If you want to get Boson ExSim, please follow
the link in the video description.

392
00:28:38,700 --> 00:28:41,940
There are supplementary materials for this
video.

393
00:28:41,940 --> 00:28:45,659
There is a flashcard deck to use with the
software ‘Anki’.

394
00:28:45,659 --> 00:28:50,490
There will also be a packet tracer practice
lab so you can get some hands-on practice.

395
00:28:50,490 --> 00:28:53,110
That will be in the next video.

396
00:28:53,110 --> 00:28:56,809
Sign up for my mailing list via the link in
the description, and I’ll send you all of

397
00:28:56,809 --> 00:29:02,320
the flashcards and packet tracer lab files
for the course.

398
00:29:02,320 --> 00:29:07,240
Before finishing today’s video I want to
thank my JCNP-level channel members.

399
00:29:07,240 --> 00:29:11,059
To join, please click the ‘Join’ button
under the video.

400
00:29:11,059 --> 00:29:17,360
Thank you to Donald, C Mohd, Gustavo, Anthony,
Biraj, Junhong, Njabulo, Benjamin, Tshepiso,

401
00:29:17,360 --> 00:29:24,350
Justin, Prakaash, Nasir, Erlison, Apogee,
Marko, Daming, Jhilmar, Ed, Value, John, Funnydart,

402
00:29:24,350 --> 00:29:30,169
Velvijaykum, Mark, Yousif, Boson Software,
Devin, Lito, Yonatan, and Vance.

403
00:29:30,169 --> 00:29:36,230
Sorry if I pronounced your name incorrectly,
but thank you so much for your support.

404
00:29:36,230 --> 00:29:41,269
This is the list of JCNP-level members at
the time of recording by the way, January

405
00:29:41,269 --> 00:29:43,009
11th 2021.

406
00:29:43,009 --> 00:29:47,370
If you signed up recently and your name isn’t
on here don’t worry, you’ll be in future

407
00:29:47,370 --> 00:29:48,370
videos.

408
00:29:48,370 --> 00:29:51,419
Thank you for watching.

409
00:29:51,419 --> 00:29:55,399
Please subscribe to the channel, like the
video, leave a comment, and share the video

410
00:29:55,399 --> 00:29:58,669
with anyone else studying for the CCNA.

411
00:29:58,669 --> 00:30:01,549
If you want to leave a tip, check the links
in the description.

412
00:30:01,549 --> 00:30:07,299
I'm also a Brave verified publisher and accept
BAT, or Basic Attention Token, tips via the

413
00:30:07,299 --> 00:30:08,820
Brave browser.

414
00:30:08,820 --> 00:30:09,330
That's all for now.
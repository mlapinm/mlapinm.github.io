1
00:00:02,399 --> 00:00:04,990
Welcome to Jeremy’s IT Lab.

2
00:00:04,990 --> 00:00:08,389
This is a free, complete course for the CCNA.

3
00:00:08,389 --> 00:00:12,660
If you like these videos, please subscribe
to follow along with the series.

4
00:00:12,660 --> 00:00:17,199
Also, please like and leave a comment, and
share the video to help spread this free series

5
00:00:17,199 --> 00:00:18,350
of videos.

6
00:00:18,350 --> 00:00:20,460
Thanks for your help.

7
00:00:20,460 --> 00:00:25,210
In this video we will continue our study of
spanning tree, focusing instead on an updated

8
00:00:25,210 --> 00:00:28,509
version called rapid spanning tree.

9
00:00:28,509 --> 00:00:34,580
More specifically, we’ll be looking at Cisco’s
version, rapid per-VLAN spanning tree.

10
00:00:34,580 --> 00:00:38,910
You saw in the previous lecture that classic
spanning tree can be quite slow, taking up

11
00:00:38,910 --> 00:00:44,360
to 50 seconds for the network to converge
after a change in the topology.

12
00:00:44,360 --> 00:00:49,900
As the name implies, rapid spanning tree improves
this time, only taking a few seconds to respond

13
00:00:49,900 --> 00:00:52,600
to changes in the network.

14
00:00:52,600 --> 00:00:57,100
Because rapid spanning tree is superior to
classic spanning tree, it is the default on

15
00:00:57,100 --> 00:01:03,280
most devices now, and the CCNA exam topics
only mention rapid spanning tree.

16
00:01:03,280 --> 00:01:07,720
However I think it is important to understand
classic spanning tree, and now that you know

17
00:01:07,720 --> 00:01:12,820
about classic spanning tree, rapid spanning
tree will be much easier to learn.

18
00:01:12,820 --> 00:01:17,610
Let’s take a look at what we’ll cover
in this video.

19
00:01:17,610 --> 00:01:22,460
First up, let’s take a few minutes to compare
different versions of STP.

20
00:01:22,460 --> 00:01:31,970
In the past few videos I’ve mentioned multiple
versions, STP, PVST+, rapid STP, rapid PVST+,

21
00:01:31,970 --> 00:01:33,640
multiple spanning tree.

22
00:01:33,640 --> 00:01:39,110
Just so there is no confusion, I will summarize
each version, and clarify between the industry

23
00:01:39,110 --> 00:01:42,670
standards and the Cisco proprietary versions.

24
00:01:42,670 --> 00:01:47,049
Then the rest of the video will be all about
rapid spanning tree, specifically the version

25
00:01:47,049 --> 00:01:52,010
which operates on Cisco switches, rapid per-VLAN
spanning tree plus.

26
00:01:52,010 --> 00:01:56,740
Also, make sure to watch until the end of
today’s quiz, I will once again feature

27
00:01:56,740 --> 00:02:02,530
a bonus question from Boson Software’s ExSim
for the CCNA, a set of practice exams for

28
00:02:02,530 --> 00:02:05,690
the CCNA which I highly recommend.

29
00:02:05,690 --> 00:02:10,569
Ask anywhere on the Internet for CCNA practice
exam recommendations, and people are going

30
00:02:10,569 --> 00:02:12,900
to recommend Boson.

31
00:02:12,900 --> 00:02:17,180
If you want to get a copy of ExSim to prepare
for the exam, follow the link in the video

32
00:02:17,180 --> 00:02:18,760
description.

33
00:02:18,760 --> 00:02:23,900
Let’s start by summarizing the different
versions of spanning tree.

34
00:02:23,900 --> 00:02:29,159
On the left I will list the industry standard
versions, the IEEE standards.

35
00:02:29,159 --> 00:02:34,139
On the right I will list the Cisco proprietary
versions, Cisco’s upgrades to some of the

36
00:02:34,139 --> 00:02:36,310
standard versions.

37
00:02:36,310 --> 00:02:42,510
First up, the classic spanning tree protocol,
IEEE standard 802.1D.

38
00:02:42,510 --> 00:02:47,510
This is the original spanning tree protocol,
according to Wikipedia it was originally published

39
00:02:47,510 --> 00:02:53,819
in 1990, although the original spanning tree
was actually created in 1985, before being

40
00:02:53,819 --> 00:02:55,620
standardized.

41
00:02:55,620 --> 00:03:00,579
In classic STP, all VLANs share one STP instance.

42
00:03:00,579 --> 00:03:06,409
Therefore, we cannot load balance using classic
STP, because there is only one instance, we

43
00:03:06,409 --> 00:03:10,560
cannot block different ports in each VLAN
to achieve load balancing.

44
00:03:10,560 --> 00:03:14,329
So, Cisco decided to improve upon this.

45
00:03:14,329 --> 00:03:17,450
They developed Per-VLAN Spanning Tree Plus.

46
00:03:17,450 --> 00:03:22,150
Actually, before that they developed regular
Per-VLAN Spanning Tree, which as I mentioned

47
00:03:22,150 --> 00:03:28,849
before only supported ISL trunk encapsulation,
no dot1q, but let’s forget about that version

48
00:03:28,849 --> 00:03:32,719
since everyone uses dot1q for their trunk
encapsulation these days.

49
00:03:32,719 --> 00:03:40,480
It’s Cisco’s upgrade to 802.1D. Each VLAN
has its own STP instance.

50
00:03:40,480 --> 00:03:45,620
In the previous lab video when we configured
STP we had to include the VLAN number in each

51
00:03:45,620 --> 00:03:50,609
command, for example spanning-tree vlan 1
root primary.

52
00:03:50,609 --> 00:03:55,760
That’s because a separate STP instance is
running for each VLAN.

53
00:03:55,760 --> 00:03:56,959
Why is this good?

54
00:03:56,959 --> 00:04:01,689
Well, as you know already, we can load balance
by blocking different ports in each VLAN,

55
00:04:01,689 --> 00:04:04,169
in each STP instance.

56
00:04:04,169 --> 00:04:08,310
We can use our network bandwidth more effectively,
since we don’t have any connections going

57
00:04:08,310 --> 00:04:12,469
totally unused, just waiting for another connection
to fail.

58
00:04:12,469 --> 00:04:18,810
Now, as you also know, classic spanning tree
and PVST+ are quite slow.

59
00:04:18,810 --> 00:04:25,460
The max age timer is 20 seconds, and the listening
and learning states are 15 seconds each, so

60
00:04:25,460 --> 00:04:29,479
it can take up to 50 seconds to respond to
changes in the network.

61
00:04:29,479 --> 00:04:33,560
That’s simply not fast enough for modern
networks.

62
00:04:33,560 --> 00:04:39,860
This was solved in rapid spanning tree protocol,
IEEE standard 802.1w.

63
00:04:39,860 --> 00:04:47,180
It is much faster at converging and adapting
to network changes than 802.1D. However, just

64
00:04:47,180 --> 00:04:54,039
like 802.1D, the industry standard rapid spanning
tree protocol runs only one STP instance,

65
00:04:54,039 --> 00:04:55,449
shared by all VLANs.

66
00:04:55,449 --> 00:04:59,460
Therefore, it also cannot load balance.

67
00:04:59,460 --> 00:05:04,550
Cisco once again developed an improved version
of the industry standard, Rapid Per-VLAN Spanning

68
00:05:04,550 --> 00:05:08,590
Tree Plus, or Rapid PVST+.

69
00:05:08,590 --> 00:05:15,370
It is Cisco’s upgrade to 802.1w, featuring
the improved speed of rapid STP, plus it runs

70
00:05:15,370 --> 00:05:18,620
a separate STP instance for each VLAN.

71
00:05:18,620 --> 00:05:24,030
Therefore, it can load balance by blocking
different ports in each VLAN, just like the

72
00:05:24,030 --> 00:05:26,560
previous PVST+.

73
00:05:26,560 --> 00:05:33,189
The final version is Multiple Spanning Tree
Protocol, IEEE standard 802.1s.

74
00:05:33,189 --> 00:05:36,389
It uses modified RSTP mechanics.

75
00:05:36,389 --> 00:05:41,670
But the main improvement is that it can group
multiple VLANs into different instances, for

76
00:05:41,670 --> 00:05:49,099
example if there are 10 VLANs, VLANs 1 to
5 in instance 1, and VLANs 6 to 10 in instance

77
00:05:49,099 --> 00:05:52,470
2, to perform load balancing.

78
00:05:52,470 --> 00:05:57,120
Finally an industry standard version of STP
that allows load balancing, and actually its

79
00:05:57,120 --> 00:06:00,580
superior to Cisco’s rapid-PVST.

80
00:06:00,580 --> 00:06:06,360
If you have many VLANs, let’s say 200, in
your network, configuring primary and secondary

81
00:06:06,360 --> 00:06:09,509
root bridges in each VLAN is a lot of work.

82
00:06:09,509 --> 00:06:17,250
However, with MSTP, all you have to do is
assign VLANs 1 to 100 to instance 1, and VLANs

83
00:06:17,250 --> 00:06:23,229
101 to 200 to instance 2, and then configure
the primary and secondary root bridges for

84
00:06:23,229 --> 00:06:29,189
instance 1 and instance 2, so its much easier
to configure and manage.

85
00:06:29,189 --> 00:06:34,550
Actually, Cisco hasn’t developed their own
version of MSTP, Cisco devices simply run

86
00:06:34,550 --> 00:06:38,280
the industry standard 802.1s.

87
00:06:38,280 --> 00:06:43,660
For large networks, it’s best to use MSTP,
however for small to medium networks without

88
00:06:43,660 --> 00:06:50,300
a huge number of VLANs, Cisco’s Rapid PVST+
is what you’ll probably run on your switches,

89
00:06:50,300 --> 00:06:52,760
and that’s the version we’ll be focusing
on today.

90
00:06:52,760 --> 00:06:57,380
It’s also the version that is mentioned
in the official exam topics list.

91
00:06:57,380 --> 00:07:03,150
Also, all of this information here applies
to the standard 802.1w, but that’s not the

92
00:07:03,150 --> 00:07:06,810
version that runs on Cisco switches.

93
00:07:06,810 --> 00:07:12,999
The good news is, since you already understand
classic STP and PVST+, it will be much easier

94
00:07:12,999 --> 00:07:19,219
to learn rapid STP and rapid PVST+ by comparing
it to the previous versions.

95
00:07:19,219 --> 00:07:22,560
Let’s get started.

96
00:07:22,560 --> 00:07:26,990
Before getting in to the details, here is
Cisco’s summary of RSTP.

97
00:07:26,990 --> 00:07:35,810
RSTP is not a timer-based spanning tree algorithm
like 802.1D. Therefore, RSTP offers an improvement

98
00:07:35,810 --> 00:07:41,580
over the 30 seconds or more that 802.1D takes
to move a link to forwarding.

99
00:07:41,580 --> 00:07:46,469
The heart of the protocol is a new bridge-bridge
handshake mechanism, which allows ports to

100
00:07:46,469 --> 00:07:47,990
move directly to forwarding.

101
00:07:47,990 --> 00:07:57,840
So, that’s the big difference between RSTP
and 802.1D STP. 802.1D uses long timers to

102
00:07:57,840 --> 00:08:02,569
determine when it’s safe to move to the
next state, and these timers are quite long,

103
00:08:02,569 --> 00:08:07,340
to ensure that no loops are accidentally created
when a port starts forwarding.

104
00:08:07,340 --> 00:08:11,910
Back when the original STP was created, it
was acceptable that a port could take 30 to

105
00:08:11,910 --> 00:08:16,330
50 seconds to react to a change and start
forwarding traffic.

106
00:08:16,330 --> 00:08:18,539
However that’s no longer the case.

107
00:08:18,539 --> 00:08:24,259
So, RSTP uses a ‘handshake’ mechanism,
which allows switches to actively negotiate

108
00:08:24,259 --> 00:08:29,330
with other switches and move ports immediately
to the forwarding state if appropriate.

109
00:08:29,330 --> 00:08:34,500
Okay, now I will introduce some of the specifics
of RSTP.

110
00:08:34,500 --> 00:08:40,210
By the way, I will probably say RSTP sometimes,
and Rapid PVST+ other times.

111
00:08:40,210 --> 00:08:42,860
Really, I’m talking about the same thing.

112
00:08:42,860 --> 00:08:48,640
Cisco’s Rapid PVST+ operates the same as
RSTP, but with the addition of a separate

113
00:08:48,640 --> 00:08:54,190
instance for each VLAN, so I will use the
two terms interchangeably.

114
00:08:54,190 --> 00:09:00,750
Let’s summarize some similarities between
STP and RSTP.

115
00:09:00,750 --> 00:09:06,260
First of all, RSTP serves the same purpose
as STP, blocking specific ports to prevent

116
00:09:06,260 --> 00:09:07,820
Layer 2 loops.

117
00:09:07,820 --> 00:09:12,310
RSTP elects a root bridge with the same rules
as STP.

118
00:09:12,310 --> 00:09:16,790
I’m sure you know it by now, the switch
with the lowest bridge ID becomes the root

119
00:09:16,790 --> 00:09:18,040
bridge.

120
00:09:18,040 --> 00:09:21,950
RSTP also elects root ports with the same
rules as STP.

121
00:09:21,950 --> 00:09:28,070
So, the interface with the lowest root cost
becomes the root port, with the same tie-breakers,

122
00:09:28,070 --> 00:09:31,790
neighbor bridge ID and then neighbor port
ID.

123
00:09:31,790 --> 00:09:35,740
You studied this in day 20’s video, our
first video on STP.

124
00:09:35,740 --> 00:09:40,670
Finally, RSTP elects designated ports with
the same rules as STP.

125
00:09:40,670 --> 00:09:47,720
So, the interface on the switch with the lowest
root cost will become designated and the interface

126
00:09:47,720 --> 00:09:50,760
on the other switch will be non-designated.

127
00:09:50,760 --> 00:09:56,970
If there is a tie, the switch with the lowest
bridge ID will set its interface to designated.

128
00:09:56,970 --> 00:10:02,760
Cisco has said that RSTP isn’t a ‘revolution’
of STP, just an ‘evolution’.

129
00:10:02,760 --> 00:10:07,640
It made some major improvements to speed up
STP, but it didn’t change it completely,

130
00:10:07,640 --> 00:10:09,570
as you can see here.

131
00:10:09,570 --> 00:10:14,730
Now let’s look at some of the differences
of STP and RSTP.

132
00:10:14,730 --> 00:10:18,620
First up, port costs were updated for rapid
spanning tree.

133
00:10:18,620 --> 00:10:23,770
Classic spanning tree defines port speeds
up to 10 Gbps, and I believe port speeds faster

134
00:10:23,770 --> 00:10:26,530
than this are all given a cost of 1.

135
00:10:26,530 --> 00:10:31,510
To accommodate for faster speeds, RSTP’s
cost values were expanded.

136
00:10:31,510 --> 00:10:40,350
2 million for 10 mbps, 2 hundred thousand
for 100 mbps, 20 thousand for 1 gbps, 2000

137
00:10:40,350 --> 00:10:48,270
for 10 gbps, 200 for 100 gbps, and 20 for
1 Tbps.

138
00:10:48,270 --> 00:10:52,820
Beyond this, a 10 terabit-per-second interface
would have a cost of 2.

139
00:10:52,820 --> 00:10:57,060
Use the flashcards to remember the port costs
of both classic STP and rapid STP.

140
00:10:57,060 --> 00:11:03,860
Here’s a slide from day 21, the different
port states of classic spanning tree protocol.

141
00:11:03,860 --> 00:11:09,050
Hopefully you remember these states, which
ones send and receive BPDUs, which one forwards

142
00:11:09,050 --> 00:11:13,020
traffic, which ones learn MAC addresses, etc.

143
00:11:13,020 --> 00:11:18,920
However, rapid spanning tree simplifies the
port states, reducing them to just 3, by combining

144
00:11:18,920 --> 00:11:21,550
three of these states into one.

145
00:11:21,550 --> 00:11:27,160
The three states that are combined into one
are blocking, listening, and disabled.

146
00:11:27,160 --> 00:11:32,890
Actually, a more accurate way is to say the
blocking and disabled port states were combined

147
00:11:32,890 --> 00:11:36,880
into one, and the listening state is simply
not used.

148
00:11:36,880 --> 00:11:42,660
So, the listening state is gone, and the blocking
and disabled states have become the discarding

149
00:11:42,660 --> 00:11:44,420
state.

150
00:11:44,420 --> 00:11:49,310
If a port is administratively disabled, meaning
it has the shutdown command applied to it,

151
00:11:49,310 --> 00:11:52,670
it will be in a discarding state in RSTP.

152
00:11:52,670 --> 00:11:55,680
This was previously the disabled state.

153
00:11:55,680 --> 00:12:00,170
If a port is enabled but blocking traffic
to prevent Layer 2 loops, it is also in a

154
00:12:00,170 --> 00:12:02,010
discarding state.

155
00:12:02,010 --> 00:12:04,790
This was previously the blocking state.

156
00:12:04,790 --> 00:12:07,500
Next, how about port roles?

157
00:12:07,500 --> 00:12:13,940
Remember, the three original port roles are
root, designated, and non-designated.

158
00:12:13,940 --> 00:12:17,570
The root port role remains unchanged in RSTP.

159
00:12:17,570 --> 00:12:22,180
The port that is closest to the root bridge
becomes the root port for the switch.

160
00:12:22,180 --> 00:12:25,830
Of course, ‘closest’ means the port with
the lowest root cost.

161
00:12:25,830 --> 00:12:30,470
Also, the root bridge is the only switch that
doesn’t have a root port.

162
00:12:30,470 --> 00:12:36,150
So, these points are the same as what you
already learned about classic spanning tree.

163
00:12:36,150 --> 00:12:40,560
The designated port role also remains unchanged
in RSTP.

164
00:12:40,560 --> 00:12:44,990
The port on a segment (which is another name
for a collision domain) that sends the best

165
00:12:44,990 --> 00:12:50,341
BPDU is that segment’s designated port,
and there can only be one designated port

166
00:12:50,341 --> 00:12:52,200
per segment.

167
00:12:52,200 --> 00:12:56,680
The other port on the segment is either a
root port, or a non-designated port in classic

168
00:12:56,680 --> 00:12:58,360
spanning tree.

169
00:12:58,360 --> 00:13:04,800
However, the non-designated port role was
divided into two separate roles in RSTP.

170
00:13:04,800 --> 00:13:08,850
Those are the alternate port role and the
backup port role.

171
00:13:08,850 --> 00:13:13,200
Let’s break down those two roles.

172
00:13:13,200 --> 00:13:15,700
First up, the alternate port role.

173
00:13:15,700 --> 00:13:21,660
The RSTP alternate port role is a discarding
port that receives a superior BPDU from another

174
00:13:21,660 --> 00:13:23,810
switch.

175
00:13:23,810 --> 00:13:28,570
This is the same as what you’ve already learned
about blocking ports in classic STP.

176
00:13:28,570 --> 00:13:33,350
In our little topology down here, SW1 is the
root bridge.

177
00:13:33,350 --> 00:13:39,430
When BPDUs are sent in this topology, SW3
receives a superior BPDU from SW2.

178
00:13:39,430 --> 00:13:44,230
It’s superior because the bridge ID of SW2
is lower than SW3.

179
00:13:44,230 --> 00:13:51,050
So, SW2’s interface is designated, and SW3’s
is an alternate port.

180
00:13:51,050 --> 00:13:55,370
An alternate port basically functions as a
backup to the root port.

181
00:13:55,370 --> 00:14:00,440
If the root port fails, the switch can immediately
move its best alternate port to forwarding,

182
00:14:00,440 --> 00:14:02,190
as the new root port.

183
00:14:02,190 --> 00:14:07,980
If SW3’s root port fails, its alternate
port is ready to immediately become the root

184
00:14:07,980 --> 00:14:11,180
port, with no transitional states.

185
00:14:11,180 --> 00:14:15,930
This immediate move to forwarding state functions
like a classic STP optional feature called

186
00:14:15,930 --> 00:14:18,540
UplinkFast.

187
00:14:18,540 --> 00:14:25,140
Because it is built into RSTP, you do not
need to activate UplinkFast when using RSTP or Rapid

188
00:14:25,140 --> 00:14:26,930
PVST+.

189
00:14:26,930 --> 00:14:31,470
We didn’t look at UplinkFast in the previous
videos, its not mentioned in the exam topics

190
00:14:31,470 --> 00:14:36,450
list, but try to remember that its functions
are built into rapid spanning tree, you might

191
00:14:36,450 --> 00:14:39,200
get asked about that on the exam.

192
00:14:39,200 --> 00:14:46,190
So, UplinkFast is one STP optional feature
that was incorporated into RSTP.

193
00:14:46,190 --> 00:14:50,430
Since I just mentioned one, I’d like to
briefly explain one more that was incorporated

194
00:14:50,430 --> 00:14:52,040
into RSTP.

195
00:14:52,040 --> 00:14:56,830
Neither of these are on the exam topics list
so you don’t have to learn them in depth,

196
00:14:56,830 --> 00:15:03,300
but just be aware of their general functionality,
because they are part of RSTP.

197
00:15:03,300 --> 00:15:09,220
One more STP optional feature that was built
into RSTP is BackboneFast.

198
00:15:09,220 --> 00:15:14,550
Let’s say SW2’s root port is cut off,
so it stops receiving BPDUs from the root

199
00:15:14,550 --> 00:15:15,870
bridge.

200
00:15:15,870 --> 00:15:21,290
It will then assume it is the root bridge,
so it will send it’s own BPDUs to SW3.

201
00:15:21,290 --> 00:15:30,220
However, SW3 is now receiving BPDUs from both
SW1 and SW2, but SW2’s BPDUs are inferior,

202
00:15:30,220 --> 00:15:32,930
they have a higher bridge ID.

203
00:15:32,930 --> 00:15:39,090
Without this backbonefast functionality, SW3
would just ignore these BPDUs from SW2 until

204
00:15:39,090 --> 00:15:44,180
it’s non-designated port, in classic STP,
finally changes to a forwarding state and

205
00:15:44,180 --> 00:15:50,870
forwards the superior BPDUs to SW2, which
then accepts SW1 as its root bridge again.

206
00:15:50,870 --> 00:15:57,110
However, BackboneFast allows SW3 to expire
the max age timer on that interface and rapidly

207
00:15:57,110 --> 00:16:01,090
forward the superior BPDUs to SW2.

208
00:16:01,090 --> 00:16:05,460
This functionality is built into RSTP, so
it does not need to be configured.

209
00:16:05,460 --> 00:16:09,680
So, that’s a very basic explanation of BackboneFast.

210
00:16:09,680 --> 00:16:15,010
Let’s look at a quick summary on the next
slide.

211
00:16:15,010 --> 00:16:20,870
UplinkFast and BackboneFast are two optional
features in classic STP.

212
00:16:20,870 --> 00:16:24,920
They must be configured to operate on the
switch, but it’s not necessary to know how

213
00:16:24,920 --> 00:16:28,300
to do so for the CCNA.

214
00:16:28,300 --> 00:16:33,510
Both features are built into RSTP, so if the
switch is running RSTP, you do not have to

215
00:16:33,510 --> 00:16:34,720
configure them.

216
00:16:34,720 --> 00:16:38,570
They operate by default on all switches running
RSTP.

217
00:16:38,570 --> 00:16:44,030
Finally, You do not need to have a detailed
understanding of them for the CCNA.

218
00:16:44,030 --> 00:16:49,800
I recommend that you know their names and
their basic purpose, which is to help blocking or discarding

219
00:16:49,800 --> 00:16:53,400
ports move to forwarding without delay.

220
00:16:53,400 --> 00:16:58,650
If you want to learn more, do a Google search
for ‘spanning tree uplinkfast’ or ‘spanning

221
00:16:58,650 --> 00:17:01,160
tree backbonefast’.

222
00:17:01,160 --> 00:17:05,449
Learning how to effectively search on Google
for information is an essential part of being

223
00:17:05,449 --> 00:17:08,230
a good network engineer, to be honest.

224
00:17:08,230 --> 00:17:12,640
We Google things all the time in our daily
work, and you can bet I Google things a lot

225
00:17:12,640 --> 00:17:14,840
when preparing these videos.

226
00:17:14,840 --> 00:17:19,910
So, if you ever want to learn more about a
topic in one of these videos, take the chance

227
00:17:19,910 --> 00:17:24,720
to improve your Google skills and try to search
for some good resources.

228
00:17:24,720 --> 00:17:31,620
Okay, after that little detour, let’s look
at the last port role in RSTP.

229
00:17:31,620 --> 00:17:35,670
We just saw the alternate port role, which
is just like the non-designated port role

230
00:17:35,670 --> 00:17:38,860
we saw in the previous lectures.

231
00:17:38,860 --> 00:17:42,320
Next up lets look at the backup port role.

232
00:17:42,320 --> 00:17:48,260
The RSTP backup port role is a discarding
port that receives a superior BPDU from another

233
00:17:48,260 --> 00:17:51,320
interface on the same switch.

234
00:17:51,320 --> 00:17:56,040
This only happens when two interfaces are
connected to the same collision domain, via

235
00:17:56,040 --> 00:17:57,540
a hub.

236
00:17:57,540 --> 00:18:02,920
Notice that there is now an ethernet hub connected
between SW2 and SW3.

237
00:18:02,920 --> 00:18:09,030
When BPDUs are sent in this nework, the BPDU
sent out of SW2’s designated port is flooded

238
00:18:09,030 --> 00:18:14,940
by the hub, and as you can see here it receives
that same BPDU on a different interface.

239
00:18:14,940 --> 00:18:19,190
That’s why this interface is a backup port,
not an alternate port.

240
00:18:19,190 --> 00:18:24,230
However, I’ve already told you that hubs
are not used in modern networks, so you will

241
00:18:24,230 --> 00:18:27,380
probably not encounter an RSTP backup port.

242
00:18:27,380 --> 00:18:30,440
It’s still something you should know.

243
00:18:30,440 --> 00:18:35,260
RSTP backup ports function as a backup for
a designated port.

244
00:18:35,260 --> 00:18:40,740
If SW2’s designated port fails, its backup
port immediately begins forwarding traffic

245
00:18:40,740 --> 00:18:42,660
as a designated port.

246
00:18:42,660 --> 00:18:47,230
Now, as for how the switch chooses which port
will be the designated port and which will

247
00:18:47,230 --> 00:18:52,670
be the backup port, the interface with the
lowest port ID will be selected as the designated

248
00:18:52,670 --> 00:18:56,550
port, and the other will be the backup port.

249
00:18:56,550 --> 00:18:59,620
Before moving on let’s try out a quiz question.

250
00:18:59,620 --> 00:19:06,020
Identify the root bridge, and the RSTP port
role of each switch interface in this network.

251
00:19:06,020 --> 00:19:09,680
By the way, the hub doesn’t participate
in spanning tree.

252
00:19:09,680 --> 00:19:13,930
Hubs aren’t sophisticated enough to use
spanning tree, so it just floods all frames

253
00:19:13,930 --> 00:19:15,160
it receives.

254
00:19:15,160 --> 00:19:21,720
Okay, pause the video here to find the answer.

255
00:19:21,720 --> 00:19:24,360
Okay, let’s check the answer.

256
00:19:24,360 --> 00:19:29,930
The root bridge is SW1, because all switches
have the same priority and SW1 has the lowest

257
00:19:29,930 --> 00:19:33,080
MAC address, it is elected as the root.

258
00:19:33,080 --> 00:19:37,220
Its interfaces are designated ports.

259
00:19:37,220 --> 00:19:39,010
These are the root ports for each switch.

260
00:19:39,010 --> 00:19:44,780
SW2 and SW3’s root ports are obvious, they
have the lowest root cost.

261
00:19:44,780 --> 00:19:47,510
How about SW4’s root port?

262
00:19:47,510 --> 00:19:53,400
The hub doesn’t participate in STP so it
doesn’t add any cost to the BPDU, so why

263
00:19:53,400 --> 00:19:57,060
did SW4 choose G0/1 over G0/0?

264
00:19:57,060 --> 00:20:03,271
It’s because the neighbor bridge ID is lower
via G0/1, because SW2 has a lower MAC address

265
00:20:03,271 --> 00:20:04,890
than SW3.

266
00:20:04,890 --> 00:20:10,140
SW2’s G0/1 connected to SW4’s G0/1 becomes
designated.

267
00:20:10,140 --> 00:20:15,000
Now, how about the connection between SW3
and SW4?

268
00:20:15,000 --> 00:20:18,460
First of all, which switch sets its interface
to designated?

269
00:20:18,460 --> 00:20:24,710
Well, SW3 has a lower root cost, so one of
its interfaces will be the designated port.

270
00:20:24,710 --> 00:20:26,160
Which one?

271
00:20:26,160 --> 00:20:33,170
G0/0 has the lower port ID, so it will be
the designated port in this collision domain.

272
00:20:33,170 --> 00:20:37,520
How about SW3’s G0/1 and SW4’s G0/0?

273
00:20:37,520 --> 00:20:43,761
SW3’s G0/1 receives the superior BPDU, with
the lower port ID, from the same switch, so

274
00:20:43,761 --> 00:20:46,110
it's a backup port.

275
00:20:46,110 --> 00:20:52,590
SW4’s G0/0 receives the superior BPDU from
a different switch, so it is an alternate

276
00:20:52,590 --> 00:20:53,590
port.

277
00:20:53,590 --> 00:20:56,240
Okay, those are the answers.

278
00:20:56,240 --> 00:20:58,140
Hopefully you answered correctly.

279
00:20:58,140 --> 00:21:03,780
If not, don’t worry, there will be more
practice at the end of the video.

280
00:21:03,780 --> 00:21:09,060
Now let’s take a quick look at the CLI,
I’m on SW3 here.

281
00:21:09,060 --> 00:21:14,910
As I showed you in the last video, there are
three STP modes you can run on a Cisco switch,

282
00:21:14,910 --> 00:21:19,950
MST, PVST, and rapid-PVST.

283
00:21:19,950 --> 00:21:26,490
Rapid-PVST is the default on modern Cisco
switches, so you probably won’t have to

284
00:21:26,490 --> 00:21:33,090
use this command, but I entered SPANNING-TREE
MODE RAPID-PVST to make sure it runs in rapid

285
00:21:33,090 --> 00:21:35,270
pvst mode.

286
00:21:35,270 --> 00:21:39,190
Then I used SHOW SPANNING-TREE to confirm.

287
00:21:39,190 --> 00:21:44,260
Notice that it says ‘Spanning tree enabled
protocol rstp’.

288
00:21:44,260 --> 00:21:49,630
Previously when we were using classic STP,
it said ‘ieee’, now it says ‘rstp’.

289
00:21:49,630 --> 00:21:56,420
Although it says ‘rstp’, this is in fact
Cisco’s Rapid PVST+ running.

290
00:21:56,420 --> 00:22:00,270
Now, the only other difference I want to point
out is this.

291
00:22:00,270 --> 00:22:06,270
As shown in the network diagram, SW3’s G0/1
interface has the ‘backup’ role.

292
00:22:06,270 --> 00:22:12,140
The status is still listed as BLK for ‘blocking’,
although this state is actually called ‘discarding’

293
00:22:12,140 --> 00:22:15,070
in rapid STP.

294
00:22:15,070 --> 00:22:19,960
I used the SHOW SPANNING-TREE command on SW4
also.

295
00:22:19,960 --> 00:22:25,850
As in the network diagram, SW4’s G0/0 interface
is an ‘Alternate’ port.

296
00:22:25,850 --> 00:22:29,940
Once again, this command lists the status
as ‘blocking’, but remember the rapid

297
00:22:29,940 --> 00:22:33,770
STP name for this state is actually ‘discarding’.

298
00:22:33,770 --> 00:22:39,400
Just one note about running different STP
versions, Rapid STP IS compatible with classic

299
00:22:39,400 --> 00:22:41,020
STP.

300
00:22:41,020 --> 00:22:46,320
The interface, or interfaces, on the rapid
STP-enabled switch connected to the classic

301
00:22:46,320 --> 00:22:53,200
STP-enabled switch will operate in classic
STP mode, with the same timers, the same blocking

302
00:22:53,200 --> 00:22:57,350
to listening to learning to forwarding state
process, etc.

303
00:22:57,350 --> 00:23:03,380
So, if you have a really old switch that doesn’t
run rapid STP, you can still use it in a network

304
00:23:03,380 --> 00:23:08,950
of rapid STP-enabled switches, they will adjust
the operation of those specific interfaces

305
00:23:08,950 --> 00:23:11,100
to match the slower switch.

306
00:23:11,100 --> 00:23:18,620
So, in our network diagram, if SW4 was running
classic STP, SW2 and SW3 would make these

307
00:23:18,620 --> 00:23:24,540
interfaces run in classic STP mode, but their
interfaces connected to SW1 would remain in

308
00:23:24,540 --> 00:23:27,770
rapid STP mode.

309
00:23:27,770 --> 00:23:31,950
Next let’s look at the updated BPDU for
RSTP.

310
00:23:31,950 --> 00:23:37,300
Here on the left is the classic STP BPDU for
comparsion, I made it smaller so you can see

311
00:23:37,300 --> 00:23:40,820
the rapid STP BPDU better.

312
00:23:40,820 --> 00:23:46,580
Most of the BPDU remains unchanged, but there
are some differences you should know.

313
00:23:46,580 --> 00:23:51,100
As I mentioned last time, you don’t need
to memorize the BPDU, that’s more depth

314
00:23:51,100 --> 00:23:53,820
than is required for the CCNA.

315
00:23:53,820 --> 00:23:59,130
You just need to know a few aspects of it
and what kinds of things are included in it.

316
00:23:59,130 --> 00:24:05,680
The first difference to know between these
two BPDUs is here . Notice that the RSTP BPDU

317
00:24:05,680 --> 00:24:11,330
has a protocol version of 2, whereas classic
spanning tree has a version of 0.

318
00:24:11,330 --> 00:24:18,430
Remember these version numbers for the exam,
0 for classic STP, 2 for rapid STP.

319
00:24:18,430 --> 00:24:23,050
The rapid STP BPDU also has a BPDU type of
2.

320
00:24:23,050 --> 00:24:27,390
Now, the next difference is here.

321
00:24:27,390 --> 00:24:35,770
The classic STP BPDU uses only two bits of
the BPDU flags, the 1st bit and the 8th bit.

322
00:24:35,770 --> 00:24:41,720
However, the rapid STP BPDU uses all 8 bits.

323
00:24:41,720 --> 00:24:46,730
These flags are used in the negotiation process
that allows rapid STP to converge much faster

324
00:24:46,730 --> 00:24:48,650
than classic STP.

325
00:24:48,650 --> 00:24:54,070
That’s all you really need to know about
the rapid STP BPDU itself, compared to the

326
00:24:54,070 --> 00:24:56,140
previous version.

327
00:24:56,140 --> 00:24:58,880
But there is one more major difference.

328
00:24:58,880 --> 00:25:05,350
In classic STP, only the root bridge originated
BPDUs, the other switches just forwarded the

329
00:25:05,350 --> 00:25:07,740
BPDUs they received.

330
00:25:07,740 --> 00:25:14,600
In rapid STP, ALL switches originate and send
their own BPDUs from their designated ports.

331
00:25:14,600 --> 00:25:17,980
Let’s go through a few other differences.

332
00:25:17,980 --> 00:25:25,140
First, as I just said, all switches running
rapid STP send their own BPDUs.

333
00:25:25,140 --> 00:25:29,340
Switches also ‘age’ the BPDU information
much more quickly.

334
00:25:29,340 --> 00:25:35,410
In classic STP, a switch waits 10 hello intervals,
which is 20 seconds.

335
00:25:35,410 --> 00:25:43,050
In rapid STP, a switch considers a neighbor
lost if it misses 3 BPDUs, which is 6 seconds.

336
00:25:43,050 --> 00:25:48,690
It will then ‘flush’, meaning delete,
all MAC addresses learned on that interface.

337
00:25:48,690 --> 00:25:50,650
Why does it do this?

338
00:25:50,650 --> 00:25:54,390
Because the neighbor is down, it knows it
cant reach anything through that interface

339
00:25:54,390 --> 00:25:56,130
any more.

340
00:25:56,130 --> 00:26:04,140
For example, in this network traffic from
PC1 to PC2 usually follows this path.

341
00:26:04,140 --> 00:26:06,860
But what if this connection is cut off?

342
00:26:06,860 --> 00:26:10,370
This switch will think: I can’t reach this
neighbor anymore.

343
00:26:10,370 --> 00:26:15,950
I’ll clear all entries for this interface from
my MAC table, and its other interface will

344
00:26:15,950 --> 00:26:17,530
become the root port.

345
00:26:17,530 --> 00:26:23,090
Then, if PC1 wants to send traffic to PC2
again, it will go through the normal process

346
00:26:23,090 --> 00:26:27,679
of flooding until it learns the MAC address
on this new interface, and traffic will now

347
00:26:27,679 --> 00:26:29,450
follow this path.

348
00:26:29,450 --> 00:26:35,280
That’s just a quick look at how topology
changes are handled in rapid STP.

349
00:26:35,280 --> 00:26:40,040
There is a lot of depth that we could go into
about this, but its not necessary for the

350
00:26:40,040 --> 00:26:41,480
CCNA.

351
00:26:41,480 --> 00:26:46,420
If you want to go on to get your CCNP and
CCIE, you’ll definitely have to study these

352
00:26:46,420 --> 00:26:50,010
processes more in depth.

353
00:26:50,010 --> 00:26:54,270
Before I summarize everything and move on
to the quiz, there is one more concept of

354
00:26:54,270 --> 00:26:58,770
RSTP you should know, the RSTP link types.

355
00:26:58,770 --> 00:27:03,400
RSTP distinguishes between three different
‘link types’.

356
00:27:03,400 --> 00:27:05,740
The first type is edge.

357
00:27:05,740 --> 00:27:09,760
An edge port is a port that is connected to
an end host.

358
00:27:09,760 --> 00:27:13,360
It moves directly to forwarding without negotiation.

359
00:27:13,360 --> 00:27:15,059
Does this sound similar?

360
00:27:15,059 --> 00:27:16,650
It sounds like portfast.

361
00:27:16,650 --> 00:27:20,730
Well, the portfast functionality was built
into RSTP.

362
00:27:20,730 --> 00:27:28,770
So, there’s another STP optional feature
built into RSTP by default, UplinkFast, BackboneFast,

363
00:27:28,770 --> 00:27:31,500
and now PortFast.

364
00:27:31,500 --> 00:27:34,350
The next link type is point-to-point.

365
00:27:34,350 --> 00:27:37,800
This is used for direct connections between
two switches.

366
00:27:37,800 --> 00:27:43,120
However, there is one more type, although
it is one you probably won’t use at all.

367
00:27:43,120 --> 00:27:45,220
That type is shared.

368
00:27:45,220 --> 00:27:49,740
This is a connection to a hub, like we saw
earlier in the video.

369
00:27:49,740 --> 00:27:53,630
These connections must operate in half-duplex
to avoid collisions.

370
00:27:53,630 --> 00:27:59,750
Don’t confuse these link types with the
spanning tree port roles or port states.

371
00:27:59,750 --> 00:28:05,590
Basically, the point-to-point and shared link
types just distinguish between full- and half-duplex

372
00:28:05,590 --> 00:28:10,360
connections, and the edge type is a port that
uses portfast.

373
00:28:10,360 --> 00:28:15,330
Okay, let’s take a quick look at each type.

374
00:28:15,330 --> 00:28:19,620
As I said, edge ports are connected to end
hosts.

375
00:28:19,620 --> 00:28:23,559
Because there is no risk of creating a loop,
they can move straight to the forwarding state

376
00:28:23,559 --> 00:28:25,630
without the negotiation process.

377
00:28:25,630 --> 00:28:30,510
They function like a classic STP port with
PortFast enabled.

378
00:28:30,510 --> 00:28:34,750
In fact, you configure an edge port simply
by enabling portfast on the port.

379
00:28:34,750 --> 00:28:39,750
Here is the command, just like in classic
STP.

380
00:28:39,750 --> 00:28:45,160
So really, portfast and an RSTP edge port
are the same thing.

381
00:28:45,160 --> 00:28:49,750
In this network down here, which ports should
be configured as edge ports?

382
00:28:49,750 --> 00:28:52,690
Pause the video if you want to think about
it.

383
00:28:52,690 --> 00:28:55,450
Got the answer?

384
00:28:55,450 --> 00:29:02,260
All of these ports, the ones connected to
the PCs, should be configured as edge ports.

385
00:29:02,260 --> 00:29:04,690
Next up, point-to-point.

386
00:29:04,690 --> 00:29:08,230
These ports connect directly to another switch.

387
00:29:08,230 --> 00:29:14,390
Because they connect to a switch, not a hub,
they function in full-duplex mode.

388
00:29:14,390 --> 00:29:18,430
You don’t need to configure the interface
as point-to-point, the switch should be able

389
00:29:18,430 --> 00:29:23,690
to detect that it is connected directly to
another switch and will operate in full-duplex

390
00:29:23,690 --> 00:29:25,840
as a point-to-point port.

391
00:29:25,840 --> 00:29:32,049
However, if you want to explicitly configure
the point-to-point link type, use this command:

392
00:29:32,049 --> 00:29:35,110
SPANNING-TREE LINK-TYPE POINT-TO-POINT.

393
00:29:35,110 --> 00:29:39,810
So, which connections in the diagram are point-to-point?

394
00:29:39,810 --> 00:29:44,160
Pause the video to think about it.

395
00:29:44,160 --> 00:29:45,600
Did you find the answer?

396
00:29:45,600 --> 00:29:51,760
It’s these three, the direct connections
between two switches.

397
00:29:51,760 --> 00:29:56,210
Finally, shared ports connect to a hub.

398
00:29:56,210 --> 00:30:01,179
Due to the nature of hubs and the likelihood
of collisions, these links must function in

399
00:30:01,179 --> 00:30:03,450
half duplex.

400
00:30:03,450 --> 00:30:06,850
Once again, you don’t need to configure
the interface in shared mode, the switch will

401
00:30:06,850 --> 00:30:08,220
detect it.

402
00:30:08,220 --> 00:30:15,490
However, to manually configure it, use this
command: SPANNING-TREE LINK-TYPE SHARED.

403
00:30:15,490 --> 00:30:20,210
Although you should be aware of this type
of RSTP link, as I already said, you will

404
00:30:20,210 --> 00:30:25,299
probably never actually see this link type
in real networks, hubs are old technology

405
00:30:25,299 --> 00:30:28,010
that have been fully replaced by switches.

406
00:30:28,010 --> 00:30:31,960
So, which connections in the diagram are shared
connections?

407
00:30:31,960 --> 00:30:36,880
I think the answer is fairly obvious now,
all of the remaining ones, which are connected

408
00:30:36,880 --> 00:30:38,179
to the hub.

409
00:30:38,179 --> 00:30:43,190
So, these connections here are shared links.

410
00:30:43,190 --> 00:30:47,740
Before moving on to the quiz, let’s summarize
what we covered today.

411
00:30:47,740 --> 00:30:51,309
First up, we compared the different versions
of STP.

412
00:30:51,309 --> 00:30:58,510
The classic STP is 802.1D, and Cisco’s upgrade
is PVST+, which runs a separate spanning tree

413
00:30:58,510 --> 00:31:01,480
instance for each VLAN.

414
00:31:01,480 --> 00:31:06,290
Then the next standard version is 802.1w,
rapid spanning tree protocol.

415
00:31:06,290 --> 00:31:12,440
Cisco’s version of this is Rapid PVST+,
which again runs a separate instance for each

416
00:31:12,440 --> 00:31:14,390
VLAN.

417
00:31:14,390 --> 00:31:18,610
Then there is one more industry standard,
multiple spanning tree, with which you can

418
00:31:18,610 --> 00:31:25,220
create multiple spanning tree instances, and
group multiple VLANs within each instance.

419
00:31:25,220 --> 00:31:32,300
There is no Cisco version of MSTP, Cisco switches
run the industry standard protocol.

420
00:31:32,300 --> 00:31:37,270
Then we looked at Rapid PVST+, but actually
all of the information we looked at applies

421
00:31:37,270 --> 00:31:40,890
to the industry standard RSTP as well.

422
00:31:40,890 --> 00:31:45,650
RSTP is an evolution of classic STP.

423
00:31:45,650 --> 00:31:51,230
Instead of using timers, it uses a negotiation
process to allow it to rapidly move the necessary

424
00:31:51,230 --> 00:31:56,890
ports to a forwarding state, and rapidly adjust
to changes in the network topology.

425
00:31:56,890 --> 00:32:03,600
I didn’t mention any specifics of the negotiation
process, that level of depth is not necessary

426
00:32:03,600 --> 00:32:05,680
for the CCNA.

427
00:32:05,680 --> 00:32:10,840
I told you about the port states in RSTP,
there are only three.

428
00:32:10,840 --> 00:32:14,210
Discarding, Learning, and Forwarding.

429
00:32:14,210 --> 00:32:19,470
The listening state was deemed unnecessary,
and in fact the learning state is often skipped

430
00:32:19,470 --> 00:32:26,180
due to the built-in features of rapid STP,
like UplinkFast and BackboneFast.

431
00:32:26,180 --> 00:32:30,250
We talked about RSTP port roles, there are
four.

432
00:32:30,250 --> 00:32:35,960
Root and designated ports are the same, but
RSTP distinguishes between two types of ports

433
00:32:35,960 --> 00:32:38,540
in the discarding state.

434
00:32:38,540 --> 00:32:43,790
Alternate ports are discarding ports which
receive a superior BPDU from another switch,

435
00:32:43,790 --> 00:32:46,750
this is the usual case.

436
00:32:46,750 --> 00:32:51,850
Backup ports, on the other hand, receive a
superior BPDU from an interface on the same

437
00:32:51,850 --> 00:32:53,120
switch.

438
00:32:53,120 --> 00:32:58,710
This only occurs if connected to a hub, which
is a situation you’ll probably never encounter,

439
00:32:58,710 --> 00:33:00,270
hubs are no longer used.

440
00:33:00,270 --> 00:33:08,250
I also mentioned some optional features of
classic STP which were built into RSTP.

441
00:33:08,250 --> 00:33:13,360
First I showed you UplinkFast and BackboneFast,
but PortFast is also built in, through the

442
00:33:13,360 --> 00:33:15,919
edge port function.

443
00:33:15,919 --> 00:33:20,500
Although you have to know PortFast for the
CCNA, you don’t need a detailed understanding

444
00:33:20,500 --> 00:33:22,840
of UplinkFast and BackboneFast.

445
00:33:22,840 --> 00:33:30,740
I briefly showed you the RSTP BPDU, just remember
that the protocol version in an RSTP BPDU

446
00:33:30,740 --> 00:33:35,510
is 2, whereas in classic STP it’s 0.

447
00:33:35,510 --> 00:33:41,340
Also remember the important point that in
RSTP ALL switches send BPDUs, not just the

448
00:33:41,340 --> 00:33:42,559
root bridge.

449
00:33:42,559 --> 00:33:47,710
Finally, I showed you the RSTP link types.

450
00:33:47,710 --> 00:33:52,880
Edge ports are connected to end hosts, and
you configure an edge port by enabling portfast

451
00:33:52,880 --> 00:33:55,799
on the interface.

452
00:33:55,799 --> 00:34:00,330
Point-to-point means it is connected directly
to another switch, and shared means it is

453
00:34:00,330 --> 00:34:04,790
connected to a hub, and must use half-duplex.

454
00:34:04,790 --> 00:34:09,559
As I said before, hubs aren’t really used
anymore, so you probably won’t see a ‘shared’

455
00:34:09,560 --> 00:34:13,920
link type in any real networks.

456
00:34:13,920 --> 00:34:17,019
Okay let’s move on to the quiz.

457
00:34:17,019 --> 00:34:21,179
After a few quiz questions, let’s take a
look at my favorite set of practice exams

458
00:34:21,179 --> 00:34:26,009
for the CCNA, Boson Software’s ExSim.

459
00:34:26,009 --> 00:34:31,129
Back before I started this YouTube channel,
I used Boson ExSim to prepare for my CCNA

460
00:34:31,129 --> 00:34:37,159
and CCNP exams, and I really think ExSim played
a big role in me passing all of my exams on

461
00:34:37,159 --> 00:34:39,249
the first try.

462
00:34:39,249 --> 00:34:44,179
The questions are very similar to the questions
on the real CCNA exam, and Boson gives in

463
00:34:44,179 --> 00:34:48,999
depth explanations which really help deepen
your understanding of the topics.

464
00:34:48,999 --> 00:34:54,569
Okay, now continuing on from quiz question
1, which we did earlier in the video, let’s

465
00:34:54,569 --> 00:34:57,700
go to quiz question 2.

466
00:34:57,700 --> 00:35:04,890
Which IEEE 802.1D optional features were built
in to the IEEE 802.1w standard, and allow

467
00:35:04,890 --> 00:35:07,910
ports to move rapidly to the forwarding state?

468
00:35:07,910 --> 00:35:09,029
Select three.

469
00:35:09,029 --> 00:35:12,989
A, root guard, B, portfast.

470
00:35:12,989 --> 00:35:15,670
C, BPDU guard.

471
00:35:15,670 --> 00:35:17,460
D, uplinkfast.

472
00:35:17,460 --> 00:35:19,239
E, backbonefast.

473
00:35:19,239 --> 00:35:21,089
F, loop guard.

474
00:35:21,089 --> 00:35:23,210
Or G, rootfast.

475
00:35:23,210 --> 00:35:29,020
Pause the video to think about your answers.

476
00:35:29,020 --> 00:35:36,180
The answers are B, portfast.  D, uplinkfast, and e, backbonefast.

477
00:35:36,180 --> 00:35:43,811
A, root guard, C BPDU guard, and F, loop guard,
are spanning tree optional features, but they

478
00:35:43,811 --> 00:35:49,500
are not features built in to RSTP that allow
ports to move rapidly to the forwarding state.

479
00:35:49,500 --> 00:35:54,279
G, rootfast, is not a real STP optional feature.

480
00:35:54,279 --> 00:36:00,119
B, portfast, allows edge ports, connected
to end hosts, to move rapidly to the forwarding

481
00:36:00,119 --> 00:36:01,220
state.

482
00:36:01,220 --> 00:36:08,140
D, uplinkfast, and E, backbonefast, allow
ports to move rapidly to forwarding in certain

483
00:36:08,140 --> 00:36:10,299
cases of interface failure.

484
00:36:10,299 --> 00:36:14,390
Let’s go to question 3.

485
00:36:14,390 --> 00:36:19,940
You want to configure an 802.1w edge port,
so that hosts connected to the interface can

486
00:36:19,940 --> 00:36:23,250
begin sending traffic over the network immediately.

487
00:36:23,250 --> 00:36:26,000
Which command should you use?

488
00:36:26,000 --> 00:36:29,359
A, spanning-tree link-type edge.

489
00:36:29,359 --> 00:36:33,069
B, spanning-tree mode edge.

490
00:36:33,069 --> 00:36:37,190
C, spanning-tree link-type portfast.

491
00:36:37,190 --> 00:36:40,490
Or D, spanning-tree portfast.

492
00:36:40,490 --> 00:36:47,319
Pause the video to think about your answer.

493
00:36:47,319 --> 00:36:51,559
The answer is D, spanning-tree portfast.

494
00:36:51,559 --> 00:36:56,499
Although ‘edge’ is a link type in RSTP,
you don’t use the spanning-tree link-type

495
00:36:56,499 --> 00:37:01,930
command to configure it, and the command doesn’t
even include the word edge.

496
00:37:01,930 --> 00:37:07,589
To configure an RSTP edge port, simply configure
portfast on the interface with the command

497
00:37:07,589 --> 00:37:09,450
SPANNING-TREE PORTFAST.

498
00:37:09,450 --> 00:37:14,529
Okay, let’s do one more quiz question.

499
00:37:14,529 --> 00:37:17,640
Identify the root bridge in this network.

500
00:37:17,640 --> 00:37:21,309
What is the RSTP port role of each switch
(port)?

501
00:37:21,309 --> 00:37:26,299
What is the appropriate RSTP link type of
each connection between devices?

502
00:37:26,299 --> 00:37:31,390
This is a pretty long question, I recommend
taking a screenshot and writing the port roles

503
00:37:31,390 --> 00:37:35,960
and link types on the screenshot so you can
remember everything.

504
00:37:35,960 --> 00:37:42,700
Pause the video now to find the answers.

505
00:37:42,700 --> 00:37:45,460
Okay, hopefully you solved it.

506
00:37:45,460 --> 00:37:49,789
The root bridge is SW1, it has the lowest
priority.

507
00:37:49,789 --> 00:37:52,670
How about all of the root ports in the network?

508
00:37:52,670 --> 00:37:53,670
Here they are.

509
00:37:53,670 --> 00:38:00,820
SW4 picked it’s G0/0 interface because SW3
has a lower bridge ID than SW2, even though

510
00:38:00,820 --> 00:38:05,299
they have the same root cost because the hub
doesn’t add any cost.

511
00:38:05,299 --> 00:38:08,809
So, these are the designated ports.

512
00:38:08,809 --> 00:38:15,279
Why was an interface on SW2 and not SW4
selected to be designated?

513
00:38:15,279 --> 00:38:18,130
Because SW2 has the lower root cost.

514
00:38:18,130 --> 00:38:22,529
Finally, the discarding interfaces.

515
00:38:22,529 --> 00:38:28,170
Notice that there is one backup interface,
SW2’s G0/2 interface.

516
00:38:28,170 --> 00:38:34,160
This is because it receives a superior BPDU
from an interface on the same switch, the

517
00:38:34,160 --> 00:38:35,740
G0/1 interface.

518
00:38:35,740 --> 00:38:39,079
Now, how about the link types?

519
00:38:39,079 --> 00:38:43,339
All of these ports connected to end hosts
should be edge ports.

520
00:38:43,339 --> 00:38:48,180
All of these full-duplex connections between
switches are point-to-point links, and these

521
00:38:48,180 --> 00:38:52,670
half-duplex connections with the hub are shared
links.

522
00:38:52,670 --> 00:38:57,920
If you had trouble with this, you should review
the spanning tree videos, including this one,

523
00:38:57,920 --> 00:39:02,180
and if you still don’t understand feel free
to ask a question in the comment section.

524
00:39:02,180 --> 00:39:07,500
Okay, now let’s check out a question from
Boson ExSim for CCNA.

525
00:39:07,500 --> 00:39:14,200
Okay, for today's Boson ExSim practice question,
I picked a question that mentions edge ports,

526
00:39:14,200 --> 00:39:15,989
something you just learned about.

527
00:39:15,989 --> 00:39:17,880
So here's the question.

528
00:39:17,880 --> 00:39:23,059
Which of the following optional STP features
reduces convergence time by immediately placing

529
00:39:23,059 --> 00:39:26,309
edge ports into a forwarding state?

530
00:39:26,309 --> 00:39:27,829
Select the best answer.

531
00:39:27,829 --> 00:39:29,430
So there are five options.

532
00:39:29,430 --> 00:39:31,190
A, root guard.

533
00:39:31,190 --> 00:39:32,960
B, BPDU guard.

534
00:39:32,960 --> 00:39:34,140
C, PortFast.

535
00:39:34,140 --> 00:39:35,910
D, BPDU filter.

536
00:39:35,910 --> 00:39:43,720
And E, loop guard.  Pause the video to think about your answer.

537
00:39:43,720 --> 00:39:45,940
Okay, did you find your answer?

538
00:39:45,940 --> 00:39:49,460
So, first of all what is an edge port?

539
00:39:49,470 --> 00:39:53,920
Well it's a port at the edge of the network,
meaning it's connected to end hosts, it's

540
00:39:53,920 --> 00:39:57,869
not the internal network between the switches.

541
00:39:57,869 --> 00:40:04,799
So, which optional feature places ports connected
to end hosts immediately into a forwarding

542
00:40:04,799 --> 00:40:05,799
state?

543
00:40:05,799 --> 00:40:10,880
You should know the answer by now, it is C,
PortFast.

544
00:40:10,880 --> 00:40:14,489
If you're actually doing a practice exam you
can click next to go to the next question,

545
00:40:14,489 --> 00:40:17,500
but let's check the answer, show answer.

546
00:40:17,500 --> 00:40:20,130
Okay, and we are correct.

547
00:40:20,130 --> 00:40:24,869
So you can see it gives quite a detailed explanation,
and this is really the great thing about Boson

548
00:40:24,869 --> 00:40:27,940
ExSim, about their practice exams.

549
00:40:27,940 --> 00:40:32,390
Not only does it tell you why PortFast is
the correct answer, but here it gives you

550
00:40:32,390 --> 00:40:35,920
a brief summary of each of these other optional
features.

551
00:40:35,920 --> 00:40:41,479
Loop guard, root guard, BPDU guard and BPDU
filter.

552
00:40:41,479 --> 00:40:45,229
So you can know why they are not the correct
answer.

553
00:40:45,229 --> 00:40:50,029
After all that it gives some references to
the official cert guide here, this is from

554
00:40:50,029 --> 00:40:54,170
chapter 9, optional STP features.

555
00:40:54,170 --> 00:40:58,109
And then also some Cisco documentation that
you can read online for free, and this is

556
00:40:58,109 --> 00:41:02,900
another great study resource by the way, Cisco's
official documentation.

557
00:41:02,900 --> 00:41:07,910
Okay, if you want to get a copy of Boson ExSim
for yourself, please follow the link in the

558
00:41:07,910 --> 00:41:09,880
video description.

559
00:41:09,880 --> 00:41:15,420
I used Boson ExSim myself for my CCNA and
CCNP and I really think they were essential

560
00:41:15,420 --> 00:41:18,859
in helping me pass all of my exams on the
first try.

561
00:41:18,859 --> 00:41:22,400
So once again, please click that link in the
video description and get a copy of Boson

562
00:41:22,400 --> 00:41:25,289
ExSim.

563
00:41:25,289 --> 00:41:28,750
There are supplementary materials for this
video.

564
00:41:28,750 --> 00:41:32,740
There is a flashcard deck to use with the
software ‘Anki’, download it from the

565
00:41:32,740 --> 00:41:37,140
link in the description and use the flashcards
to review the concepts you learned in this

566
00:41:37,140 --> 00:41:38,140
video.

567
00:41:38,140 --> 00:41:44,339
There will also be a packet tracer practice
lab so you can get some hands-on practice.

568
00:41:44,339 --> 00:41:47,839
That will be in the next video.

569
00:41:47,839 --> 00:41:53,049
Before finishing today’s video I want to
thank my JCNP-level channel members.

570
00:41:53,049 --> 00:42:01,880
Thank you to tibi, vikram, Joyce, Marek, Samil,
velvijaykum, C Mohd, Johan, Mark, Miguel,

571
00:42:01,880 --> 00:42:08,339
Yousif, Kone, Boson Software, the creators
of ExSim, Sidi, Magrathea, Devin, Charlsetta,

572
00:42:08,339 --> 00:42:12,450
Lito, Yonatan, Mike, Aleksander, Vance, and
Gerrard.

573
00:42:12,450 --> 00:42:18,319
Sorry if I pronounced your name incorrectly,
but thank you so much for your support.

574
00:42:18,319 --> 00:42:22,569
One of you is still displaying as Channel
failed to load, if this is you please let

575
00:42:22,569 --> 00:42:25,839
me know and I’ll see if YouTube can fix
it.

576
00:42:25,839 --> 00:42:31,479
This is the list of JCNP-level members at
the time of recording by the way, May 27th

577
00:42:31,479 --> 00:42:36,030
2020, if you signed up recently and your name
isn’t on here don’t worry, you’ll be

578
00:42:36,030 --> 00:42:39,579
in future videos.

579
00:42:39,579 --> 00:42:41,160
Thank you for watching.

580
00:42:41,160 --> 00:42:45,200
Please subscribe to the channel, like the
video, leave a comment, and share the video

581
00:42:45,200 --> 00:42:48,400
with anyone else studying for the CCNA.

582
00:42:48,400 --> 00:42:51,190
If you want to leave a tip, check the links
in the description.

583
00:42:51,190 --> 00:42:57,719
I'm also a Brave verified publisher and accept
BAT, or Basic Attention Token, tips via the

584
00:42:57,719 --> 00:42:58,719
Brave browser.

585
00:42:58,720 --> 00:42:59,980
That's all for now.
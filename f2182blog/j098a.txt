1
00:00:02,090 --> 00:00:04,480
Welcome to Jeremy’s IT Lab.

2
00:00:04,480 --> 00:00:07,880
This is a free, complete course for the CCNA.

3
00:00:07,880 --> 00:00:11,790
If you like these videos, please subscribe
to follow along with the series.

4
00:00:11,790 --> 00:00:16,650
Also, please like and leave a comment, and
share the video to help spread this free series

5
00:00:16,650 --> 00:00:17,760
of videos.

6
00:00:17,760 --> 00:00:19,530
Thanks for your help.

7
00:00:19,530 --> 00:00:23,270
In this video we’ll cover Dynamic ARP Inspection.

8
00:00:23,270 --> 00:00:29,180
Dynamic ARP Inspection, also called DAI, is
covered in exam topic 5.7, which says you

9
00:00:29,180 --> 00:00:35,690
must be able to configure Layer 2 security
features, including DHCP snooping, DAI, and

10
00:00:35,690 --> 00:00:36,720
port security.

11
00:00:36,720 --> 00:00:42,120
We covered DHCP snooping and port security
in the previous two videos, so this video

12
00:00:42,120 --> 00:00:45,460
will finish up topic 5.7.

13
00:00:45,460 --> 00:00:49,980
Dynamic ARP inspection is a security feature
of switches which inspects ARP messages in

14
00:00:49,980 --> 00:00:54,660
a similar manner to how DHCP snooping inspects
DHCP messages.

15
00:00:54,660 --> 00:00:59,410
So, this video will follow a similar structure
to the previous video.

16
00:00:59,410 --> 00:01:02,350
Here’s what we’ll cover in this video.

17
00:01:02,350 --> 00:01:05,530
First, what is dynamic ARP inspection?

18
00:01:05,530 --> 00:01:09,170
I’ll give a brief overview, and then introduce
how it works.

19
00:01:09,170 --> 00:01:14,579
I’ll show you what attacks it can be used
to prevent, and then how to configure it as

20
00:01:14,579 --> 00:01:18,219
we look into more details of its operations.

21
00:01:18,219 --> 00:01:22,439
Watch until the end of the video for a bonus
practice question from Boson Software’s

22
00:01:22,439 --> 00:01:28,700
ExSim for CCNA, my recommended practice exams
for the CCNA.

23
00:01:28,700 --> 00:01:32,880
Before dynamic ARP inspection, let’s quickly
review ARP itself.

24
00:01:32,880 --> 00:01:38,359
ARP is used to learn the MAC address of another
device with a known IP address.

25
00:01:38,359 --> 00:01:43,659
For example, a PC will use ARP to learn the
MAC address of its default gateway to communicate

26
00:01:43,659 --> 00:01:45,689
with external networks.

27
00:01:45,689 --> 00:01:50,099
It will also use ARP to learn the MAC address
of any other device on the local network.

28
00:01:50,099 --> 00:01:56,659
Typically it’s a two message exchange, consisting
of an ARP request and then a reply.

29
00:01:56,659 --> 00:01:58,960
Let’s look at an example.

30
00:01:58,960 --> 00:02:06,229
For example, PC1 wants to send a DNS query
to the DNS server at 8.8.8.8.

31
00:02:06,229 --> 00:02:11,060
It thinks, 8.8.8.8 is outside of my local
network, so I should send the frame to my

32
00:02:11,060 --> 00:02:13,280
default gateway, 192.168.1.1.

33
00:02:13,280 --> 00:02:21,239
However, PC1 doesn’t know the MAC address
of 192.168.1.1, which is R1.

34
00:02:21,239 --> 00:02:27,640
So, it will broadcast this ARP request message,
destined for R1’s IP address.

35
00:02:27,640 --> 00:02:32,769
Every device in the LAN will receive the message,
because the destination MAC address is the

36
00:02:32,769 --> 00:02:35,530
broadcast MAC address of all Fs.

37
00:02:35,530 --> 00:02:39,609
Let’s look at that ARP request in wireshark.

38
00:02:39,609 --> 00:02:45,010
The ARP message is encapsulated in an Ethernet
frame of course, but there is no IP header.

39
00:02:45,010 --> 00:02:50,180
So, in the previous slide when I wrote ‘source
IP’ and ‘destination IP’ for the ARP

40
00:02:50,180 --> 00:02:55,680
message, I’m actually referring to these
fields in the ARP message itself.

41
00:02:55,680 --> 00:03:00,629
Specifically the sender IP address, which
is the source IP address, and the target IP

42
00:03:00,629 --> 00:03:04,819
address, which is the destination IP address.

43
00:03:04,819 --> 00:03:09,540
ARP messages are only broadcast within the
local network, not sent by routers to external

44
00:03:09,540 --> 00:03:14,230
networks, so there’s no need to encapsulate
the ARP message in an IP header.

45
00:03:14,230 --> 00:03:20,859
Keep these fields in mind, sender MAC and
IP address, as well as target MAC and IP address,

46
00:03:20,859 --> 00:03:25,600
they can play a role in the dynamic ARP inspection
process.

47
00:03:25,600 --> 00:03:31,319
Because its IP address was in the ARP message’s
target IP address field, R1 will then send

48
00:03:31,319 --> 00:03:38,120
an ARP reply to PC1 so that PC1 can learn
R1’s MAC address and add an entry for R1

49
00:03:38,120 --> 00:03:40,099
in its ARP table.

50
00:03:40,099 --> 00:03:46,260
Note that R1 also added an entry for PC1 in
its own ARP table when it received the original

51
00:03:46,260 --> 00:03:51,739
ARP request from PC1, so R1 doesn’t need
to send an ARP request if it wants to send

52
00:03:51,739 --> 00:03:53,480
a frame to PC1.

53
00:03:53,480 --> 00:03:57,340
Here’s that ARP reply in Wireshark.

54
00:03:57,340 --> 00:04:03,189
The sender IP and MAC fields are R1’s addresses,
and the destination IP and MAC fields are

55
00:04:03,189 --> 00:04:05,299
PC1’s addresses.

56
00:04:05,299 --> 00:04:07,890
Pause the video if you want to check out the
message.

57
00:04:07,890 --> 00:04:15,889
So, PC1 is now able to insert R1’s MAC address
as the destination MAC of its DNS query, and

58
00:04:15,889 --> 00:04:19,720
then send the message to R1 which will forward
it over the Internet.

59
00:04:19,720 --> 00:04:24,020
So, that’s the basic ARP process.

60
00:04:24,020 --> 00:04:28,180
But there is also something called gratuitous
ARP, which I introduced briefly in another

61
00:04:28,180 --> 00:04:29,180
video.

62
00:04:29,180 --> 00:04:36,270
A gratuitous ARP message is an ARP reply that
is sent without receiving an ARP request.

63
00:04:36,270 --> 00:04:39,960
It is sent to the broadcast MAC address, all
Fs.

64
00:04:39,960 --> 00:04:42,870
Note that standard ARP replies are not broadcast.

65
00:04:42,870 --> 00:04:48,750
They are unicast messages sent to the device
that sent the ARP request.

66
00:04:48,750 --> 00:04:52,930
Gratuitous ARP allows other devices on the
local network to learn the MAC address of

67
00:04:52,930 --> 00:04:58,729
the device that sent the gratuitous ARP, and
they don’t have to send ARP requests.

68
00:04:58,729 --> 00:05:04,020
This depends on the device maker, but some
devices automatically send gratuitous ARP

69
00:05:04,020 --> 00:05:10,389
messages when an interface is enabled, IP
address is changed, MAC address is changed,

70
00:05:10,389 --> 00:05:11,389
etc.

71
00:05:11,389 --> 00:05:16,639
So, for example if PC2’s network interface
is enabled it might send this gratuitous ARP

72
00:05:16,639 --> 00:05:20,490
reply, and it is flooded in the local network.

73
00:05:20,490 --> 00:05:25,370
Now the other devices will add an ARP entry
for PC2 in their ARP tables, and the switches

74
00:05:25,370 --> 00:05:28,810
also add entries for PC2 in their MAC address
tables.

75
00:05:28,810 --> 00:05:34,180
We’ll come back to the concept of gratuitous
ARP when we cover an attack involving it,

76
00:05:34,180 --> 00:05:35,840
but now let’s move on.

77
00:05:35,840 --> 00:05:39,250
Okay, let’s move on to Dynamic ARP Inspection.

78
00:05:39,250 --> 00:05:44,310
DAI is a feature of switches that is used
to filter ARP messages received on untrusted

79
00:05:44,310 --> 00:05:45,840
ports.

80
00:05:45,840 --> 00:05:47,650
It only filters ARP messages.

81
00:05:47,650 --> 00:05:50,610
All other messages will be unaffected.

82
00:05:50,610 --> 00:05:54,870
Just like DHCP snooping, all ports are untrusted
by default.

83
00:05:54,870 --> 00:06:00,690
Typically, all ports connected to other network
devices, for example switches or routers,

84
00:06:00,690 --> 00:06:06,229
should be configured as trusted, while interfaces
connected to end hosts should remain untrusted.

85
00:06:06,229 --> 00:06:11,970
So, in this network that means we should configure
these interfaces as trusted, but leave these

86
00:06:11,970 --> 00:06:13,840
interfaces as untrusted.

87
00:06:13,840 --> 00:06:19,949
Now, SW2’s interface connected to SW1 could
also be left as untrusted because it is a

88
00:06:19,949 --> 00:06:22,430
downlink leading toward the end hosts.

89
00:06:22,430 --> 00:06:24,190
Either design will work.

90
00:06:24,190 --> 00:06:29,270
In Cisco’s documentation they recommend
that all interfaces connected to switches,

91
00:06:29,270 --> 00:06:34,780
routers, etc. are configured as trusted, so
that’s why I made the interface trusted.

92
00:06:34,780 --> 00:06:41,080
Here’s how DAI works, and you’ll see it’s
basically the same as DHCP snooping.

93
00:06:41,080 --> 00:06:43,789
PC1 sends an ARP request.

94
00:06:43,789 --> 00:06:49,040
Because it arrives on an untrusted port, SW1
uses DAI to inspect it.

95
00:06:49,040 --> 00:06:53,500
It determines the message is OK, so it forwards
it to SW2.

96
00:06:53,500 --> 00:06:58,520
In this case SW2 doesn’t inspect it, because
it receives the message on a trusted interface,

97
00:06:58,520 --> 00:07:02,389
so it forwards it to R1, which sends the reply.

98
00:07:02,389 --> 00:07:09,500
This message isn’t inspected by SW2 or SW1,
because they receive it on trusted interfaces.

99
00:07:09,500 --> 00:07:15,340
This time PC2 sends an ARP message, but SW1
inspects it and decides to discard the message

100
00:07:15,340 --> 00:07:17,900
because it violates the rules of DAI.

101
00:07:17,900 --> 00:07:24,259
I’ll explain exactly how DAI determines
if a message is okay or not later, but now

102
00:07:24,259 --> 00:07:26,849
let me show you an ARP-based attack.

103
00:07:26,849 --> 00:07:33,080
So, this is the ARP poisoning attack, which
I briefly mentioned in a previous video.

104
00:07:33,080 --> 00:07:39,110
Similar to DHCP poisoning, ARP poisoning involves
an attacker manipulating targets’ ARP tables

105
00:07:39,110 --> 00:07:42,189
so traffic is sent to the attacker.

106
00:07:42,189 --> 00:07:48,979
To do this, the attacker can send gratuitous
ARP messages using another device’s IP address.

107
00:07:48,979 --> 00:07:54,219
Another option is to send replies to the targets’
legitimate ARP request messages, but I’ll

108
00:07:54,219 --> 00:07:57,530
use gratuitous ARP for this demonstration.

109
00:07:57,530 --> 00:08:01,979
Other devices will receive the gratuitous
ARP and update their ARP tables, causing them

110
00:08:01,979 --> 00:08:06,860
to send traffic to the attacker instead of
the legitimate destination.

111
00:08:06,860 --> 00:08:12,780
For example, the attacker PC2 sends a GARP
message using the IP address of the default

112
00:08:12,780 --> 00:08:14,930
gateway, R1.

113
00:08:14,930 --> 00:08:18,330
It is flooded through the network, and all
devices receive it.

114
00:08:18,330 --> 00:08:26,470
So, they update their ARP tables to map PC2’s
MAC address to the IP address 192.168.1.1.

115
00:08:26,470 --> 00:08:33,450
By the way, R1 doesn’t update its ARP table,
because 192.168.1.1 is its own IP address.

116
00:08:33,450 --> 00:08:40,380
Now, if PC1 wants to send this packet to an
external network, it is sent to PC2 first.

117
00:08:40,380 --> 00:08:45,860
PC2 can save a copy of the message for future
inspection and then forward it to the legitimate

118
00:08:45,860 --> 00:08:47,940
default gateway, R1.

119
00:08:47,940 --> 00:08:52,650
It’s possible that PC2 could also manipulate
the information in the packet.

120
00:08:52,650 --> 00:08:58,120
So, this is how ARP can be used to perform
a man in the middle attack, similar to the

121
00:08:58,120 --> 00:09:02,260
DHCP poisoning attack shown in the previous
video.

122
00:09:02,260 --> 00:09:06,100
Now let’s see how DAI can protect against
this kind of attack.

123
00:09:06,100 --> 00:09:10,700
First, here’s a summary of how DAI works.

124
00:09:10,700 --> 00:09:16,420
DAI inspects the sender MAC and sender IP
fields of ARP messages received on untrusted

125
00:09:16,420 --> 00:09:21,820
ports and checks if there is a matching entry
in the DHCP snooping binding table.

126
00:09:21,820 --> 00:09:28,170
So, I showed you in the previous video that
DHCP snooping creates a binding table, and

127
00:09:28,170 --> 00:09:33,970
as you can see the MAC addresses and IP addresses
of DHCP clients are entered here.

128
00:09:33,970 --> 00:09:40,660
So, DAI checks ARP messages and if there is
a matching entry in the DHCP snooping table,

129
00:09:40,660 --> 00:09:43,020
the ARP message is forwarded normally.

130
00:09:43,020 --> 00:09:44,740
DAI trusts the message.

131
00:09:44,740 --> 00:09:50,100
However, if there isn’t a matching entry
in the DHCP snooping binding table the ARP

132
00:09:50,100 --> 00:09:52,530
message is discarded.

133
00:09:52,530 --> 00:09:58,030
Note that this check only occurs on untrusted
ports, DAI doesn’t inspect messages received

134
00:09:58,030 --> 00:09:59,700
on trusted ports.

135
00:09:59,700 --> 00:10:01,780
They are forwarded as normal.

136
00:10:01,780 --> 00:10:07,790
However, just like in DHCP snooping all ports
are untrusted by default, so you have to manually

137
00:10:07,790 --> 00:10:10,380
specify which ports are trusted.

138
00:10:10,380 --> 00:10:16,821
So, DAI operations are usually reliant on
DHCP snooping, but actually there is another

139
00:10:16,821 --> 00:10:18,350
option.

140
00:10:18,350 --> 00:10:24,451
ARP ACLs can be manually configured to map
IP addresses and MAC addresses for DAI to

141
00:10:24,451 --> 00:10:25,780
check.

142
00:10:25,780 --> 00:10:29,500
This can be useful for hosts that don’t
use DHCP.

143
00:10:29,500 --> 00:10:35,410
If they don’t use DHCP, they won’t have
an entry in the DHCP snooping table, so DAI

144
00:10:35,410 --> 00:10:38,920
will just drop all ARP messages they try to
send.

145
00:10:38,920 --> 00:10:42,570
You can configure ARP ACLs for these specific
hosts.

146
00:10:42,570 --> 00:10:46,100
Or all hosts if you want, but that’s a lot
of manual work.

147
00:10:46,100 --> 00:10:50,190
I’ll show you how to configure ARP ACLs
later.

148
00:10:50,190 --> 00:10:55,830
In addition to the sender MAC and sender IP
fields, DAI can be configured to perform more

149
00:10:55,830 --> 00:10:58,670
in-depth checks, but these are optional.

150
00:10:58,670 --> 00:11:01,570
I’ll briefly introduce them later.

151
00:11:01,570 --> 00:11:07,770
And like DHCP snooping, DAI also supports
rate-limiting to prevent attackers from overwhelming

152
00:11:07,770 --> 00:11:09,540
the switch with ARP messages.

153
00:11:09,540 --> 00:11:16,390
I didn’t mention this in the last video,
but DHCP snooping and DAI both require work

154
00:11:16,390 --> 00:11:18,310
from the switch’s CPU.

155
00:11:18,310 --> 00:11:23,050
So, even if the attacker’s messages are
blocked they can still overload the switch

156
00:11:23,050 --> 00:11:26,660
CPU by sending a ton of ARP messages.

157
00:11:26,660 --> 00:11:31,360
If the attacker tries to do that, rate limiting
will just disable the interface, so it’s

158
00:11:31,360 --> 00:11:34,850
a useful mitigation technique.

159
00:11:34,850 --> 00:11:38,210
Now let’s move on to DAI configuration.

160
00:11:38,210 --> 00:11:42,650
First up, the basic commands to enable it
and configure trusted ports.

161
00:11:42,650 --> 00:11:50,440
First, use IP ARP INSPECTION VLAN, followed
by the VLAN number, to enable DAI on a VLAN.

162
00:11:50,440 --> 00:11:53,220
In this network I’m using VLAN 1 only.

163
00:11:53,220 --> 00:11:58,480
However, if there are multiple VLANs, you
should enable DAI for each VLAN.

164
00:11:58,480 --> 00:12:05,660
If you don’t, only ARP messages in the specified
VLAN, VLAN 1 in this case, will be inspected.

165
00:12:05,660 --> 00:12:12,980
Then I configured SW2’s G0/0 and G0/1 interfaces
as trusted ports with the command IP ARP INSPECTION

166
00:12:12,980 --> 00:12:14,170
TRUST.

167
00:12:14,170 --> 00:12:20,760
And that’s it, those are the basic commands
to enable DAI and configure trusted ports.

168
00:12:20,760 --> 00:12:26,430
Then I did the same configurations on SW1,
but only made its G0/0 interface trusted.

169
00:12:26,430 --> 00:12:33,600
Now, you might have noticed a difference between
DHCP snooping configuration and DAI configuration.

170
00:12:33,600 --> 00:12:41,360
DHCP requires two commands to enable it, IP
DHCP SNOOPING and IP DHCP SNOOPING VLAN.

171
00:12:41,360 --> 00:12:45,210
So, enable it globally and then enable it
per VLAN.

172
00:12:45,210 --> 00:12:50,971
DAI is different, you only have to enable
it per VLAN with the command IP ARP INSPECTION

173
00:12:50,971 --> 00:12:52,610
VLAN.

174
00:12:52,610 --> 00:12:56,710
Honestly I’m not sure the reason for this
difference, but that’s how it works.

175
00:12:56,710 --> 00:13:03,700
Okay let’s check out one of the DAI show
commands, SHOW IP ARP INSPECTION INTERFACES.

176
00:13:03,700 --> 00:13:07,950
First, you can see the trust state of each
interface.

177
00:13:07,950 --> 00:13:12,650
On SW1 only G0/0 is trusted, as I configured.

178
00:13:12,650 --> 00:13:16,340
This column shows us the DAI rate limiting
settings.

179
00:13:16,340 --> 00:13:23,070
There are a few differences between DHCP snooping
rate limiting and DAI rate limiting.

180
00:13:23,070 --> 00:13:27,730
DAI rate limiting is enabled on untrusted
ports by default with a rate of 15 packets

181
00:13:27,730 --> 00:13:32,670
per second, but it is disabled on trusted
ports by default.

182
00:13:32,670 --> 00:13:38,080
In the case of DHCP snooping, rate limiting
is disabled on all interfaces, trusted and

183
00:13:38,080 --> 00:13:40,700
untrusted, by default.

184
00:13:40,700 --> 00:13:43,580
And this column shows us one more difference.

185
00:13:43,580 --> 00:13:47,320
DHCP snooping rate limiting is configured
like this.

186
00:13:47,320 --> 00:13:49,310
X packets per second.

187
00:13:49,310 --> 00:13:54,380
However DAI has a feature called the burst
interval which allows you to configure rate

188
00:13:54,380 --> 00:13:57,810
limiting like X packets per Y seconds.

189
00:13:57,810 --> 00:14:02,350
So, the interval being measured doesn’t
have to be one second, which provides more

190
00:14:02,350 --> 00:14:06,700
flexibility with how you can control the rate
of ARP messages on the interface.

191
00:14:06,700 --> 00:14:12,930
Okay, since I just brought up DAI rate limiting
let’s see how to configure it.

192
00:14:12,930 --> 00:14:16,880
Let’s configure DAI rate limiting on SW1.

193
00:14:16,880 --> 00:14:25,600
First, on G0/1 and 2 I used IP ARP INSPECTION
LIMIT RATE 25, that means 25 packets, and

194
00:14:25,600 --> 00:14:29,010
then BURST INTERVAL 2, that means 2 seconds.

195
00:14:29,010 --> 00:14:36,380
So, I changed the rate from 15 packets per
second to 25 packets per 2 seconds.

196
00:14:36,380 --> 00:14:38,920
Note that the burst interval is optional.

197
00:14:38,920 --> 00:14:42,510
If you don’t specify it, the default is
1 second.

198
00:14:42,510 --> 00:14:49,110
To demonstrate, on G0/3 I configured IP ARP
INSPECTION LIMIT RATE 10, without specifying

199
00:14:49,110 --> 00:14:51,100
the burst interval.

200
00:14:51,100 --> 00:14:53,420
And here you can see the results.

201
00:14:53,420 --> 00:15:00,880
For G0/1 and 2 it’s 25 packets per 2 seconds,
and for G0/3 it’s 10 packets per second.

202
00:15:00,880 --> 00:15:05,550
So, that’s how DAI rate limiting is configured.

203
00:15:05,550 --> 00:15:11,910
If ARP messages are received faster than the
specified rate, the interface will be err-disabled.

204
00:15:11,910 --> 00:15:16,970
Let me emphasize that, rate limiting limits
the rate that ARP messages are received on

205
00:15:16,970 --> 00:15:19,950
an interface, not sent by an interface.

206
00:15:19,950 --> 00:15:26,110
Anyway, interfaces disabled by ARP inspection
can be re-enabled manually with SHUTDOWN and

207
00:15:26,110 --> 00:15:30,690
NO SHUTDOWN on the interface, or with err-disable
recovery.

208
00:15:30,690 --> 00:15:35,410
The command is ERRDISABLE RECOVERY CAUSE ARP-INSPECTION.

209
00:15:35,410 --> 00:15:40,750
I configured err-disable recovery on SW1,
and as you can see it is enabled when I check

210
00:15:40,750 --> 00:15:42,670
with SHOW ERRDISABLE RECOVERY.

211
00:15:42,670 --> 00:15:47,170
Okay, that’s all for DAI rate limiting.

212
00:15:47,170 --> 00:15:51,080
Now let me introduce those additional checks
I mentioned before.

213
00:15:51,080 --> 00:15:56,020
By default, DAI checks the sender MAC and
IP addresses, to see if there is a matching

214
00:15:56,020 --> 00:15:59,850
entry in the DHCP snooping binding table or
not.

215
00:15:59,850 --> 00:16:05,370
However, additional checks can be performed
by configuring the IP ARP INSPECTION VALIDATE

216
00:16:05,370 --> 00:16:06,440
command.

217
00:16:06,440 --> 00:16:11,360
The three options are destination MAC, IP,
and source MAC.

218
00:16:11,360 --> 00:16:12,900
How exactly do these work?

219
00:16:12,900 --> 00:16:18,510
I think Cisco’s explanations are quite straightforward
and easy to understand, so I’ll just paste

220
00:16:18,510 --> 00:16:20,730
them here.

221
00:16:20,730 --> 00:16:25,080
Destination MAC validates ARP responses by
checking the destination MAC address in the

222
00:16:25,080 --> 00:16:29,670
Ethernet header against the target MAC address
in the ARP message.

223
00:16:29,670 --> 00:16:32,070
If they are different, the frame is dropped.

224
00:16:32,070 --> 00:16:37,860
IP validation looks for invalid or unexpected
IP addresses which shouldn’t be found in

225
00:16:37,860 --> 00:16:47,420
ARP messages, such as 0.0.0.0, 255.255.255.255,
and multicast IP addresses.

226
00:16:47,420 --> 00:16:52,660
These IP addresses shouldn’t belong to a
host, so they are considered invalid.

227
00:16:52,660 --> 00:16:57,720
The sender IP address is checked in both ARP
request and reply messages, but the target

228
00:16:57,720 --> 00:17:01,120
IP address is checked only in ARP replies.

229
00:17:01,120 --> 00:17:06,740
Finally, source MAC validation checks the
source MAC of the Ethernet header and compares

230
00:17:06,740 --> 00:17:09,549
it to the sender MAC in the ARP message.

231
00:17:09,549 --> 00:17:14,350
If they don’t match, the message is considered
invalid and is dropped.

232
00:17:14,350 --> 00:17:19,199
To clarify those, here is that ARP reply message
I showed earlier.

233
00:17:19,199 --> 00:17:23,299
These validation checks look at the source
and destination MAC addresses in the Ethernet

234
00:17:23,299 --> 00:17:27,860
header, and also at these fields in the ARP
message itself.

235
00:17:27,860 --> 00:17:32,640
In this case, the source and destination in
the Ethernet header match the sender and target

236
00:17:32,640 --> 00:17:37,610
MAC addresses in the ARP message, so the message
is valid for the destination MAC and source

237
00:17:37,610 --> 00:17:39,760
MAC checks.

238
00:17:39,760 --> 00:17:44,379
The sender and target IP addresses in the
ARP message are also valid, so it passes that

239
00:17:44,379 --> 00:17:46,590
check too.

240
00:17:46,590 --> 00:17:50,830
Note that these checks are done in addition
to the standard DAI check, which looks at

241
00:17:50,830 --> 00:17:56,440
the sender MAC and IP addresses and compares
them to the DHCP snooping binding table.

242
00:17:56,440 --> 00:18:01,259
So, if these checks are configured an ARP
message must pass all of the checks to be

243
00:18:01,259 --> 00:18:03,090
considered valid.

244
00:18:03,090 --> 00:18:08,059
There’s an important point to mention about
configuring those additional checks.

245
00:18:08,059 --> 00:18:16,310
I configured, in order, IP ARP INSPECTION
VALIDATE DST-MAC, then IP, then SRC-MAC, and

246
00:18:16,310 --> 00:18:19,560
checked with SHOW RUN | INCLUDE VALIDATE.

247
00:18:19,560 --> 00:18:22,840
So, what do you think was displayed?

248
00:18:22,840 --> 00:18:26,320
Only VALIDATE SRC-MAC was displayed.

249
00:18:26,320 --> 00:18:32,289
First I configured VALIDATE DST-MAC, but when
I configured VALIDATE IP, it overwrote the

250
00:18:32,289 --> 00:18:34,289
previous command.

251
00:18:34,289 --> 00:18:38,590
Then when I configured VALIDATE SRC-MAC, it
overwrote IP.

252
00:18:38,590 --> 00:18:43,330
So, if you want to enable all three checks,
you should configure it like this.

253
00:18:43,330 --> 00:18:47,929
IP ARP INSPECTION VALIDATE IP SRC-MAC DST-MAC.

254
00:18:47,929 --> 00:18:52,679
I checked again, and now you can see all three.

255
00:18:52,679 --> 00:18:58,059
To summarize, you must enter all of the validation
checks you want in a single command.

256
00:18:58,059 --> 00:19:03,490
You can specify one, two, or all three, and
the order isn’t significant, it doesn’t

257
00:19:03,490 --> 00:19:04,490
matter.

258
00:19:04,490 --> 00:19:08,500
Okay, those are the optional validation checks
that can be configured.

259
00:19:08,500 --> 00:19:11,909
Now there is one more topic I want to cover,
ARP ACLs.

260
00:19:11,909 --> 00:19:17,820
Now, I’m pretty sure the topic of ARP ACLs
and their configuration is beyond the scope

261
00:19:17,820 --> 00:19:19,320
of the CCNA exam.

262
00:19:19,320 --> 00:19:25,080
So, I will just give a quick example of how
they work and then we’ll finish up the video.

263
00:19:25,080 --> 00:19:27,690
I won’t go into the details here.

264
00:19:27,690 --> 00:19:31,279
Here is SW2’s DHCP snooping binding table.

265
00:19:31,279 --> 00:19:39,790
SRV1 has a static IP address, 192.168.1.100,
so it doesn’t have an entry in SW2’s DHCP

266
00:19:39,790 --> 00:19:41,120
snooping binding table.

267
00:19:41,120 --> 00:19:46,059
So, what will happen when SRV1 tries to send
an ARP request?

268
00:19:46,059 --> 00:19:49,130
It will be dropped, with an error message
like this.

269
00:19:49,130 --> 00:19:53,820
It says 1 invalid ARP request on G0/2 in VLAN1.

270
00:19:53,820 --> 00:19:59,850
That’s because SRV1 doesn’t have an entry
in SW2’s DHCP snooping binding table.

271
00:19:59,850 --> 00:20:04,809
So, to fix this let’s configure an ARP ACL
to permit SRV1.

272
00:20:04,809 --> 00:20:07,700
Here’s the configuration.

273
00:20:07,700 --> 00:20:13,049
ARP ACCESS-LIST, followed by a name, to create
the ARP ACL.

274
00:20:13,049 --> 00:20:22,200
Then I configured PERMIT IP HOST 192.168.1.100
MAC HOST, followed by SRV1’s MAC address.

275
00:20:22,200 --> 00:20:29,059
But, creating the ARP ACL alone doesn’t
help, we have to apply it for it to take effect.

276
00:20:29,059 --> 00:20:37,000
The command is IP ARP INSPECTION FILTER, the
ACL name, VLAN, and the VLAN number.

277
00:20:37,000 --> 00:20:41,259
Okay, we created the ARP ACL and then applied
it.

278
00:20:41,259 --> 00:20:47,030
This time when SRV1 tries to send an ARP request,
SW2 forwards it even though there is no entry

279
00:20:47,030 --> 00:20:49,509
in the DHCP snooping binding table.

280
00:20:49,509 --> 00:20:53,299
That’s because of the ARP ACL we configured.

281
00:20:53,299 --> 00:20:59,309
Here’s one last show command before we finish,
SHOW IP ARP INSPECTION.

282
00:20:59,309 --> 00:21:04,500
It gives a summary of the DAI configuration
as well as statistics about how many ARP messages

283
00:21:04,500 --> 00:21:07,190
have been forwarded and dropped.

284
00:21:07,190 --> 00:21:10,950
Let me just point out a few fields, you don’t
have to know all of them.

285
00:21:10,950 --> 00:21:17,679
First, notice that source MAC, destination
MAC, and IP address validation are enabled.

286
00:21:17,679 --> 00:21:23,230
I enabled them on SW1 before, but I enabled
them on SW2 also.

287
00:21:23,230 --> 00:21:30,090
Here we can see that DAI is configured and
operational in VLAN1, and the ACL ARP-ACL-1

288
00:21:30,090 --> 00:21:31,570
is in effect.

289
00:21:31,570 --> 00:21:37,230
Now, this is a detail beyond the scope of
the CCNA, but notice the static ACL field

290
00:21:37,230 --> 00:21:38,730
at the end.

291
00:21:38,730 --> 00:21:46,149
If static ACL is set to yes, the implicit
deny at the end of the ARP ACL will take effect.

292
00:21:46,149 --> 00:21:51,830
Like regular IP ACLs, ARP ACLs also have an
implicit deny.

293
00:21:51,830 --> 00:21:55,850
But if you don’t enable the static setting,
the implicit deny will be ignored.

294
00:21:55,850 --> 00:22:02,350
I didn’t configure it as a static ACL, so
in my example the implicit deny is ignored.

295
00:22:02,350 --> 00:22:05,700
But what will happen if the implicit deny
takes effect?

296
00:22:05,700 --> 00:22:10,870
It will cause all ARP messages not permitted
by the ARP ACL to be denied.

297
00:22:10,870 --> 00:22:15,470
So, in effect this means that only the ARP
ACL will be checked.

298
00:22:15,470 --> 00:22:19,539
The DHCP snooping table will not be checked.

299
00:22:19,539 --> 00:22:24,480
Usually we leave this setting as No, and as
I said it’s just an interesting detail that’s

300
00:22:24,480 --> 00:22:28,429
beyond the scope of the CCNA, so let’s keep
going.

301
00:22:28,429 --> 00:22:32,710
Here you can see some statistics about how
many ARP messages have been forwarded and

302
00:22:32,710 --> 00:22:34,110
dropped.

303
00:22:34,110 --> 00:22:39,509
Notice 4 messages have been dropped, and all
4 are DHCP drops.

304
00:22:39,509 --> 00:22:43,691
That means messages dropped because there
wasn’t a matching entry in the DHCP snooping

305
00:22:43,691 --> 00:22:44,691
table.

306
00:22:44,691 --> 00:22:50,139
That’s because I tried to ping from SRV1
before configuring the ARP ACL.

307
00:22:50,139 --> 00:22:54,250
However, here you can see 1 ACL permit.

308
00:22:54,250 --> 00:23:00,130
This is when SW2 permitted SRV1’s ARP message
after I configured the ARP ACL.

309
00:23:00,130 --> 00:23:06,169
SRV1’s ARP request message was permitted
and counted here.

310
00:23:06,169 --> 00:23:09,759
Here is a summary of the new commands we looked
at in this video.

311
00:23:09,759 --> 00:23:15,190
As always, go back in the video to review
if you don’t remember any of these commands.

312
00:23:15,190 --> 00:23:19,429
Also make sure to practice these commands
in a lab, for example my packet tracer lab

313
00:23:19,429 --> 00:23:21,330
in the next video.

314
00:23:21,330 --> 00:23:26,730
Hands-on practice is an essential part of
studying for the CCNA.

315
00:23:26,730 --> 00:23:30,330
Before moving on to the quiz, here’s a quick
review of what we covered.

316
00:23:30,330 --> 00:23:33,100
I introduced what Dynamic ARP Inspection is.

317
00:23:33,100 --> 00:23:39,030
It’s a switch security feature similar to
DHCP snooping that inspects ARP messages and

318
00:23:39,030 --> 00:23:41,230
then decides to forward or drop the message.

319
00:23:41,230 --> 00:23:47,240
I introduced how it works and what attacks
it prevents, primarily ARP poisoning which

320
00:23:47,240 --> 00:23:50,440
can be used to perform a man-in-the-middle
attack.

321
00:23:50,440 --> 00:23:56,559
I also showed you how to configure DAI, while
covering various details about its operations.

322
00:23:56,559 --> 00:24:01,809
Honestly, in this video I probably gave you
more information about DAI than you need to

323
00:24:01,809 --> 00:24:07,490
know for the CCNA, but I’d rather give you
more information than not enough.

324
00:24:07,490 --> 00:24:11,649
Make sure to watch until the end of the quiz
for a bonus question from Boson Software’s

325
00:24:11,649 --> 00:24:16,419
ExSim for CCNA, my recommended practice exams
for the CCNA.

326
00:24:16,419 --> 00:24:21,120
Okay, let’s go to quiz question 1.

327
00:24:21,120 --> 00:24:25,830
You issue the IP ARP INSPECTION VLAN 1 command
on SW1.

328
00:24:25,830 --> 00:24:30,710
Which of the following statements is true
about SW1 after issuing the command?

329
00:24:30,710 --> 00:24:37,299
Pause the video now to select the correct
answer.

330
00:24:37,299 --> 00:24:42,539
The answer is A, all interfaces in VLAN 1
are untrusted.

331
00:24:42,539 --> 00:24:48,590
Just like in DHCP snooping, when DAI is first
enabled all interfaces will be in an untrusted

332
00:24:48,590 --> 00:24:49,890
state by default.

333
00:24:49,890 --> 00:24:54,120
So, to trust specific ports you’ll have
to configure them manually.

334
00:24:54,120 --> 00:24:58,279
Okay, let’s go to question 2.

335
00:24:58,279 --> 00:25:01,309
The following commands are configured on SW1.

336
00:25:01,309 --> 00:25:05,559
Which of the following statements is true
after the commands have been issued?

337
00:25:05,559 --> 00:25:09,759
Pause the video now to select the best answer.

338
00:25:09,759 --> 00:25:18,330
Okay, the answer is C, DAI validation is only
enabled for destination MAC addresses.

339
00:25:18,330 --> 00:25:23,429
When configuring these optional DAI validation
checks, to configure multiple checks you should

340
00:25:23,429 --> 00:25:26,009
configure them all in a single command.

341
00:25:26,009 --> 00:25:29,299
Otherwise, only the last command entered will
take effect.

342
00:25:29,299 --> 00:25:34,619
Okay, let’s go to question 3.

343
00:25:34,619 --> 00:25:37,710
Which of the following are true about DAI
rate limiting?

344
00:25:37,710 --> 00:25:39,129
(select two).

345
00:25:39,129 --> 00:25:44,460
Okay, pause the video now to select the two
correct answers.

346
00:25:44,460 --> 00:25:52,700
Okay, the answers are B, it is enabled on
untrusted ports by default, and D, it is enabled

347
00:25:52,700 --> 00:25:56,539
at a rate of 15 packets per second by default.

348
00:25:56,539 --> 00:26:02,990
Unlike DHCP snooping rate limiting, for DAI
rate limiting is enabled at a rate of 15 packets

349
00:26:02,990 --> 00:26:07,299
per second on all untrusted ports by default.

350
00:26:07,299 --> 00:26:13,039
Another difference between DHCP snooping and
DAI is that DAI allows you to configure a

351
00:26:13,039 --> 00:26:19,789
burst interval, so the rate limit can be calculated
like 50 packets over three seconds, for example.

352
00:26:19,789 --> 00:26:24,909
DHCP snooping only allows you to configure
the packet rate per 1 second.

353
00:26:24,909 --> 00:26:28,769
Okay, let’s go to question 4.

354
00:26:28,769 --> 00:26:34,850
DAI inspects the sender IP and MAC addresses
to determine whether an ARP packet should

355
00:26:34,850 --> 00:26:37,159
be forwarded or dropped.

356
00:26:37,159 --> 00:26:40,649
Which of the following does it check the sender
IP and MAC against?

357
00:26:40,649 --> 00:26:42,369
(select two).

358
00:26:42,369 --> 00:26:46,610
Pause the video now to select the two correct
answers.

359
00:26:46,610 --> 00:26:55,220
Okay, the answers are B, DHCP snooping binding
table, and D, ARP ACLs.

360
00:26:55,220 --> 00:27:01,080
When DHCP snooping is enabled, the DHCP snooping
binding table is automatically built as hosts

361
00:27:01,080 --> 00:27:04,509
lease IP addresses from DHCP servers.

362
00:27:04,509 --> 00:27:08,610
So, DAI uses that table to check ARP messages.

363
00:27:08,610 --> 00:27:14,190
However, for hosts that don’t use DHCP,
ARP ACLs can be manually configured to permit

364
00:27:14,190 --> 00:27:15,600
their ARP messages.

365
00:27:15,600 --> 00:27:19,820
Okay, let’s go to question 5.

366
00:27:19,820 --> 00:27:25,129
Which of the following commands limit ARP
messages to a maximum average of 15 per second?

367
00:27:25,129 --> 00:27:26,789
(select two).

368
00:27:26,789 --> 00:27:30,820
Pause the video now to select the correct
answers.

369
00:27:30,820 --> 00:27:39,950
Okay, the answers are A, IP ARP INSPECTION
LIMIT RATE 15 and C, IP ARP INSPECTION LIMIT

370
00:27:39,950 --> 00:27:43,889
RATE 45 BURST INTERVAL 3.

371
00:27:43,889 --> 00:27:49,529
Both of them will limit ARP messages received
on the interface to an average of 15 per second.

372
00:27:49,529 --> 00:27:56,470
However, 45 packets over three seconds allows
for short bursts of a higher rate, for example

373
00:27:56,470 --> 00:28:02,220
30 packets in 1 second, 10 packets the next
second, and then 0 packets the second after

374
00:28:02,220 --> 00:28:03,320
that.

375
00:28:03,320 --> 00:28:08,919
However the 15 packets over 1 second setting
monitors each second and strictly makes sure

376
00:28:08,919 --> 00:28:11,100
the rate never goes over 15.

377
00:28:11,100 --> 00:28:13,989
Okay, that’s all for the quiz.

378
00:28:13,989 --> 00:28:22,820
Now let’s take a look at a bonus question
in Boson Software’s ExSim for CCNA.
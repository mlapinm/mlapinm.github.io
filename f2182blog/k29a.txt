0.0
welcome to this free CCNA packet tracer
practice lab you can download the lab
file from the link in the description if
you like these labs please consider
supporting me via my patreon or the
cryptocurrency options in the
description this slab will be the first
in a series of labs about access control
lists or ACLs it's very important to be
familiar with ACLs for the exam so make
sure you're comfortable with them this
first lab will be fairly simple we will
configure numbered standard access lists
ACLs can be numbered or named and
standard or extended we will configure
other types in future labs but for now
let's focus on the simplest type the
numbered standard ACL a standard ACL can
be numbered from 1 to 99 make sure you
remember that little fact for the exam 1
to 99 is for standard ACLs a standard
ACL controls traffic based only on the
source address on the other hand an
extended ACL can control traffic based
on the source and destination address as
well as other things which we will look
at in future labs in this lab we have to
configure these standard ACLs to achieve
2 requirements only the 192.168.1.0 / 24
network should be able to access server
1 and PC 4 should not be able to
communicate with the 192.168.1.0 24
network to achieve the first requirement
let's go on our - now you may wonder why
configure r2 as opposed to r1
well standard ACLs should be configured
as close to the destination as possible
if we configure it closer to the source
for example on r1 we may inadvertently
block traffic that we don't want to
block since the standard ACL only looks
at the source address in this case the
destination is server 1 so we will
configure the ACL on our to enable
compte
to configure the numbered ACL use the
command access list now also the options
with the context-sensitive help as you
can see 1 to 99 is the range for a
standard ACL you can also see the range
for extended ACLs 100 to 199 I'll use
the number 1 now let's check the next
option we can deny permit or add a
remark remarks are useful when on a
large network you have large amounts of
ACLs so you can identify what each ACL
is for when looking at the configuration
later
I won't configure one now however we
want to allow only the 192.168.1.0 / 24
network to access the server I'll use a
permit statement first to allow the
192.168.1.0 / 24 Network now let's check
the options again I can input an IP
address I can tell it to permit any
source or I can specify a single host
let's put in an IP address 192.168.1.1 X
top ssin wildcard bits ACLs use a
wildcard mask as opposed to a standard
subnet mask I'm not going to explain
exactly how these work here but a
wildcard mask is an inverse subnet mask
so if a bit is 1 or 0 in a subnet mask
its equivalent bit in a wildcard mask
would be 0 or 1 respectively if you have
no idea what that means I recommend
reading up on wildcard masks to get
familiar with them anyway the subnet
mask for a / 24 Network is 255.255.255.0
so the wild-card mask is 0 0 255 ok
that's it we have created the ACL which
permits the 192.168.1.0 / 24 network now
do we have to create another statement
in this ACL to deny everything else
actually we don't at the end of every
ACL there is an employee
deny all statement meaning everything
that doesn't apply to a previous entry
in the ACL will be denied do show access
lists as you can see that deny all
doesn't actually appear in the ACL but
when we tried to ping later it will work
as intended so we have created the ACL
is that all we have to do no we have to
apply it to an interface following the
rule of applying a standard ACL as close
to the destination as possible let's
apply it to the f00 interface interface
f00 you can apply an ACL to an interface
with this command IP access group now
I'll type 1 the number of the ACL we
created now let's check the options in
or out which do you think is appropriate
the answer is out because we aren't
filtering traffic coming in from this
interface we are filtering traffic going
out from this interface towards server 1
ok we have made and applied our ACL
let's test this ACL first before moving
on I'll go on PC one PC one should be
able to reach the server ping 192.168
3.1 hundred
as expected the ping works now let's try
from the 192.168.0 pc 3 pc 3 should not
be able to reach the server again even
though we didn't configure the ACL
explicitly to deny any traffic it will
by default deny any traffic that doesn't
match the entry permitting the
192.168.1.0 / 24 network ping 192.168.1
hundred immediately we get a response
from r2 saying the host is unreachable
now let's satisfy the second requirement
PC 4 should not be able to communicate
with 192.168.1.0 / 24 network let's go
on r1 this time enable coffee/tea access
list 1 now this time let's create a
denies statement let's check the next
options since we are just denying one
host let's select that and type in the
address 192.168.1.1 at the end of an ACL
so this ACL will deny PC 4 and if the
traffic comes from anywhere else it will
deny it also that's not what we want
let's create a statement to permit
everything else access list 1 permit any
do show access lists so ACLs are read
from top to bottom if traffic comes from
192.168 2.14 it will be denied and this
permit any won't apply if traffic comes
from anywhere else however it won't be
denied and then our permit any statement
will allow it through the implicit deny
any still exists but nothing will get
that far because this permit any will
catch everything that the first
statement doesn't
now let's apply the ACL f00 is closest
to the destination so interface f00 IP
access group one out before we test this
what do you think would happen if we
applied the ACL inbound on f10 as
opposed to outbound on f00 it would
prevent pc 4 from reaching anywhere
outside of its own subnet here because
of any traffic sourced from pc 4 enters
our ones f10 interface it will be
dropped ok let's test i'll go on pc 3
again first and I'll ping pc 1 ping
192.168.1.1 ok it works as expected
now let's try from pc 4 which shouldn't
be able to reach pc 1 paying 192.168.1
11 again we get a message from r1 saying
that the host is unreachable
we have successfully used numbered
standard ACLs to achieve the
requirements that's all for this lab
thank you for watching I hope this lab
and video have been helpful for you
please subscribe for future labs like
this which will be released weekly if
you have requests for any specific labs
let me know in the comment section if
you want to support my channel please
consider contributing to my patreon
patreon comm slash Jeremy's IT lab I
accept Bitcoin and aetherium donations
via the addresses in the description I
am also a brave verified publisher and
accept bat or basic attention token
donations in the brave browser
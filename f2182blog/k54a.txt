
welcome to this free CCNA packet tracer

practice lab you can download the lab

file from the link in the description if

you like these labs please consider

supporting me via my patreon or the

cryptocurrency options in the

description also please subscribe to the

channel for more labs like this in this

lab we will take a look at single area

OSPF we will configure it on these four

routers to achieve full connectivity

OSPF also supports a hierarchical multi

area design but that will be for the

next lab this time we will do a simple

OSPF configuration and then do some

tweaking to affect the path traffic

takes the first step is to configure a

loopback address on each router note

that this isn't a necessary step for

OSPF however we will do this first so

that the loopback address becomes the

OSPF router ID each router uses to

identify itself to neighbors having

router ids of 1.1.1 1 2 2 2 2 and so on

will simplify things as for how the

router ideas can is determined manual

configuration takes precedence however

if it's not manually configured the

highest loopback address becomes the red

or ID

if there is no loopback interface

address the highest address of another

interface becomes the router ID we

should create these loop backs before we

configure OSPF because if we do it after

the routers won't update the router IDs

unless we reset the OSPF process that's

no problem in a lab like this but in a

real network you can't just reset your

routing protocols at any time anyway

let's make those loopback interfaces on

our one an able call 40 interface l0 for

loop x0 IP address 1.1.11

five exit we don't have to use the no

shutdown command on a loopback interface

next are to enable coffee/tea interface

l0 IP address - - - - 255 255 255 255

exit next r3 enable coffee/tea interface

l0 IP address three three three three

255 255 255 dot 255 exit finally r4

enable coffee/tea interface l0 IP

address for 4.4.4 255 255 255 255 exit

okay that's it for our loopback

addresses next let's configure OSPF on

each router and advertise the routes

let's go back to our one router OSPF

then we have to enter a process ID in

almost all circumstances you will only

use a single OSPF process on a router

however you can create multiple

processes and each will keep a separate

database

also the process ID is locally

significant it can be different on each

router and they can still become

neighbors just to prove that I'll use a

different router ID or sorry a different

process ID on each router let's go with

one for our one now let's advertise our

networks let me explain a little how

OSPF network command works it looks for

interfaces within the range stated in

the network command and then advertises

the network prefix on those interfaces

it doesn't necessarily advertise the

exact network used in the network

command for example network 12000 then i

put in a wildcard mask which if you

remember is inverse of a regular mask

the 12000 network is configured as a

slash 24 but if I for example configure

a slash 8 with O 255 255 255 it will

still advertise the slash 24 network on

f10 not a slash 8 okay next enter area

followed by the area number this is

single area OSPF so let's just put 0 on

all of these next one the G 0 0

interface network 14000 I'll set it as a

slash 16 this time just the show

anything works as long as the interface

prefix falls within that range

ohh-ohh 255 dot 255 area 0 finally the

loopback address network 1.1.1 100 200

area 0 this time i configured the exact

/ 32 mask on the interface I'll state it

one more time because it's very

important to understand this G 0 0 and F

1 0 will advertise the network prefix

actually configured on the interface not

the slash 8 + / 16 prefixes I configured

here

okay now let's set up OSPF on the other

routers and I'll show you a useful

shortcut I'll go on are two routes is P

F and again I'll use a different process

ID to show that it can still become

neighbors with r1 and r3 so I'll use a

process ID of two now as for that

shortcut I mentioned it's a way to

activate OSPF on all interfaces with a

single command this is useful for labs

but perhaps you might not want to do it

on a real network where you want a more

precisely control which interfaces OSPF

is activated on network 0.0.0.0

followed by a slash zero mask which is

usually 0.0.0.0 but because we have to

use a wildcard mask it is inverse it is

255 dot 255 255 255 area 0 ok all

networks fall within the odo odo slash

zero range so OSPF will be activated on

all interfaces let's do the same quickly

on r3 and r4 r3 first router OSPF 3

network oh-oh-oh-oh 255.255.255.0 5 area

0 then our 4 router OSPF 4 network

oh-oh-oh-oh 255 dot 255 dot 255 dot 255

area 0 ok now let's go back to our 1 and

see what's up do show IP ospf neighbor

now we can see that r1 has become

neighbors with r2 and r4 also notice

that the loopback interfaces we

configured have indeed become the router

IDs of r2 and r4 also the router

successfully became neighbors even

though we use different process IDs on

each router proving that the process ID

is only locally significant

next let's check the routes we received

here on our one do show IP route here

are the loop backs of r2 r3 and r4 and

here are the 2300 and 3400 networks to

which our one isn't directly connected

note that they have an O beside them

meaning that they were learned via OSPF

also notice that r1 learned the network

prefix is configured on each of the

interfaces not the network prefix we

actually configured on r2 r3 and r4

actually we configured oh-oh-oh-oh-oh-oh

on them and there is no odor odor odor o

/o Network in the table here so that

demonstrates the point as well now the

next step is to suppress OSPF messages

on the loopback addresses or sorry

loopback interfaces of each router

because OSPF is activated on the

loopback interfaces each router is

sending OSPF advertisements on them

however the loopback interface doesn't

actually lead to anywhere beyond the

router itself so there's no point of

advertising anything on them to suppress

the advertisements we configure the loop

backs as passive interfaces with this

command passive interface l0 that's all

let's quickly do the same on the other

routers first are too passive interface

l0 then our three passive interface l0

finally our for passive interface l0 the

next step is to configure the OSPF

reference bandwidth of each router so

that a 10 Gigabit Ethernet interface

would have an OSPF cost of 1 what

exactly does that mean well from our

ones perspective it has two routes to

reach r3 it can go via r2

or via r4 how does it decide which path

to use let's go back to r1 and look at

their routing table notice beside these

OSPF routes there is a 110 which is the

administrative distance for OSPF I won't

talk about administrative distance now

hopefully you've studied it however next

to it is the metric notice that the

metric via r2 and the metric via r4 are

the same so both are in the routing

table however why are both the same when

the path via r4 includes a faster

gigabit ethernet interface well to

calculate metric OSPF divides a

reference bandwidth by the bandwidth on

the interface the reference bandwidth by

default is 100 megabits per second and a

fast ethernet interface is 100 megabits

per second so a fast ethernet interface

has a metric of 1 which is 100 divided

by 100 a Gigabit Ethernet interface has

a bandwidth of 1,000 megabits per second

100 divided by 1,000 is 0.1 however the

lowest possible metric in OSPF is 1 so

gigabit and fast ethernet interfaces

have the same metric by default 1 even a

10 gigabit or 100 gigabit interface

would have a metric of 1 to change this

default behavior we can change the

reference bandwidth with this command

auto cost reference bandwidth then the

bandwidth in terms of megabits per

second our instructions say to make it

so that a 100 gigabit interface oh sorry

a 10 gigabit interface would have a cost

of 1 so we should set the reference

equal to 10 gigabits per second so I'll

enter 10,000 as this message says here

make sure the reference is consistent

across all routers

let's go on our to auto cost reference

bandwidth ten thousand

okay next are three auto cost reference

bandwidth ten thousand finally are for

auto cost reference bandwidth ten

thousand okay let's check again on our

one do show IP route now we only have

one route two three three three three

via the gig zero zero interface because

OSPF now distinguishes between the cost

of a gig Ethernet and the cost of a Fast

Ethernet interface now our last step

isn't something you'd likely do in a

real network but I want to show you that

you can do it after adjusting the

reference bandwidth so that r1 will take

the path of via r4 to our freeze

loopback exclusively we are now going to

configure the opposite and make it use

the path to r2 exclusively we will do

this by configuring the OSPF cost of

some interfaces now there are multiple

ways to do this we can do it by lowering

the cost of some interfaces or by

raising the cost of others or a

combination just to make this quick for

the video I'll raise the cost of the g00

link between r1 and r4 to ten thousand

I'll start on our one interface g00 to

change the cost use this command IP ospf

cost ten thousand okay now let's do the

same on our for Zend interface g00 IP

ospf cost ten thousand now let's go back

on our one do show IP route okay now the

route two three three three three has

changed back to r2 exclusively because

we manually adjusted the cost of

Giggsy rose your interface despite the

fact that the path via r4 is actually

faster we covered a lot of different

things in this lab OSPF is very

important both for the exam and because

it's widely used in real networks make

sure you know the commands required I

will also be making a few more OSPF labs

so be sure to practice further with

those that's all for this lab thank you

for watching I hope this lab and video

have been helpful for you please

subscribe for future labs like this

which will be released weekly if you

have requests for any specific labs let

me know in the comments section if you

want to support my channel I accept

Bitcoin and aetherium donations via the

addresses in the description I am also a

brave verified publisher and accept bat

or basic attention token donations in

the brave browser

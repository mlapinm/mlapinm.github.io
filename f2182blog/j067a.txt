1
00:00:01,440 --> 00:00:06,320
Welcome to Jeremy’s IT Lab. This is&nbsp;
a free, complete course for the CCNA.&nbsp;&nbsp;

2
00:00:07,040 --> 00:00:11,440
If you like these videos, please subscribe&nbsp;
to follow along with the series. Also,&nbsp;&nbsp;

3
00:00:11,440 --> 00:00:16,240
please like and leave a comment, and share the&nbsp;
video to help spread this free series of videos.&nbsp;&nbsp;

4
00:00:16,240 --> 00:00:20,800
Thanks for your help. Also, remember to&nbsp;
sign up via the link in the description&nbsp;&nbsp;

5
00:00:20,800 --> 00:00:25,200
to get all of the lab files for this course, so&nbsp;
you can try it out yourself in packet tracer.

6
00:00:26,480 --> 00:00:31,920
If you want more labs like these, I highly&nbsp;
recommend picking up Boson’s NetSim for the CCNA,&nbsp;&nbsp;

7
00:00:31,920 --> 00:00:36,320
click the link in the video description to&nbsp;
check it out. It’s a network simulator like&nbsp;&nbsp;

8
00:00:36,320 --> 00:00:40,000
packet tracer, but it’s even better,&nbsp;
and it includes all of these guided&nbsp;&nbsp;

9
00:00:40,000 --> 00:00:44,160
labs to not only help you get hands-on&nbsp;
practice configuring and troubleshooting,&nbsp;&nbsp;

10
00:00:44,160 --> 00:00:49,520
but also deepen your understanding of the exam&nbsp;
topics. I used it myself when studying for my&nbsp;&nbsp;

11
00:00:49,520 --> 00:00:53,360
certifications, so I feel confident&nbsp;
about recommending it to all of you.&nbsp;&nbsp;

12
00:00:54,160 --> 00:00:58,400
If you want to get your own copy of NetSim,&nbsp;
please follow the link in the video description.

13
00:01:00,400 --> 00:01:05,680
In this lab we will configure a couple extended&nbsp;
ACLs to fulfill the network policies listed here.&nbsp;&nbsp;

14
00:01:06,800 --> 00:01:16,880
Hosts in 172.16.2.0/24 can’t communicate with&nbsp;
PC1. Host in 172.16.1.0/24 can’t access the&nbsp;&nbsp;

15
00:01:16,880 --> 00:01:22,240
DNS service on SRV1. DNS is something we&nbsp;
will cover later in the course, but even&nbsp;&nbsp;

16
00:01:22,240 --> 00:01:26,560
if you don’t totally understand the protocol&nbsp;
yet you can use extended ACLs to block it.&nbsp;&nbsp;

17
00:01:27,680 --> 00:01:34,640
The third requirement is that hosts in&nbsp;
172.16.2.0/24 can’t access the HTTP or&nbsp;&nbsp;

18
00:01:34,640 --> 00:01:43,440
HTTPS services on SRV2. As you probably know by&nbsp;
now, HTTP and HTTPS are used to access web pages.

19
00:01:45,600 --> 00:01:50,160
As I have said a few times, ACL configuration&nbsp;
is flexible and there are often multiple&nbsp;&nbsp;

20
00:01:50,160 --> 00:01:57,360
valid solutions. In this video I’ll show you my&nbsp;
solution. I will configure two ACLs on R1. One&nbsp;&nbsp;

21
00:01:57,360 --> 00:02:02,400
to fulfill the first and third requirements, and&nbsp;
then another to fulfill the second requirement.&nbsp;&nbsp;

22
00:02:04,320 --> 00:02:07,840
I’ll start with the second&nbsp;
requirement, hosts in 172.16.1.0/24&nbsp;&nbsp;

23
00:02:09,600 --> 00:02:16,800
can’t access the DNS service on SRV1. First, let&nbsp;
me briefly show how DNS works. I’ll go on PC1.&nbsp;&nbsp;

24
00:02:18,320 --> 00:02:24,400
Then open the config tab, and you can&nbsp;
see that I have specified 192.168.1.100,&nbsp;&nbsp;

25
00:02:24,400 --> 00:02:32,320
SRV1, as PC1’s DNS server. DNS, Domain Name&nbsp;
Service, let’s you use specify names instead of IP&nbsp;&nbsp;

26
00:02:32,320 --> 00:02:40,000
addresses as destinations. Let me show an example.&nbsp;
Go to desktop, then command prompt. Let’s try a&nbsp;&nbsp;

27
00:02:40,000 --> 00:02:48,320
ping to PC2. However, instead of pinging PC2’s&nbsp;
IP address, I’ll specify the name PC2. PING PC2.&nbsp;&nbsp;

28
00:02:49,600 --> 00:02:54,560
Now, this ping will take a little longer&nbsp;
than usual. Currently PC1 is contacting SRV1&nbsp;&nbsp;

29
00:02:54,560 --> 00:03:01,440
to learn what the IP address of PC2 is. Although&nbsp;
using names like google.com or youtube.com&nbsp;&nbsp;

30
00:03:01,440 --> 00:03:06,800
is easier than remembering IP addresses for us&nbsp;
humans, the computers themselves still need to&nbsp;&nbsp;

31
00:03:06,800 --> 00:03:13,760
know the IP address. That’s what DNS is for. DNS&nbsp;
servers contain a list of names and IP addresses.&nbsp;&nbsp;

32
00:03:14,880 --> 00:03:20,960
As you can see, although I specified&nbsp;
PING PC2, PC1 asked SRV1 what the IP&nbsp;&nbsp;

33
00:03:20,960 --> 00:03:27,200
address of PC2 is and learned that it&nbsp;
is 172.16.1.2, as is displayed here.

34
00:03:29,520 --> 00:03:33,840
Okay, we’ll cover DNS later, now&nbsp;
let’s go on R1 and configure that ACL.&nbsp;&nbsp;

35
00:03:36,480 --> 00:03:44,160
ENABLE. CONF T. I’ll configure a numbered&nbsp;
ACL. IP ACCESS-LIST EXTENDED 100.&nbsp;&nbsp;

36
00:03:45,040 --> 00:03:51,600
So, let’s deny DNS. DENY, now which protocol&nbsp;
should we deny? If you remember correctly,&nbsp;&nbsp;

37
00:03:51,600 --> 00:03:59,360
DNS uses both TCP and UDP. Usually UDP is used,&nbsp;
however there are cases where TCP is used too,&nbsp;&nbsp;

38
00:03:59,360 --> 00:04:09,120
so let’s block both, I’ll create an entry for UDP&nbsp;
first. Then the source IP, 172.16.1.0 0.0.0.255.&nbsp;&nbsp;

39
00:04:09,920 --> 00:04:16,960
We don’t need to specify the source port, so&nbsp;
next is the destination IP. HOST 192.168.1.100.&nbsp;&nbsp;

40
00:04:17,520 --> 00:04:25,040
And finally the port number. Do you remember&nbsp;
DNS’ port number? It’s 53, so EQ 53.&nbsp;&nbsp;

41
00:04:26,240 --> 00:04:33,200
Okay, now I’ll use the up arrow, and just change&nbsp;
UDP to TCP, there’s the second entry. Finally,&nbsp;&nbsp;

42
00:04:33,200 --> 00:04:39,120
I’ll configure PERMIT IP ANY ANY to allow&nbsp;
other traffic. Now let’s apply the ACL.&nbsp;&nbsp;

43
00:04:40,000 --> 00:04:44,880
Following the rule of applying it close to&nbsp;
the source, I’ll apply it inbound on G0/0.&nbsp;&nbsp;

44
00:04:45,840 --> 00:04:54,400
INTERFACE G0/0. IP ACCESS-GROUP 100 IN. Okay, we&nbsp;
have created and applied the ACL, let’s see if it&nbsp;&nbsp;

45
00:04:54,400 --> 00:05:01,520
works. I’ll return to PC1. Let’s try to ping&nbsp;
SRV2 this time. I’ll try to ping it by name.&nbsp;&nbsp;

46
00:05:02,400 --> 00:05:09,120
PING SRV2. Now, PC1 shouldn’t be able to&nbsp;
learn SRV2’s IP address. I’ll click on this&nbsp;&nbsp;

47
00:05:09,120 --> 00:05:14,800
arrow to skip forward 30 seconds in packet&nbsp;
tracer, and now when I return to PC1 you can&nbsp;&nbsp;

48
00:05:14,800 --> 00:05:21,920
see that it could not find host SRV2. So, PC1&nbsp;
wasn’t able to access the DNS service on SRV1&nbsp;&nbsp;

49
00:05:21,920 --> 00:05:31,200
to learn SRV2’s IP address. How about if I just&nbsp;
ping SRV2’s IP address? PING 192.168.2.100.&nbsp;&nbsp;

50
00:05:32,640 --> 00:05:38,160
As usual the first one or two might fail because&nbsp;
the ARP process is a little slow in packet tracer,&nbsp;&nbsp;

51
00:05:38,160 --> 00:05:43,120
but then the ping succeeds. Okay, so we&nbsp;
have fulfilled the second requirement.

52
00:05:45,120 --> 00:05:50,240
Now let’s make an ACL for the first and third&nbsp;
requirements. They both have the same source,&nbsp;&nbsp;

53
00:05:50,240 --> 00:05:59,600
172.16.2.0/24, so I’ll combine them into&nbsp;
one ACL. IP ACCESS-LIST EXTENDED 101.&nbsp;&nbsp;

54
00:06:01,280 --> 00:06:05,200
So, that first requirement is a&nbsp;
simple deny statement for destination&nbsp;&nbsp;

55
00:06:05,200 --> 00:06:19,440
PC1. DENY IP 172.16.2.0 0.0.0.255 host 172.16.1.1.&nbsp;
That’s it. We’re denying all traffic, so I used IP&nbsp;&nbsp;

56
00:06:19,440 --> 00:06:26,640
as the protocol. Now let’s prevent this subnet&nbsp;
from using the HTTP or HTTPS services on SRV2.&nbsp;&nbsp;

57
00:06:27,840 --> 00:06:34,000
First, let me go on PC3 and show you a website.&nbsp;
I configured an entry for ‘cisco.com’ on the&nbsp;&nbsp;

58
00:06:34,000 --> 00:06:40,320
DNS server, SRV1, so if I use the web&nbsp;
browser here on PC3 and type the URL&nbsp;&nbsp;

59
00:06:40,320 --> 00:06:47,520
‘cisco.com’, PC3 should learn SRV2’s IP address&nbsp;
and be able to access the web page. It’s just&nbsp;&nbsp;

60
00:06:47,520 --> 00:06:53,280
a sample web page which is in Packet Tracer by&nbsp;
default. After we configure and apply the ACL,&nbsp;&nbsp;

61
00:06:53,280 --> 00:07:00,240
we shouldn’t be able to access this web&nbsp;
page. Now I’ll return to R1. Let’s deny HTTP&nbsp;&nbsp;

62
00:07:00,240 --> 00:07:14,720
and HTTPS. DENY TCP, because both HTTP and HTTPS&nbsp;
use TCP. Then the source IP. 172.16.2.0 0.0.0.255.&nbsp;&nbsp;

63
00:07:15,440 --> 00:07:25,760
Then the destination IP. HOST 192.168.2.100.&nbsp;
Finally I’ll specify HTTP. EQ 80. And I’ll add&nbsp;&nbsp;

64
00:07:25,760 --> 00:07:32,720
another entry and change the port number to 443,&nbsp;
for HTTPS. Finally let’s permit all other traffic.&nbsp;&nbsp;

65
00:07:33,280 --> 00:07:41,680
PERMIT IP ANY ANY. Now let’s apply it close to&nbsp;
the source, inbound on G0/1 is best. INTERFACE&nbsp;&nbsp;

66
00:07:41,680 --> 00:07:51,280
G0/1. IP ACCESS-GROUP 101 in. Okay, let’s try to&nbsp;
access that web page again, I’ll return to PC3.&nbsp;&nbsp;

67
00:07:52,960 --> 00:07:58,480
First I’ll close the web browser and open&nbsp;
it again. Now let’s try to access cisco.com.&nbsp;&nbsp;

68
00:08:00,320 --> 00:08:05,600
No webpage appears, PC3 is being&nbsp;
blocked by the ACL we configured on R1,&nbsp;&nbsp;

69
00:08:05,600 --> 00:08:09,840
and the request times out. Now,&nbsp;
how about the first requirement?&nbsp;&nbsp;

70
00:08:10,400 --> 00:08:16,640
Let’s go to the command prompt here on PC3&nbsp;
and try to ping PC1. This subnet is still&nbsp;&nbsp;

71
00:08:16,640 --> 00:08:25,360
able to use the DNS service on SRV1, so I’ll&nbsp;
try to ping it by name. PING PC1. However,&nbsp;&nbsp;

72
00:08:25,360 --> 00:08:33,760
the ACL we just configured on R1 prevents PC3 from&nbsp;
pinging PC1. But a ping to PC2 should work. PING&nbsp;&nbsp;

73
00:08:33,760 --> 00:08:41,520
PC2. Wait a bit for PC3 to learn PC2’s IP address&nbsp;
from SRV1, and then the ping is successful.&nbsp;&nbsp;

74
00:08:43,520 --> 00:08:48,960
So, we have satisfied all requirements.&nbsp;
Finally let’s just view the ACLs.&nbsp;&nbsp;

75
00:08:50,880 --> 00:08:57,200
Let me return to R1. And I’ll&nbsp;
check. DO SHOW ACCESS-LISTS.&nbsp;&nbsp;

76
00:08:58,800 --> 00:09:02,000
There they are, and you can see the&nbsp;
number of matches for each entry&nbsp;&nbsp;

77
00:09:02,000 --> 00:09:09,440
of each ACL. That’s all for this lab. Next let’s&nbsp;
take a look at a lab in Boson NetSim for CCNA.

78
00:09:11,840 --> 00:09:17,920
Okay here's today's Boson NetSim lab preview. As&nbsp;
I said before, there are 20 ACL practice labs in&nbsp;&nbsp;

79
00:09:17,920 --> 00:09:22,640
NetSim. So if you want lots of practice&nbsp;
configuring and troubleshooting ACLs,&nbsp;&nbsp;

80
00:09:22,640 --> 00:09:31,680
NetSim is a great tool. Here is the lab topology.&nbsp;
It's the same as the demo I showed you in Day 34,&nbsp;&nbsp;

81
00:09:31,680 --> 00:09:36,560
with Router1 and Router2, and then&nbsp;
PC1 2 and 3, each in their own VLAN.&nbsp;&nbsp;

82
00:09:38,880 --> 00:09:44,320
This time the command summary shows us the&nbsp;
protocol as well as the port numbers. So&nbsp;&nbsp;

83
00:09:44,320 --> 00:09:51,600
these are extended ACLs, not standard ACLs.&nbsp;
Here are the IP addresses on each device.&nbsp;&nbsp;

84
00:09:52,800 --> 00:09:58,240
Notice that Router2 is using router-on-a-stick&nbsp;
here. FastEthernet1/0.2 and .3,&nbsp;&nbsp;

85
00:09:59,680 --> 00:10:05,200
because there are two VLANs here, two subnets,&nbsp;
connected to this single physical interface.&nbsp;&nbsp;

86
00:10:05,200 --> 00:10:07,200
And that will be important&nbsp;
later, so remember that.&nbsp;&nbsp;

87
00:10:10,480 --> 00:10:14,000
Okay, and there is just a single&nbsp;
task, but it's pretty long, 18 steps.&nbsp;&nbsp;

88
00:10:15,040 --> 00:10:20,880
So, for today's demo we will just complete up to&nbsp;
step 7, which says 'on the appropriate device,&nbsp;&nbsp;

89
00:10:21,520 --> 00:10:25,840
apply extended ACL 101 to the correct&nbsp;
interface in the correct direction. So,&nbsp;&nbsp;

90
00:10:25,840 --> 00:10:35,120
we will create this ACL in step 6 and apply it in&nbsp;
step 7. So let's quickly read that task. In this&nbsp;&nbsp;

91
00:10:35,120 --> 00:10:40,400
task you will configure multiple extended ACls&nbsp;
to permit and deny traffic from various protocols&nbsp;&nbsp;

92
00:10:40,400 --> 00:10:45,840
and sources across the topology. You should use&nbsp;
extended ACL best practices wherever possible,&nbsp;&nbsp;

93
00:10:46,720 --> 00:10:53,280
such as applying the ACL as close to the source&nbsp;
as possible. When all tasks are complete,&nbsp;&nbsp;

94
00:10:53,280 --> 00:10:59,280
each PC should remain able to ping the address of&nbsp;
the loopback interface on each router. However,&nbsp;&nbsp;

95
00:10:59,280 --> 00:11:03,840
as I said before, we are not going to&nbsp;
complete all the tasks, just up to step 7.&nbsp;&nbsp;

96
00:11:05,440 --> 00:11:09,120
Pings to other destinations should succeed&nbsp;
or fail per the instructions below.&nbsp;&nbsp;

97
00:11:10,800 --> 00:11:15,920
Okay, so let's get started. First, from each PC&nbsp;
verify that you can ping the loopback0 interfaces&nbsp;&nbsp;

98
00:11:15,920 --> 00:11:21,920
of both Router1 and Router2. So I will open&nbsp;
up a console connection to each of the PCs.&nbsp;&nbsp;

99
00:11:24,560 --> 00:11:27,840
And let's try those pings from PC1.&nbsp;&nbsp;

100
00:11:33,360 --> 00:11:36,160
Okay it works. And I'll try to ping Router2.&nbsp;&nbsp;

101
00:11:39,680 --> 00:11:42,880
Okay, and just for the sake of time I'll skip PC2.&nbsp;&nbsp;

102
00:11:42,880 --> 00:11:49,360
I know you don't want to watch me do a bunch of&nbsp;
pings. Let's try PC3. Okay, it can ping Router1.&nbsp;&nbsp;

103
00:11:53,440 --> 00:11:59,600
And Router2. I'm using Ctrl+C, that's what&nbsp;
this means, Ctrl+C, to stop the pings.&nbsp;&nbsp;

104
00:12:00,320 --> 00:12:05,280
After I get a reply, that means the ping&nbsp;
is successful so I just cut it off early.&nbsp;&nbsp;

105
00:12:08,880 --> 00:12:13,360
Okay, next. From each PC, verify that you&nbsp;
can ping every other PC in the topology.&nbsp;&nbsp;

106
00:12:14,560 --> 00:12:28,080
Okay, from PC1. I'll ping PC2. And it works.&nbsp;
Stop the ping. And PC3. That works as well.&nbsp;&nbsp;

107
00:12:29,280 --> 00:12:33,920
So, because we were able to ping and get a&nbsp;
reply, we have verified two-way connectivity&nbsp;&nbsp;

108
00:12:33,920 --> 00:12:42,080
between PC1 and PC2, and PC1 and PC3. So the&nbsp;
only one we have to do is from PC2 to PC3.&nbsp;&nbsp;

109
00:12:46,080 --> 00:12:51,840
Okay, and we get a reply, so we have also&nbsp;
verified two-way connectivity between PC2 and PC3.&nbsp;&nbsp;

110
00:12:53,920 --> 00:12:59,760
Next up, in steps 3, 4, and 5, we are going to&nbsp;
attempt to Telnet to Router1 and Router2 from&nbsp;&nbsp;

111
00:12:59,760 --> 00:13:06,800
different PCs. I showed you Telnet briefly in the&nbsp;
NetSim demo for Day 34, and we will cover it more&nbsp;&nbsp;

112
00:13:06,800 --> 00:13:16,880
in-depth later in the course. So, first from PC1&nbsp;
to Router2's loopback interface. TELNET 2.2.2.2.&nbsp;&nbsp;

113
00:13:18,080 --> 00:13:23,360
Okay, and because I get this password prompt to&nbsp;
log in, that means the Telnet was successful.&nbsp;&nbsp;

114
00:13:23,360 --> 00:13:28,480
I was able to connect to Router2 with Telnet.&nbsp;
I just have to enter the password to log in.&nbsp;&nbsp;

115
00:13:29,840 --> 00:13:33,760
And it works. It says up here, all&nbsp;
passwords in this lab are configured to&nbsp;&nbsp;

116
00:13:33,760 --> 00:13:40,560
boson. Okay, and the prompt is now&nbsp;
Router2. I'll exit out of there&nbsp;&nbsp;

117
00:13:41,360 --> 00:13:53,600
and then from PC2 and PC3, Telnet to&nbsp;
Router1. Okay, that works. And PC3.&nbsp;&nbsp;

118
00:13:58,640 --> 00:14:05,360
Okay, great. So, step 6. On the appropriate&nbsp;
device, create extended ACL 101.&nbsp;&nbsp;

119
00:14:06,400 --> 00:14:13,280
The ACL should permit Telnet traffic from&nbsp;
PC2 and PC3 to Router1's loopback0 interface.&nbsp;&nbsp;

120
00:14:14,560 --> 00:14:21,360
Limit the ACL you create to a single rule.&nbsp;
Specify the port number, source wildcard mask,&nbsp;&nbsp;

121
00:14:21,360 --> 00:14:28,000
and destination wildcard mask. Okay, so a&nbsp;
single rule. Single rule, single entry ACL,&nbsp;&nbsp;

122
00:14:28,880 --> 00:14:35,920
which allows both PC2 and PC3 to&nbsp;
Telnet to this address, 1.1.1.1.&nbsp;&nbsp;

123
00:14:38,080 --> 00:14:44,000
So, where should I create the ACL, what is the&nbsp;
appropriate device? Well, these are extended&nbsp;&nbsp;

124
00:14:44,000 --> 00:14:49,280
ACLs we're making, so we should create and&nbsp;
apply them as close to the source as possible.&nbsp;&nbsp;

125
00:14:50,160 --> 00:14:57,840
In this case, the source is PC2 and PC3, so&nbsp;
that means we should create the ACL on Router2.&nbsp;&nbsp;

126
00:15:03,120 --> 00:15:09,440
Okay, I'll configure it right here from&nbsp;
global config mode. ACCESS-LIST 101 PERMIT,&nbsp;&nbsp;

127
00:15:10,480 --> 00:15:16,960
now next is the protocol. Telnet&nbsp;
uses TCP as its Layer 4 protocol, so&nbsp;&nbsp;

128
00:15:17,920 --> 00:15:28,720
TCP. And next up the source IP address. 10.10.,&nbsp;
and we want to include both PC2 and PC3,&nbsp;&nbsp;

129
00:15:29,680 --> 00:15:40,480
so both of these subnets, 10.10.2.102/24 and&nbsp;
10.10.3.103/24. So, let me think about that.&nbsp;&nbsp;

130
00:15:43,760 --> 00:15:56,800
10.10.2.0, and a /23 subnet mask should work,&nbsp;
0.0.1.255. Okay, and we don't have to specify the&nbsp;&nbsp;

131
00:15:56,800 --> 00:16:05,200
source port number. So next is the destination&nbsp;
IP address. 1.1.1.1, with a /32 wildcard mask.&nbsp;&nbsp;

132
00:16:06,240 --> 00:16:13,040
Finally, the destination port. This is where we&nbsp;
specify Telnet. So, EQ to specify a single port.&nbsp;&nbsp;

133
00:16:14,480 --> 00:16:19,920
And now I can either specify the keyword,&nbsp;
TELNET, or Telnet's port number which is 23.&nbsp;&nbsp;

134
00:16:20,960 --> 00:16:28,560
I'll use the keyword, TELNET. There we go.&nbsp;
Okay, now here's the really tricky part. We&nbsp;&nbsp;

135
00:16:28,560 --> 00:16:32,640
have to apply it to the correct interface&nbsp;
in the correct direction, as it says here.&nbsp;&nbsp;

136
00:16:33,840 --> 00:16:38,080
Apply extended ACL 101 to the correct&nbsp;
interface in the correct direction.&nbsp;&nbsp;

137
00:16:40,240 --> 00:16:46,880
So, the interface that is connected to&nbsp;
Switch2, and therefore PC2 and PC3 is&nbsp;&nbsp;

138
00:16:48,560 --> 00:16:54,640
this one here, FastEthernet1/0. However, we&nbsp;
cannot apply this ACL to the physical interface,&nbsp;&nbsp;

139
00:16:54,640 --> 00:17:01,200
that will not work. So, we can either apply&nbsp;
it inbound on both of these sub-interfaces,&nbsp;&nbsp;

140
00:17:01,200 --> 00:17:09,360
FastEthernet1/0.2, 1/0.3. Or instead of doing that&nbsp;
if we want to apply it just to a single interface&nbsp;&nbsp;

141
00:17:10,000 --> 00:17:18,000
we could also outbound on this interface&nbsp;
here, it's still pretty close to the source.&nbsp;&nbsp;

142
00:17:18,000 --> 00:17:21,520
Let's do that, since it's simpler. We just&nbsp;
have to apply it to a single interface.&nbsp;&nbsp;

143
00:17:22,080 --> 00:17:31,120
So I will apply it outbound on FastEthernet0/0.&nbsp;
So, when these two PCs try to Telnet to Router1,&nbsp;&nbsp;

144
00:17:31,120 --> 00:17:36,800
the ACL will be checked when Router2 forwards&nbsp;
the traffic out of its FastEthernet0/0 interface,&nbsp;&nbsp;

145
00:17:36,800 --> 00:17:42,960
which is here. It won't check it when it receives&nbsp;
the traffic here on the FastEthernet0/1 interface.&nbsp;&nbsp;

146
00:17:45,200 --> 00:18:02,080
Or sorry, not 0/1, 1/0. Okay, so INTERFACE F0/0.&nbsp;
IP ACCESS-GROUP 101 OUT. Okay, so let's try a&nbsp;&nbsp;

147
00:18:02,080 --> 00:18:18,480
ping from PC2 to Router1's loopback0 interface.&nbsp;
Okay, it's not working. Why is that? It's because&nbsp;&nbsp;

148
00:18:19,280 --> 00:18:27,680
our ACL only permits Telnet from PC2 and PC3 to&nbsp;
Router1's loopback interface. However, the ACL is&nbsp;&nbsp;

149
00:18:27,680 --> 00:18:33,840
just a single line. That means any traffic that&nbsp;
isn't that Telnet traffic will be denied by the&nbsp;&nbsp;

150
00:18:33,840 --> 00:18:41,040
implicit deny at the end of the ACL. So currently&nbsp;
PC2 and PC3 will not be able to ping Router1.&nbsp;&nbsp;

151
00:18:43,280 --> 00:18:48,560
The task description here said that each PC should&nbsp;
remain able to ping the address of the loopback&nbsp;&nbsp;

152
00:18:48,560 --> 00:18:53,680
interface on each router, so I assume later,&nbsp;
in one of the later tasks we would fix that.&nbsp;&nbsp;

153
00:18:55,680 --> 00:19:00,480
But let me just check that PC3 also&nbsp;
can't ping Router1's loopback interface.&nbsp;&nbsp;

154
00:19:04,000 --> 00:19:10,960
Okay, it also doesn't work. How about Telnet?&nbsp;
Telnet should work. So I'll try to Telnet from PC2&nbsp;&nbsp;

155
00:19:10,960 --> 00:19:25,040
to Router1's loopback interface. And it works,&nbsp;
great. And how about PC3? Okay, it works also.&nbsp;&nbsp;

156
00:19:27,600 --> 00:19:31,280
And let's just take a look at that&nbsp;
ACL in the running config of Router2.&nbsp;&nbsp;

157
00:19:36,400 --> 00:19:44,080
There it is, so we are permitting TCP traffic&nbsp;
from this range of addresses here, 10.10.2.0/23,&nbsp;&nbsp;

158
00:19:44,960 --> 00:19:52,960
to host 1.1.1.1, destination port of 23, Telnet.&nbsp;
And all other traffic will be denied because of&nbsp;&nbsp;

159
00:19:52,960 --> 00:20:00,160
the implicit deny at the end of the ACL. Okay,&nbsp;
so after that there are many more tasks here,&nbsp;&nbsp;

160
00:20:00,800 --> 00:20:10,080
but we'll end today's lab demo here. And I will&nbsp;
use Boson's grade lab function. Now, since we&nbsp;&nbsp;

161
00:20:10,080 --> 00:20:13,360
aren't done with the lab it says you missed one&nbsp;
or more commands in the lab, but that's okay.&nbsp;&nbsp;

162
00:20:14,240 --> 00:20:21,680
I just want to check Router2's configuration,&nbsp;
did I get that correct? Oh, so I was right. So,&nbsp;&nbsp;

163
00:20:21,680 --> 00:20:29,280
we did get that entry correct, permitting the&nbsp;
Telnet traffic. But probably later in this lab,&nbsp;&nbsp;

164
00:20:29,280 --> 00:20:35,520
in one of the later steps, looks like we add a&nbsp;
PERMIT ICMP ANY ANY command to allow those pings.&nbsp;&nbsp;

165
00:20:38,400 --> 00:20:43,600
Okay, so that's Boson NetSim for CCNA. If you&nbsp;
want to get Boson NetSim, please follow the link&nbsp;&nbsp;

166
00:20:43,600 --> 00:20:48,320
in the video description. As you can see here,&nbsp;
there are tons of practice labs for the CCNA,&nbsp;&nbsp;

167
00:20:48,880 --> 00:20:53,520
all very in-depth, very good for testing&nbsp;
your knowledge and improving your skills of&nbsp;&nbsp;

168
00:20:53,520 --> 00:20:57,600
configuring and troubleshooting. Once again,&nbsp;
follow that link in the video description.

169
00:21:01,040 --> 00:21:05,280
Before finishing today’s video I want&nbsp;
to thank my JCNP-level channel members.&nbsp;&nbsp;

170
00:21:05,920 --> 00:21:12,000
To join, please click the ‘Join’ button under&nbsp;
the video. Thank you to Samil, Aaron, Junhong,&nbsp;&nbsp;

171
00:21:12,640 --> 00:21:19,120
Njabulo, Benjamin, Tshepiso, Justin, Prakaash,&nbsp;
Nasir, Erlison, Apogee, Marko, Daming, Joshua,&nbsp;&nbsp;

172
00:21:19,120 --> 00:21:23,920
Jhilmar, Ed, Value, John, Funnydart,&nbsp;
Velvijaykum, C Mohd, Mark, Yousif,&nbsp;&nbsp;

173
00:21:23,920 --> 00:21:27,200
Boson Software, Devin, Lito, Yonatan, and Vance.&nbsp;&nbsp;

174
00:21:28,080 --> 00:21:32,080
Sorry if I pronounced your name incorrectly,&nbsp;
but thank you so much for your support.&nbsp;&nbsp;

175
00:21:32,800 --> 00:21:38,320
This is the list of JCNP-level members at the&nbsp;
time of recording by the way, December 6th 2020,&nbsp;&nbsp;

176
00:21:38,880 --> 00:21:43,840
if you signed up recently and your name isn’t&nbsp;
on here don’t worry, you’ll be in future videos.

177
00:21:45,840 --> 00:21:48,880
Thank you for watching. Please&nbsp;
subscribe to the channel,&nbsp;&nbsp;

178
00:21:48,880 --> 00:21:53,600
like the video, leave a comment, and share the&nbsp;
video with anyone else studying for the CCNA.&nbsp;&nbsp;

179
00:21:54,720 --> 00:22:00,320
If you want to leave a tip, check the links in the&nbsp;
description. I'm also a Brave verified publisher&nbsp;&nbsp;

180
00:22:00,320 --> 00:22:06,880
and accept BAT, or Basic Attention Token, tips&nbsp;
via the Brave browser. That's all for now.
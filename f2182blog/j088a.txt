1
00:00:01,120 --> 00:00:07,600
Welcome to Jeremy’s IT Lab. This is a free,&nbsp;
complete course for the CCNA. If you like these&nbsp;&nbsp;

2
00:00:07,600 --> 00:00:13,520
videos, please subscribe to follow along with the&nbsp;
series. Also, please like and leave a comment,&nbsp;&nbsp;

3
00:00:13,520 --> 00:00:17,680
and share the video to help spread this&nbsp;
free series of videos. Thanks for your help.

4
00:00:19,040 --> 00:00:25,840
In this video I will introduce Quality of Service,&nbsp;
QoS. QoS is used to give priority to certain types&nbsp;&nbsp;

5
00:00:25,840 --> 00:00:32,800
of network traffic to minimize things like delay&nbsp;
and packet loss. QoS is mentioned in exam topic&nbsp;&nbsp;

6
00:00:32,800 --> 00:00:39,840
4.7. However, that’s not the only thing we’ll&nbsp;
cover in this video. I will also introduce PoE,&nbsp;&nbsp;

7
00:00:39,840 --> 00:00:46,480
Power over Ethernet. PoE allows devices to&nbsp;
receive electric power over an Ethernet cable,&nbsp;&nbsp;

8
00:00:46,480 --> 00:00:52,000
instead of requiring a separate power&nbsp;
cable. I will also introduce voice VLANs,&nbsp;&nbsp;

9
00:00:52,000 --> 00:00:56,400
which is a topic I didn’t mention in the&nbsp;
VLAN section of the course. Although these&nbsp;&nbsp;

10
00:00:56,400 --> 00:01:02,880
topics aren’t directly related to QoS, they are&nbsp;
related to the topic of IP phones, Voice over IP.&nbsp;&nbsp;

11
00:01:03,920 --> 00:01:10,080
QoS is often used to prioritize Voice over IP&nbsp;
traffic from IP phones to ensure the audio quality&nbsp;&nbsp;

12
00:01:10,080 --> 00:01:15,600
is acceptable. So, that’s why I’ve decided to&nbsp;
fit these two additional topics into this video.&nbsp;&nbsp;

13
00:01:16,560 --> 00:01:20,080
They are small topics on the CCNA,&nbsp;
so we can cover them quickly.

14
00:01:21,520 --> 00:01:26,960
Here’s what we’ll cover. First up, I’ll give&nbsp;
a very brief introduction to IP phones as well&nbsp;&nbsp;

15
00:01:26,960 --> 00:01:33,680
as the concept of voice VLANs. IP phones are&nbsp;
telephones which send audio data in IP packets&nbsp;&nbsp;

16
00:01:33,680 --> 00:01:40,000
over IP networks, such as the Internet. Then&nbsp;
I’ll introduce Power over Ethernet, PoE,&nbsp;&nbsp;

17
00:01:40,000 --> 00:01:44,800
which is commonly used to provide electric&nbsp;
power to IP phones over an Ethernet cable,&nbsp;&nbsp;

18
00:01:44,800 --> 00:01:49,760
as opposed to using a separate power&nbsp;
cable. Finally I’ll get to the main topic,&nbsp;&nbsp;

19
00:01:49,760 --> 00:01:56,800
an intro to quality of service, QoS. I will&nbsp;
introduce the basics of QoS and how it works,&nbsp;&nbsp;

20
00:01:56,800 --> 00:02:02,000
and then in the next video we’ll look at some&nbsp;
more details. Watch until the end of the video&nbsp;&nbsp;

21
00:02:02,000 --> 00:02:08,480
for a bonus question from Boson Software’s ExSim&nbsp;
for CCNA, the best practice exams for the CCNA.

22
00:02:10,320 --> 00:02:16,240
So first let’s cover IP phones. Traditional&nbsp;
phones operate over the public switched telephone&nbsp;&nbsp;

23
00:02:16,240 --> 00:02:24,000
network, PSTN. Sometimes this is called POTS,&nbsp;
plain old telephone service. IP phones, on the&nbsp;&nbsp;

24
00:02:24,000 --> 00:02:29,920
other hand, use VoIP, Voice over IP, technologies&nbsp;
to enable phone calls over an IP network,&nbsp;&nbsp;

25
00:02:29,920 --> 00:02:37,440
such as the Internet. Audio data is encapsulated&nbsp;
in IP packets and sent over the network. Here’s&nbsp;&nbsp;

26
00:02:37,440 --> 00:02:44,080
an example of a Cisco IP phone. Cisco IP phones&nbsp;
are used by many enterprises all over the world,&nbsp;&nbsp;

27
00:02:44,080 --> 00:02:49,520
although of course there are other vendors that&nbsp;
make and sell IP phones. IP phones are connected&nbsp;&nbsp;

28
00:02:49,520 --> 00:02:56,080
to a switch just like any other end host. So, you&nbsp;
could do something like this. A PC and an IP phone&nbsp;&nbsp;

29
00:02:56,080 --> 00:03:02,800
at each desk, each connected to its own switch&nbsp;
port. This kind of design works and is an option,&nbsp;&nbsp;

30
00:03:02,800 --> 00:03:07,120
but there is a much better and more common&nbsp;
approach to connecting these devices to a switch.

31
00:03:08,200 --> 00:03:15,360
IP phones have an internal 3-port switch. 1 port&nbsp;
is the uplink, which connects to the external&nbsp;&nbsp;

32
00:03:15,360 --> 00:03:22,080
switch. 1 port is the downlink which connects&nbsp;
to the PC. And 1 port connects internally to&nbsp;&nbsp;

33
00:03:22,080 --> 00:03:29,440
the phone itself. Let me demonstrate. So, we have&nbsp;
a PC, an IP phone, and a regular network switch.&nbsp;&nbsp;

34
00:03:30,400 --> 00:03:34,400
However, within the IP phone there is a&nbsp;
small internal switch with three ports.&nbsp;&nbsp;

35
00:03:35,280 --> 00:03:40,480
One of these is used to connect to the switch&nbsp;
with an Ethernet cable. One connects to the PC,&nbsp;&nbsp;

36
00:03:40,480 --> 00:03:46,080
again with an Ethernet cable. And the last&nbsp;
one connects internally to the phone itself.&nbsp;&nbsp;

37
00:03:46,080 --> 00:03:50,160
This one is internal, you don’t actually have&nbsp;
to take an Ethernet cable and connect it.&nbsp;&nbsp;

38
00:03:51,120 --> 00:03:56,880
So, why is this setup better? It allows the PC&nbsp;
and the IP phone to share a single switch port.&nbsp;&nbsp;

39
00:03:57,920 --> 00:04:02,080
Traffic from the PC passes through&nbsp;
the IP phone to the switch like this.&nbsp;&nbsp;

40
00:04:03,200 --> 00:04:06,240
Traffic from the IP phone itself&nbsp;
can also go to the switch.&nbsp;&nbsp;

41
00:04:07,440 --> 00:04:11,840
So, with the same amount of devices we&nbsp;
can use half the number of switchports,&nbsp;&nbsp;

42
00:04:11,840 --> 00:04:16,080
meaning we need less switches, so we don’t&nbsp;
have to spend as much money buying switches.&nbsp;&nbsp;

43
00:04:17,360 --> 00:04:22,240
Note that it is recommended to separate voice&nbsp;
traffic, which is traffic from the IP phone,&nbsp;&nbsp;

44
00:04:22,240 --> 00:04:28,400
and data traffic, which is traffic from the&nbsp;
PC, by placing them in separate VLANs. I’ll&nbsp;&nbsp;

45
00:04:28,400 --> 00:04:33,440
mention this again later, but when configuring&nbsp;
quality of service, we want to be able to specify&nbsp;&nbsp;

46
00:04:33,440 --> 00:04:38,480
the traffic from the IP phones and give it a&nbsp;
higher priority than the regular data traffic.&nbsp;&nbsp;

47
00:04:39,440 --> 00:04:45,520
So, we can place them in separate VLANs by&nbsp;
configuring a ‘voice VLAN’. When we do that,&nbsp;&nbsp;

48
00:04:45,520 --> 00:04:51,120
traffic from the PC will be untagged, but traffic&nbsp;
from the IP phone will be tagged with a VLAN ID.

49
00:04:53,280 --> 00:04:55,840
So, how can we configure a&nbsp;
switchport to enable this?&nbsp;&nbsp;

50
00:04:56,720 --> 00:05:01,760
Remember, the PC and the IP phone will use&nbsp;
different VLANs. It’s actually quite simple to&nbsp;&nbsp;

51
00:05:01,760 --> 00:05:06,560
configure, you only need one additional command&nbsp;
compared to configuring a regular access port.&nbsp;&nbsp;

52
00:05:07,840 --> 00:05:14,880
Here’s the configuration. I enter interface config&nbsp;
mode for g0/0, configure it as an access port,&nbsp;&nbsp;

53
00:05:14,880 --> 00:05:22,640
assign it to access vlan 10, and here’s the&nbsp;
new command. SWITCHPORT VOICE VLAN 11. With&nbsp;&nbsp;

54
00:05:22,640 --> 00:05:28,560
this configuration, PC1 will send its traffic&nbsp;
untagged, as normal. Remember, another name for&nbsp;&nbsp;

55
00:05:28,560 --> 00:05:36,400
an access port is an ‘untagged’ port. Usually they&nbsp;
only send and receive untagged traffic. However,&nbsp;&nbsp;

56
00:05:36,400 --> 00:05:43,680
SW1 will use CDP, Cisco Discovery Protocol,&nbsp;
to tell PH1 to tag PH1’s traffic in VLAN 11.&nbsp;&nbsp;

57
00:05:44,880 --> 00:05:50,640
So, this access port is now accepting traffic&nbsp;
from multiple VLANs. What kind of interface&nbsp;&nbsp;

58
00:05:50,640 --> 00:05:57,760
usually carries traffic from multiple VLANs?&nbsp;
It’s a trunk port. So, is G0/0 a trunk port?&nbsp;&nbsp;

59
00:05:58,560 --> 00:06:06,320
We configured SWITCHPORT MODE ACCESS, not TRUNK.&nbsp;
So, let’s check what kind of port it actually is.&nbsp;&nbsp;

60
00:06:06,320 --> 00:06:14,480
I used SHOW INTERFACES G0/0 SWITCHPORT. Here we&nbsp;
can see the access VLAN of 10. And here’s the&nbsp;&nbsp;

61
00:06:14,480 --> 00:06:20,960
voice VLAN of 11. But up here, we can see that&nbsp;
both the administrative mode and the operational&nbsp;&nbsp;

62
00:06:20,960 --> 00:06:26,880
mode are static access. So, even though it&nbsp;
carries traffic from two VLANs, 10 and 11,&nbsp;&nbsp;

63
00:06:27,440 --> 00:06:31,920
G0/0 is not considered a trunk port.&nbsp;
It is considered an access port.

64
00:06:33,680 --> 00:06:38,960
Let’s take a look at another command to&nbsp;
confirm that. I used SHOW INTERFACES TRUNK&nbsp;&nbsp;

65
00:06:38,960 --> 00:06:43,200
and nothing was displayed, telling&nbsp;
us that G0/0 is not a trunk port.&nbsp;&nbsp;

66
00:06:44,320 --> 00:06:49,920
Now, even if the interface is an access port,&nbsp;
you can do SHOW INTERFACES, the interface name,&nbsp;&nbsp;

67
00:06:49,920 --> 00:06:55,040
and then TRUNK. That’s what I did here.&nbsp;
Notice that the status is not-trunking,&nbsp;&nbsp;

68
00:06:55,600 --> 00:07:00,640
again telling us that this isn’t considered&nbsp;
a trunk. Now, you might notice that it says&nbsp;&nbsp;

69
00:07:00,640 --> 00:07:05,520
‘Vlans allowed on trunk’ here, but it always says&nbsp;
that in this command, even if its not a trunk.

70
00:07:07,680 --> 00:07:12,560
So, looking back a few slides, instead of&nbsp;
using an individual switchport for each PC&nbsp;&nbsp;

71
00:07:12,560 --> 00:07:19,520
and each IP phone, we can take these three PCs and&nbsp;
connect them to the IP phones. Instead of using&nbsp;&nbsp;

72
00:07:19,520 --> 00:07:26,400
six switchports, we are now using only three. We&nbsp;
configure SWITCHPORT ACCESS VLAN 10 for the PCs,&nbsp;&nbsp;

73
00:07:26,400 --> 00:07:32,480
sometimes called a data VLAN. And we configure&nbsp;
SWITCHPORT VOICE VLAN 11 for the IP phones.&nbsp;&nbsp;

74
00:07:33,760 --> 00:07:38,560
Okay, so that allows us to use fewer switchports.&nbsp;
But there’s something else we need to connect&nbsp;&nbsp;

75
00:07:38,560 --> 00:07:45,680
to for an IP phone to work. Of course, being an&nbsp;
electronic device, IP phones require electricity.&nbsp;&nbsp;

76
00:07:46,480 --> 00:07:51,040
That means we need to plug them into a wall socket&nbsp;
or some other power outlet to get electricity.&nbsp;&nbsp;

77
00:07:52,080 --> 00:07:56,240
Or, perhaps there’s a better solution that&nbsp;
doesn’t require an extra power outlet.&nbsp;&nbsp;

78
00:07:56,880 --> 00:08:01,360
And there is such a solution, it is&nbsp;
called Power over Ethernet, or PoE.

79
00:08:02,960 --> 00:08:05,760
So, let’s get into PoE, Power over Ethernet.&nbsp;&nbsp;

80
00:08:06,800 --> 00:08:14,080
PoE allows Power Sourcing Equipment, PSE, to&nbsp;
provide electric power to powered devices, PDs,&nbsp;&nbsp;

81
00:08:14,080 --> 00:08:21,760
over an Ethernet cable. Typically the PSE is a&nbsp;
switch and the PDs are IP phones, IP cameras,&nbsp;&nbsp;

82
00:08:21,760 --> 00:08:28,080
wireless access points, etc. To clarify, this is&nbsp;
the same Ethernet cable that is used to transmit&nbsp;&nbsp;

83
00:08:28,080 --> 00:08:34,320
data. You don’t need a separate cable. One cable&nbsp;
is used to provide power and to transmit data.&nbsp;&nbsp;

84
00:08:35,360 --> 00:08:42,000
The PSE, the switch, receives AC power from the&nbsp;
outlet, coverts it to DC power, and supplies&nbsp;&nbsp;

85
00:08:42,000 --> 00:08:49,120
that DC power to the PDs, for example IP phones.&nbsp;
Here’s an example. A switch is connected to a wall&nbsp;&nbsp;

86
00:08:49,120 --> 00:08:57,600
outlet, it is the PSE, power sourcing equipment.&nbsp;
Three IP phones are PDs, powered devices. The&nbsp;&nbsp;

87
00:08:57,600 --> 00:09:04,160
outlet provides AC power, but electronic devices&nbsp;
use DC power. The switch converts the AC power to&nbsp;&nbsp;

88
00:09:04,160 --> 00:09:10,880
DC and provides it to the IP phones. These same&nbsp;
Ethernet cables are also used to transmit data.

89
00:09:12,400 --> 00:09:16,000
But you have to be careful about&nbsp;
providing electrical current to devices.&nbsp;&nbsp;

90
00:09:16,960 --> 00:09:23,200
Too much electrical current can harm electrical&nbsp;
devices. So, PoE has a process to determine if&nbsp;&nbsp;

91
00:09:23,200 --> 00:09:28,880
a connected device needs power, and how much&nbsp;
power it needs if it does. This is a major&nbsp;&nbsp;

92
00:09:28,880 --> 00:09:35,280
simplification, but basically when a device is&nbsp;
connected to a PoE-enabled switch port, the PSE&nbsp;&nbsp;

93
00:09:35,280 --> 00:09:41,280
sends low power signals, monitors the response,&nbsp;
and determines how much power the PD needs.&nbsp;&nbsp;

94
00:09:42,400 --> 00:09:47,280
These first signals are very weak to ensure&nbsp;
that the PSE doesn’t give too much power to&nbsp;&nbsp;

95
00:09:47,280 --> 00:09:52,480
the connected device, causing it harm.&nbsp;
If the connected device needs power,&nbsp;&nbsp;

96
00:09:52,480 --> 00:09:59,360
the PSE supplies power to allow the PD to boot.&nbsp;
Then the PSE continues monitoring the PD and&nbsp;&nbsp;

97
00:09:59,360 --> 00:10:06,240
supplying power as needed, but again not too much&nbsp;
power. There is a feature called power policing&nbsp;&nbsp;

98
00:10:06,240 --> 00:10:13,440
which prevents a PD from taking too much power.&nbsp;
Now, PoE configuration isn’t a CCNA exam topic,&nbsp;&nbsp;

99
00:10:13,440 --> 00:10:19,600
but let me demonstrate just a few commands&nbsp;
for power policing. POWER INLINE POLICE,&nbsp;&nbsp;

100
00:10:19,600 --> 00:10:23,600
configured on an interface, configures&nbsp;
power policing with the default settings.&nbsp;&nbsp;

101
00:10:24,400 --> 00:10:29,120
It will disable the port and send a Syslog&nbsp;
message if a PD draws too much power.&nbsp;&nbsp;

102
00:10:30,160 --> 00:10:36,880
This is equivalent to the command POWER INLINE&nbsp;
POLICE ACTION ERR-DISABLE. Both of these commands&nbsp;&nbsp;

103
00:10:36,880 --> 00:10:42,000
are the default for power policing and have&nbsp;
the same effect. The interface will be put&nbsp;&nbsp;

104
00:10:42,000 --> 00:10:47,440
in an ‘error-disabled’ state and then it can&nbsp;
be re-enabled by issuing the SHUTDOWN command&nbsp;&nbsp;

105
00:10:47,440 --> 00:10:53,360
followed by NO SHUTDOWN. Okay, so that’s one&nbsp;
option for power policing on an interface.&nbsp;&nbsp;

106
00:10:54,320 --> 00:11:02,000
POWER INLINE POLICE or POWER INLINE POLICE ACTION&nbsp;
ERR-DISABLE, same thing. Here’s another option.&nbsp;&nbsp;

107
00:11:02,880 --> 00:11:09,200
POWER INLINE POLICE ACTION LOG does not shut down&nbsp;
the interface if the PD draws too much power.&nbsp;&nbsp;

108
00:11:10,160 --> 00:11:13,840
It will simply restart the&nbsp;
interface and send a Syslog message.&nbsp;&nbsp;

109
00:11:14,800 --> 00:11:18,160
So, because the interface&nbsp;
restarts, the connected PD&nbsp;&nbsp;

110
00:11:18,160 --> 00:11:23,600
will lose power and then restart as well.&nbsp;
Then it will re-negotiate its power needs.

111
00:11:25,680 --> 00:11:30,880
Let me show you those commands in&nbsp;
the CLI. On SW1’s G0/0 interface,&nbsp;&nbsp;

112
00:11:30,880 --> 00:11:38,080
I issued the command POWER INLINE POLICE. Then I&nbsp;
used the command SHOW POWER INLINE POLICE G0/0.&nbsp;&nbsp;

113
00:11:39,120 --> 00:11:43,120
First of all, here you can see how much&nbsp;
power the switch is currently providing&nbsp;&nbsp;

114
00:11:43,120 --> 00:11:49,200
and how much capacity it has. But here’s what&nbsp;
I really want to show you. Even though I didn’t&nbsp;&nbsp;

115
00:11:49,200 --> 00:11:55,840
specify ACTION ERR-DISABLE in the command, you&nbsp;
can see that the default action is err-disable.

116
00:11:56,560 --> 00:12:00,000
Okay, this time I issued the&nbsp;
command POWER INLINE POLICE&nbsp;&nbsp;

117
00:12:00,000 --> 00:12:07,920
ACTION LOG. I did SHOW POWER INLINE POLICE G0/0,&nbsp;
and this time you can see the action is only log,&nbsp;&nbsp;

118
00:12:07,920 --> 00:12:12,160
the interface won’t be err-disabled if&nbsp;
the connected PD draws too much power.&nbsp;&nbsp;

119
00:12:13,440 --> 00:12:18,080
Power policing is one aspect of PoE that&nbsp;
you should be aware of for the CCNA.&nbsp;&nbsp;

120
00:12:18,960 --> 00:12:25,200
Just be aware of its purpose, preventing PDs&nbsp;
from drawing too much power. Okay, let’s move on.

121
00:12:26,880 --> 00:12:34,880
Here are some standards of PoE. Actually, PoE&nbsp;
originally wasn’t PoE, it was Cisco Inline Power,&nbsp;&nbsp;

122
00:12:34,880 --> 00:12:42,320
ILP. As has happened multiple times, for&nbsp;
example with CDP and LLDP, Cisco invented&nbsp;&nbsp;

123
00:12:42,320 --> 00:12:49,760
the technology first for its devices, and then it&nbsp;
was standardized after. Cisco ILP offers 7 watts&nbsp;&nbsp;

124
00:12:49,760 --> 00:12:56,960
of power per port from the PSE, and 2 wire pairs&nbsp;
provide that power. Remember early in the course,&nbsp;&nbsp;

125
00:12:56,960 --> 00:13:02,480
how Ethernet and FastEthernet only used 4 of the&nbsp;
8 wires in an Ethernet cable to transmit data?&nbsp;&nbsp;

126
00:13:03,280 --> 00:13:09,760
They used wires 1, 2, 3, and 6. Well,&nbsp;
Cisco decided to use the other 4 wires,&nbsp;&nbsp;

127
00:13:09,760 --> 00:13:18,080
4, 5, 7, and 8, to provide power. Later, Cisco ILP&nbsp;
was standardized as Power over Ethernet, so other&nbsp;&nbsp;

128
00:13:18,080 --> 00:13:26,560
device makers would be able to use the technology.&nbsp;
PoE and PoE+, also called Type 1 and Type 2,&nbsp;&nbsp;

129
00:13:26,560 --> 00:13:35,040
provide more power than the original Cisco ILP.&nbsp;
Note the standard numbers, 802.3af and 802.3at.&nbsp;&nbsp;

130
00:13:36,560 --> 00:13:41,280
Then, Cisco released another original&nbsp;
non-standard protocol called UPoE,&nbsp;&nbsp;

131
00:13:41,280 --> 00:13:47,840
which stands for Universal Power over Ethernet.&nbsp;
But then a similar standard was released, 802.3bt.&nbsp;&nbsp;

132
00:13:49,200 --> 00:13:56,800
This includes Type 3, offering up to 60 watts,&nbsp;
and Type 4, offering up to 100 watts. Now, you&nbsp;&nbsp;

133
00:13:56,800 --> 00:14:02,880
probably don’t have to memorize this table for the&nbsp;
CCNA. You’re supposed to understand PoE concepts,&nbsp;&nbsp;

134
00:14:02,880 --> 00:14:08,640
what it is and what it’s used for. However, just&nbsp;
in case I will include some flash cards of this&nbsp;&nbsp;

135
00:14:08,640 --> 00:14:13,760
table in the supplemental resources. It’s up&nbsp;
to you if you want to keep them or delete them.

136
00:14:15,360 --> 00:14:20,400
Returning to that previous slide again, the PCs&nbsp;
will still need to be plugged into an outlet to&nbsp;&nbsp;

137
00:14:20,400 --> 00:14:25,520
get their power. But these phones are able to&nbsp;
get power over the same Ethernet cable they use&nbsp;&nbsp;

138
00:14:25,520 --> 00:14:31,120
to connect to the switch. PoE isn’t a&nbsp;
major CCNA topic, but you should know&nbsp;&nbsp;

139
00:14:31,120 --> 00:14:37,360
the information I gave you in this video. Now&nbsp;
finally let’s move on to QoS, Quality of Service.&nbsp;&nbsp;

140
00:14:38,400 --> 00:14:42,160
Why did I spend all this time&nbsp;
talking about voice VLANs and PoE&nbsp;&nbsp;

141
00:14:42,160 --> 00:14:48,240
in a video about QoS? It’s because the voice&nbsp;
data from IP phones is often what we want to&nbsp;&nbsp;

142
00:14:48,240 --> 00:14:54,160
apply QoS to, to give higher priority to the&nbsp;
voice data and ensure high audio quality.

143
00:14:56,000 --> 00:14:59,600
First, here’s an extremely simple&nbsp;
history of why QoS was created.&nbsp;&nbsp;

144
00:15:00,720 --> 00:15:06,960
Voice traffic and data traffic used to use&nbsp;
entirely separate networks. Voice traffic used the&nbsp;&nbsp;

145
00:15:06,960 --> 00:15:14,480
PSTN, public switched telephone network. And what&nbsp;
we call data traffic used IP networks such as an&nbsp;&nbsp;

146
00:15:14,480 --> 00:15:20,480
enterprise WAN or the Internet, for example a PC&nbsp;
accessing a file server over the enterprise WAN.&nbsp;&nbsp;

147
00:15:21,600 --> 00:15:27,200
QoS wasn’t really necessary, because the different&nbsp;
kinds of traffic didn’t compete for bandwidth.&nbsp;&nbsp;

148
00:15:28,000 --> 00:15:32,240
The audio quality of a phone call won’t be&nbsp;
affected if the Internet connection is busy.

149
00:15:33,520 --> 00:15:40,080
However, modern networks are typically converged&nbsp;
networks in which IP phones, video traffic,&nbsp;&nbsp;

150
00:15:40,080 --> 00:15:46,960
regular data traffic such as web traffic, etc,&nbsp;
all share the same IP network. Now, the PSTN&nbsp;&nbsp;

151
00:15:46,960 --> 00:15:52,320
hasn’t disappeared, it’s still used all over the&nbsp;
world, but we’ll focus just on the IP network from&nbsp;&nbsp;

152
00:15:52,320 --> 00:15:58,400
now on. Converged networks enable cost savings&nbsp;
as well as more advanced features for voice and&nbsp;&nbsp;

153
00:15:58,400 --> 00:16:05,360
video traffic. For example IP phones can integrate&nbsp;
with collaboration software such as Cisco WebEx or&nbsp;&nbsp;

154
00:16:05,360 --> 00:16:11,040
Microsoft Teams. However, the different kinds&nbsp;
of traffic now have to compete for bandwidth.&nbsp;&nbsp;

155
00:16:11,920 --> 00:16:15,680
If there is plenty of available bandwidth&nbsp;
and the network isn’t congested,&nbsp;&nbsp;

156
00:16:15,680 --> 00:16:20,720
that’s not a problem, but a busy network can&nbsp;
pose a problem for voice and video traffic&nbsp;&nbsp;

157
00:16:20,720 --> 00:16:27,840
which is sensitive to things such as delay. QoS,&nbsp;
Quality of Service, is a set of tools used by&nbsp;&nbsp;

158
00:16:27,840 --> 00:16:33,840
network devices to apply different treatment to&nbsp;
different packets. Certain kinds of traffic get&nbsp;&nbsp;

159
00:16:33,840 --> 00:16:38,240
higher priority treatment, and other kinds&nbsp;
of traffic get lower priority treatment.

160
00:16:40,320 --> 00:16:44,640
QoS is used to manage the following&nbsp;
four characteristics of network traffic.&nbsp;&nbsp;

161
00:16:45,520 --> 00:16:48,320
First, bandwidth, a term&nbsp;
you’ve certainly heard before.&nbsp;&nbsp;

162
00:16:49,360 --> 00:16:54,240
This refers to the overall capacity of the&nbsp;
link and is measured in bits per second,&nbsp;&nbsp;

163
00:16:54,240 --> 00:17:00,640
for example kilobits per second, megabits&nbsp;
per second, gigabits per second, etc. QoS&nbsp;&nbsp;

164
00:17:00,640 --> 00:17:05,440
tools allow you to reserve a certain amount of a&nbsp;
link’s bandwidth for specific kinds of traffic.&nbsp;&nbsp;

165
00:17:06,400 --> 00:17:10,480
For example, you could reserve 20% of&nbsp;
a link’s bandwidth for voice traffic,&nbsp;&nbsp;

166
00:17:11,040 --> 00:17:18,080
30% for specific kinds of important data&nbsp;
traffic, and leave 50% for all other traffic.&nbsp;&nbsp;

167
00:17:18,080 --> 00:17:22,720
The next characteristic is delay. There&nbsp;
are two main ways to measure delay.&nbsp;&nbsp;

168
00:17:23,520 --> 00:17:28,240
The amount of time it takes for traffic to go&nbsp;
from source to destination is called the one-way&nbsp;&nbsp;

169
00:17:28,240 --> 00:17:33,920
delay. Let me demonstrate. The amount of time&nbsp;
it takes a packet from phone1 to reach phone2&nbsp;&nbsp;

170
00:17:34,560 --> 00:17:40,800
is called one-way delay. Alternatively, we could&nbsp;
measure two-way delay, the amount of time it takes&nbsp;&nbsp;

171
00:17:40,800 --> 00:17:46,400
traffic to go from source to destination and&nbsp;
return. So, not just measuring how long it takes&nbsp;&nbsp;

172
00:17:46,400 --> 00:17:52,480
a packet to go from phone1 to phone2, but also&nbsp;
how long it takes the reply to get back to phone1.

173
00:17:54,400 --> 00:18:00,240
Okay, next up is Jitter. Jitter is the variation&nbsp;
in one-way delay between packets sent by the&nbsp;&nbsp;

174
00:18:00,240 --> 00:18:07,440
same application. So, if some packets arrive in 10&nbsp;
milliseconds, but some arrive in 100 milliseconds,&nbsp;&nbsp;

175
00:18:07,440 --> 00:18:12,000
that’s a lot of jitter, a big difference in&nbsp;
how long it takes for each packet to reach&nbsp;&nbsp;

176
00:18:12,000 --> 00:18:17,760
its destination. Jitter will negatively affect&nbsp;
the audio quality of phone calls, so IP phones&nbsp;&nbsp;

177
00:18:17,760 --> 00:18:23,920
have a jitter buffer to provide a fixed delay&nbsp;
to audio packets. However, if the jitter is too&nbsp;&nbsp;

178
00:18:23,920 --> 00:18:29,840
high it will overrun the buffer and the audio&nbsp;
quality will suffer. Finally, there is loss.&nbsp;&nbsp;

179
00:18:30,560 --> 00:18:36,400
This refers to the percentage of packets sent that&nbsp;
do not reach their destination. This can be caused&nbsp;&nbsp;

180
00:18:36,400 --> 00:18:42,800
by faulty cables, or if the network is congested&nbsp;
and a device’s packet queues get full, it will&nbsp;&nbsp;

181
00:18:42,800 --> 00:18:48,000
start discarding packets that can’t fit into the&nbsp;
queue. If some audio packets don’t reach their&nbsp;&nbsp;

182
00:18:48,000 --> 00:18:53,200
destination, for example, that will obviously&nbsp;
have a negative effect on the quality of the call.

183
00:18:54,960 --> 00:18:59,120
There are a few recommended standards&nbsp;
for acceptable interactive audio quality.&nbsp;&nbsp;

184
00:19:00,080 --> 00:19:04,640
Interactive audio means something like a&nbsp;
phone call, the audio of a Zoom call, etc.&nbsp;&nbsp;

185
00:19:05,520 --> 00:19:11,120
It is recommended that the one-way delay be&nbsp;
150 milliseconds or less. And the jitter,&nbsp;&nbsp;

186
00:19:11,120 --> 00:19:17,920
the variation in delay, should be 30 milliseconds&nbsp;
or less. Finally, the loss should be 1% or less.&nbsp;&nbsp;

187
00:19:18,960 --> 00:19:22,000
If these standards are met, you&nbsp;
can expect a decent experience,&nbsp;&nbsp;

188
00:19:22,560 --> 00:19:26,160
but if the standards are not met there&nbsp;
could be a noticeable reduction in the&nbsp;&nbsp;

189
00:19:26,160 --> 00:19:30,160
quality of the phone call, the user&nbsp;
experience will not be as good.

190
00:19:31,840 --> 00:19:36,720
Now let me introduce the topic of queuing, which&nbsp;
is important for understanding other aspects of&nbsp;&nbsp;

191
00:19:36,720 --> 00:19:42,800
QoS. If a network device receives messages faster&nbsp;
than it can forward them out of the appropriate&nbsp;&nbsp;

192
00:19:42,800 --> 00:19:48,880
interface, the messages are placed in a queue.&nbsp;
For example, this router is receiving packets&nbsp;&nbsp;

193
00:19:48,880 --> 00:19:56,560
on its G0/0 and G0/1 interfaces faster than it&nbsp;
can forward them out of its G0/2 interface. So,&nbsp;&nbsp;

194
00:19:56,560 --> 00:20:03,120
as you can see the queue for its G0/2 interface&nbsp;
starts filling up. By default, queued messages&nbsp;&nbsp;

195
00:20:03,120 --> 00:20:10,240
will be forwarded in a First In First Out, FIFO,&nbsp;
manner. What that means is that messages will be&nbsp;&nbsp;

196
00:20:10,240 --> 00:20:15,280
sent in the order they are received. No special&nbsp;
treatment is given to any kind of traffic.

197
00:20:17,040 --> 00:20:23,200
Now, what happens if the queue becomes full?&nbsp;
Traffic keeps arriving on the G0/0 and G0/1&nbsp;&nbsp;

198
00:20:23,200 --> 00:20:27,520
interfaces faster than the router&nbsp;
can forward the packets out of G0/2&nbsp;&nbsp;

199
00:20:27,520 --> 00:20:33,280
and the queue fills up. When this happens,&nbsp;
new packets will be dropped. So, if this&nbsp;&nbsp;

200
00:20:33,280 --> 00:20:38,720
packet arrives and needs to be forwarded out&nbsp;
of G0/2, but the queue is full, it is dropped.&nbsp;&nbsp;

201
00:20:39,680 --> 00:20:44,320
This is called tail drop, when there is not&nbsp;
enough room in the queue so packets are dropped.

202
00:20:46,480 --> 00:20:51,360
Tail drop is harmful, not just because packets&nbsp;
are lost, but because it can lead to something&nbsp;&nbsp;

203
00:20:51,360 --> 00:20:58,160
called TCP global synchronization. To explain&nbsp;
that, let me review the TCP sliding window.&nbsp;&nbsp;

204
00:20:59,280 --> 00:21:04,400
Hosts using TCP use the ‘sliding window’ to&nbsp;
increase and decrease the rate at which they&nbsp;&nbsp;

205
00:21:04,400 --> 00:21:09,760
send traffic as needed. So, the host will try&nbsp;
to increase the rate at which it sends traffic.&nbsp;&nbsp;

206
00:21:10,320 --> 00:21:15,280
And when a packet is dropped, it will be&nbsp;
re-transmitted. However, when this happens&nbsp;&nbsp;

207
00:21:15,280 --> 00:21:21,120
the sender will reduce the rate it sends traffic.&nbsp;
It will then gradually increase the rate again,&nbsp;&nbsp;

208
00:21:21,120 --> 00:21:26,640
and the process will repeat if another packet&nbsp;
is dropped. When the queue fills up and tail&nbsp;&nbsp;

209
00:21:26,640 --> 00:21:31,840
drop occurs, all TCP hosts sending traffic will&nbsp;
slow down the rate at which they send traffic.&nbsp;&nbsp;

210
00:21:33,040 --> 00:21:36,000
They will all then increase the&nbsp;
rate at which they send traffic,&nbsp;&nbsp;

211
00:21:36,000 --> 00:21:41,200
which rapidly leads to more congestion, dropped&nbsp;
packets, and then the process repeats again.&nbsp;&nbsp;

212
00:21:42,320 --> 00:21:46,880
So, it creates waves of the network being&nbsp;
underutilized, when they all slow down their&nbsp;&nbsp;

213
00:21:46,880 --> 00:21:51,600
rate of transmission, and then congested, when&nbsp;
they all increase their rate of transmission.&nbsp;&nbsp;

214
00:21:52,640 --> 00:21:57,440
Let me illustrate it for you. Network&nbsp;
congestion leads to tail drop,&nbsp;&nbsp;

215
00:21:57,440 --> 00:22:04,560
which leads to a global TCP window size decrease.&nbsp;
By global I mean all hosts sending TCP traffic&nbsp;&nbsp;

216
00:22:04,560 --> 00:22:10,320
will decrease their window size. That leads&nbsp;
to the network being underutilized. All of the&nbsp;&nbsp;

217
00:22:10,320 --> 00:22:14,800
hosts reduce their transmission rate, so they’re&nbsp;
not sending traffic as quickly as they could.&nbsp;&nbsp;

218
00:22:15,840 --> 00:22:22,080
That leads to a global TCP window size increase.&nbsp;
All sending hosts, noticing that they are able to&nbsp;&nbsp;

219
00:22:22,080 --> 00:22:27,200
send traffic more quickly than they currently are,&nbsp;
will increase their window size at the same time.&nbsp;&nbsp;

220
00:22:28,240 --> 00:22:32,400
This leads once again to network congestion,&nbsp;
and the process repeats in waves.&nbsp;&nbsp;

221
00:22:33,520 --> 00:22:40,320
Overutilization, underutilization,&nbsp;
overutilization, underutilization etc.

222
00:22:40,320 --> 00:22:45,360
A solution to prevent tail drop and&nbsp;
therefore prevent TCP global synchronization&nbsp;&nbsp;

223
00:22:45,360 --> 00:22:52,080
is Random Early Detection, RED. When the amount of&nbsp;
traffic in the queue reaches a certain threshold,&nbsp;&nbsp;

224
00:22:52,080 --> 00:22:55,840
the device will start randomly&nbsp;
dropping packets from select TCP flows.&nbsp;&nbsp;

225
00:22:56,640 --> 00:23:02,560
Why is this better than tail drop? Those TCP flows&nbsp;
that dropped packets will reduce the rate at which&nbsp;&nbsp;

226
00:23:02,560 --> 00:23:08,960
traffic is sent, but you will avoid global TCP&nbsp;
synchronization in which ALL TCP flows reduce&nbsp;&nbsp;

227
00:23:08,960 --> 00:23:14,640
and then increase the rate of transmission at&nbsp;
the same time in waves. So, ideally it will keep&nbsp;&nbsp;

228
00:23:14,640 --> 00:23:21,360
the rate of traffic more even. Now, in standard&nbsp;
RED all kinds of traffic are treated the same.&nbsp;&nbsp;

229
00:23:21,360 --> 00:23:26,480
There is a global threshold, and if the amount&nbsp;
of traffic in the queue crosses the threshold&nbsp;&nbsp;

230
00:23:26,480 --> 00:23:32,640
the device will start dropping traffic randomly as&nbsp;
I said above. However an improved version called&nbsp;&nbsp;

231
00:23:32,640 --> 00:23:38,640
Weighted Random Early Detection, WRED, allows you&nbsp;
to control which packets are dropped depending on&nbsp;&nbsp;

232
00:23:38,640 --> 00:23:44,640
the traffic class. So, you could for example start&nbsp;
dropping HTTP packets when the queue is this full,&nbsp;&nbsp;

233
00:23:45,440 --> 00:23:48,160
FTP packets when the queue is that full, etc.&nbsp;&nbsp;

234
00:23:48,960 --> 00:23:52,800
The kinds of traffic that you configure&nbsp;
as lower-priority will be dropped sooner.&nbsp;&nbsp;

235
00:23:54,160 --> 00:23:58,720
We will cover traffic classes and more&nbsp;
details about how QoS actually works in&nbsp;&nbsp;

236
00:23:58,720 --> 00:24:03,840
the next video. For now, I think this is&nbsp;
a sufficient introduction to the topic.

237
00:24:05,200 --> 00:24:11,440
Okay, before moving on to the quiz let’s review&nbsp;
what we covered. First I introduced IP phones and&nbsp;&nbsp;

238
00:24:11,440 --> 00:24:17,440
voice VLANs. I showed you that an IP phone can&nbsp;
be connected to a switch, and then a PC can be&nbsp;&nbsp;

239
00:24:17,440 --> 00:24:23,360
connected to the IP phone. A voice VLAN can be&nbsp;
configured on the switchport, and the IP phone&nbsp;&nbsp;

240
00:24:23,360 --> 00:24:29,760
will tag traffic it sends using the voice VLAN.&nbsp;
Then I briefly introduced Power over Ethernet,&nbsp;&nbsp;

241
00:24:29,760 --> 00:24:34,640
which allows end devices to receive electric&nbsp;
power via the same Ethernet cable that is used&nbsp;&nbsp;

242
00:24:34,640 --> 00:24:41,040
to send and receive data. It is commonly used for&nbsp;
IP phones, cameras, and wireless access points.&nbsp;&nbsp;

243
00:24:42,320 --> 00:24:46,640
Finally we got to the main topic of the&nbsp;
video, an intro to quality of service,&nbsp;&nbsp;

244
00:24:46,640 --> 00:24:51,120
QoS, which allows you to give special&nbsp;
treatment to specific kinds of traffic,&nbsp;&nbsp;

245
00:24:51,760 --> 00:24:56,000
and it’s commonly used for delay-sensitive&nbsp;
traffic such as video and voice traffic.&nbsp;&nbsp;

246
00:24:57,040 --> 00:25:01,840
However, we only covered the foundational&nbsp;
knowledge in this video, such as defining delay,&nbsp;&nbsp;

247
00:25:01,840 --> 00:25:08,800
jitter, and loss. In the next video we’ll look at&nbsp;
the mechanics of how QoS works. Make sure to watch&nbsp;&nbsp;

248
00:25:08,800 --> 00:25:13,840
until the end of the video for a bonus practice&nbsp;
question from Boson Software’s ExSim for CCNA,&nbsp;&nbsp;

249
00:25:14,400 --> 00:25:19,680
the best practice exams for the CCNA.&nbsp;
Okay, let’s go to question 1 of the quiz.

250
00:25:21,920 --> 00:25:27,840
Examine G0/0’s interface configuration. Which of&nbsp;
the following statements are true? Select two.&nbsp;&nbsp;

251
00:25:28,480 --> 00:25:32,640
Okay, pause the video now to look at the&nbsp;
configuration and select the correct answers.

252
00:25:37,280 --> 00:25:44,080
Okay, the answers are A, voice traffic received&nbsp;
by G0/0 should be tagged in VLAN 99, and D,&nbsp;&nbsp;

253
00:25:44,640 --> 00:25:52,000
data traffic received by G0/0 should be untagged.&nbsp;
A phone connected to G0/0 should learn using CDP&nbsp;&nbsp;

254
00:25:52,000 --> 00:25:58,560
that it is in VLAN 99, and then it should tag&nbsp;
traffic it sends in VLAN 99. Now, there is no&nbsp;&nbsp;

255
00:25:58,560 --> 00:26:04,400
SWITCHPORT ACCESS VLAN command on the interface,&nbsp;
so that means it is in the default VLAN, VLAN 1.&nbsp;&nbsp;

256
00:26:05,360 --> 00:26:11,760
Data traffic, for example sent by a PC connected&nbsp;
to the IP phone which is connected to G0/0, will&nbsp;&nbsp;

257
00:26:11,760 --> 00:26:19,040
send its traffic untagged. After SW1 receives the&nbsp;
untagged traffic it will assume it is in VLAN1,&nbsp;&nbsp;

258
00:26:19,040 --> 00:26:24,400
but when it actually receives the traffic it&nbsp;
should be untagged. Okay, let’s go to question 2.

259
00:26:26,720 --> 00:26:31,120
You issue the power inline police&nbsp;
command on a PoE-enabled switch port.&nbsp;&nbsp;

260
00:26:31,840 --> 00:26:35,280
What will happen if the connected device&nbsp;
draws too much power from the switch?&nbsp;&nbsp;

261
00:26:36,080 --> 00:26:38,160
Pause the video now to think about the answer.

262
00:26:42,000 --> 00:26:46,720
Okay, the answer is C, the interface will&nbsp;
be err-disabled and a Syslog message will&nbsp;&nbsp;

263
00:26:46,720 --> 00:26:52,400
be generated. To enable it again, you should&nbsp;
issue the SHUTDOWN command and then NO SHUTDOWN&nbsp;&nbsp;

264
00:26:52,400 --> 00:26:58,000
command on the interface. When you issue the&nbsp;
command, the default action is ERR-DISABLE,&nbsp;&nbsp;

265
00:26:58,000 --> 00:27:05,840
so it’s equivalent to POWER INLINE POLICE ACTION&nbsp;
ERR-DISABLE. Okay, let’s go to question 3.

266
00:27:06,800 --> 00:27:10,480
Which of the following are recommended&nbsp;
standards for acceptable interactive&nbsp;&nbsp;

267
00:27:10,480 --> 00:27:15,120
audio quality? Select three. Pause the&nbsp;
video now to think about the answers.

268
00:27:19,440 --> 00:27:26,640
Okay, the answers are B, delay of 150 milliseconds&nbsp;
or less, C, jitter of 30 milliseconds or less,&nbsp;&nbsp;

269
00:27:26,640 --> 00:27:32,560
and E, loss of 1% or less. If these&nbsp;
standards are not met, you can probably&nbsp;&nbsp;

270
00:27:32,560 --> 00:27:38,400
expect a noticeable reduction in the quality of&nbsp;
the experience. Okay, let’s go to question 4.

271
00:27:41,360 --> 00:27:44,080
Which of the following is a&nbsp;
negative effect of tail drop?&nbsp;&nbsp;

272
00:27:44,640 --> 00:27:47,840
Pause the video now to think about the answer.

273
00:27:50,720 --> 00:27:58,000
Okay, the answer is D, TCP global synchronization.&nbsp;
When a packet queue fills up and tail drop occurs,&nbsp;&nbsp;

274
00:27:58,560 --> 00:28:04,000
all hosts sending TCP traffic will slow down their&nbsp;
rate of transmission in unison, and then increase&nbsp;&nbsp;

275
00:28:04,000 --> 00:28:10,080
it in unison too. This leads to repeating waves&nbsp;
of congestion followed by slower traffic rates.&nbsp;&nbsp;

276
00:28:11,120 --> 00:28:14,880
A TCP sliding window, is merely a mechanic in TCP,&nbsp;&nbsp;

277
00:28:14,880 --> 00:28:21,680
it’s not a negative thing on its own. RED&nbsp;
and WRED are two tools to avoid tail drop,&nbsp;&nbsp;

278
00:28:21,680 --> 00:28:26,800
so they are not a negative effect of&nbsp;
tail drop. Okay, let’s go to question 5.

279
00:28:28,880 --> 00:28:32,240
Which of the following is the default&nbsp;
manner of forwarding queued packets?&nbsp;&nbsp;

280
00:28:32,800 --> 00:28:34,800
Pause the video now to think about the answer.

281
00:28:38,880 --> 00:28:45,440
Okay, the answer is A, FIFO, which&nbsp;
stands for First In First Out. Basically,&nbsp;&nbsp;

282
00:28:45,440 --> 00:28:48,800
it means that packets will be forwarded&nbsp;
in the order they are put into the queue.&nbsp;&nbsp;

283
00:28:49,600 --> 00:28:56,560
Higher priority packets will not be sent to&nbsp;
the front of the queue, for example. B, CBWFQ,&nbsp;&nbsp;

284
00:28:56,560 --> 00:29:03,440
is something I’ll mention in the next video. RED&nbsp;
and WRED, I have already mentioned. They are not&nbsp;&nbsp;

285
00:29:03,440 --> 00:29:09,120
methods of forwarding queued packets, they are&nbsp;
methods of dropping queued packets. Okay, that’s&nbsp;&nbsp;

286
00:29:09,120 --> 00:29:15,280
all for the quiz. Now let’s take a look at a bonus&nbsp;
question from Boson Software’s ExSim for CCNA.

287
00:30:57,200 --> 00:30:59,440
There are supplementary materials for this video.&nbsp;&nbsp;

288
00:31:00,240 --> 00:31:04,000
There is a flashcard deck to&nbsp;
use with the software ‘Anki’.&nbsp;&nbsp;

289
00:31:04,000 --> 00:31:08,000
There will also be a packet tracer practice&nbsp;
lab so you can get some hands-on practice.&nbsp;&nbsp;

290
00:31:08,880 --> 00:31:14,080
That will be in the next video. Sign up for my&nbsp;
mailing list via the link in the description,&nbsp;&nbsp;

291
00:31:14,080 --> 00:31:17,840
and I’ll send you all of the flashcards&nbsp;
and packet tracer lab files for the course.

292
00:31:20,240 --> 00:31:26,160
Before finishing today’s video I want to&nbsp;
thank my JCNP-level channel members. To join,&nbsp;&nbsp;

293
00:31:26,160 --> 00:31:32,400
please click the ‘Join’ button under the video.&nbsp;
Thank you to Sam, Anton, Tebogo, Samil, Anand,&nbsp;&nbsp;

294
00:31:32,400 --> 00:31:39,200
Pavel, Abraham, Serge, Njoku, Viktor, Roger, Raj,&nbsp;
Kenneth, Seamus, Brandon, Aaron, Marcel, Kone,&nbsp;&nbsp;

295
00:31:39,760 --> 00:31:45,520
Donald, C Mohd, Gustavo, Benjamin, Justin,&nbsp;
Prakaash, Nasir, Erlison, Marko, Daming,&nbsp;&nbsp;

296
00:31:45,520 --> 00:31:51,520
Ed, John, Funnydart, Velvijaykum, Mark, Yousif,&nbsp;
Boson Software, Devin, Lito, Yonatan, and Vance.&nbsp;&nbsp;

297
00:31:52,640 --> 00:31:56,640
Sorry if I pronounced your name incorrectly,&nbsp;
but thank you so much for your support.&nbsp;&nbsp;

298
00:31:57,600 --> 00:32:03,360
This is the list of JCNP-level members at the&nbsp;
time of recording by the way, April 11th 2021.&nbsp;&nbsp;

299
00:32:04,240 --> 00:32:09,360
If you signed up recently and your name isn’t&nbsp;
on here don’t worry, you’ll be in future videos.

300
00:32:11,440 --> 00:32:14,480
Thank you for watching. Please&nbsp;
subscribe to the channel,&nbsp;&nbsp;

301
00:32:14,480 --> 00:32:19,280
like the video, leave a comment, and share the&nbsp;
video with anyone else studying for the CCNA.&nbsp;&nbsp;

302
00:32:20,320 --> 00:32:25,920
If you want to leave a tip, check the links in the&nbsp;
description. I'm also a Brave verified publisher&nbsp;&nbsp;

303
00:32:25,920 --> 00:32:32,480
and accept BAT, or Basic Attention Token, tips&nbsp;
via the Brave browser. That's all for now.
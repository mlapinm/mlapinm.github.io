1
00:00:01,110 --> 00:00:03,590
Welcome to Jeremy’s IT Lab.

2
00:00:03,590 --> 00:00:07,210
This is a free, complete course for the CCNA.

3
00:00:07,210 --> 00:00:11,530
If you like these videos, please subscribe
to follow along with the series.

4
00:00:11,530 --> 00:00:16,309
Also, please like and leave a comment, and
share the video to help spread this free series

5
00:00:16,309 --> 00:00:17,820
of videos.

6
00:00:17,820 --> 00:00:20,090
Thanks for your help.

7
00:00:20,090 --> 00:00:24,380
In this video, we’ll continue to learn about
subnetting.

8
00:00:24,380 --> 00:00:30,590
Last video I introduced why subnetting is
necessary, and walked through a few examples.

9
00:00:30,590 --> 00:00:35,660
In this video, I’ll try to give some more
clear steps for solving subnetting problems.

10
00:00:35,660 --> 00:00:40,890
I’ve also decided to make one more video
on subnetting, so this will be a three-video

11
00:00:40,890 --> 00:00:42,380
series.

12
00:00:42,380 --> 00:00:46,180
So, what exactly will we cover in this video?

13
00:00:46,180 --> 00:00:51,740
We’ll start with some subnetting practice
questions, specifically for class C networks,

14
00:00:51,740 --> 00:00:52,780
like last video.

15
00:00:52,780 --> 00:00:58,739
We’ll start, of course, with the solution
to last video’s quiz question.

16
00:00:58,739 --> 00:01:02,350
After that we’ll look at subnetting class
B networks.

17
00:01:02,350 --> 00:01:06,830
The process is exactly the same, no matter
what class of address you’re subnetting,

18
00:01:06,830 --> 00:01:10,310
but it can be a little bit more difficult with
larger networks.

19
00:01:10,310 --> 00:01:15,590
Class A networks will be covered in the next
video, by the way.

20
00:01:15,590 --> 00:01:18,979
So let’s take a look at how to solve last video’s
quiz question.

21
00:01:18,979 --> 00:01:27,920
I asked you to divide the 192.168.1.0/24 network
into four subnets that can accommodate 45

22
00:01:27,920 --> 00:01:29,950
hosts each.

23
00:01:29,950 --> 00:01:35,421
We found that a /26 subnet is the right size
to fit 45 hosts, so we assigned the

24
00:01:35,421 --> 00:01:41,590
block 192.168.1.0/26 to subnet 1.

25
00:01:41,590 --> 00:01:46,240
If you don’t remember how we determined
that /26 is the correct size, take a minute

26
00:01:46,240 --> 00:01:48,680
to review the end of the last video.

27
00:01:48,680 --> 00:01:51,920
So, I asked you to find the remaining subnets.

28
00:01:51,920 --> 00:01:54,710
I also gave you this hint.

29
00:01:54,710 --> 00:01:59,869
If you find the broadcast address of subnet
1, the next address after that will be the

30
00:01:59,869 --> 00:02:03,240
network address of subnet 2.

31
00:02:03,240 --> 00:02:10,600
So the network address for subnet 1 is 192.168.1.0/26.

32
00:02:10,600 --> 00:02:15,400
Here’s 192.168.1.0 written in binary.

33
00:02:15,400 --> 00:02:21,720
Blue is the network portion, red is the host
portion, and purple is the part we ‘BORROWED’

34
00:02:21,720 --> 00:02:24,700
from the host portion to add to the network
portion.

35
00:02:24,700 --> 00:02:31,750
This allows us to divide the larger /24 network
into multiple, smaller, subnets.

36
00:02:31,750 --> 00:02:36,340
To find the broadcast address for this subnet,
which is the highest address in the subnet’s

37
00:02:36,340 --> 00:02:40,959
address range, set all of the bits in the
host portion to 1.

38
00:02:40,959 --> 00:02:44,800
Next let’s convert this to dotted decimal.

39
00:02:44,800 --> 00:02:48,820
It becomes 192.168.1.63.

40
00:02:48,820 --> 00:02:50,900
That’s the broadcast address.

41
00:02:50,900 --> 00:03:00,520
So, the address range for subnet 1 is 192.168.1.0
through 192.168.1.63.

42
00:03:00,520 --> 00:03:05,680
The network address of subnet 2 will be 1
higher than the broadcast address.

43
00:03:05,680 --> 00:03:13,400
So, that means that subnet 2 will be 192.168.1.64/26.

44
00:03:13,400 --> 00:03:18,180
That’s the network address, and here it
is in binary.

45
00:03:18,180 --> 00:03:22,380
Notice that we changed one of the bits we
borrowed from the host portion to a 1.

46
00:03:22,380 --> 00:03:30,129
So, the network address is now 192.168.1.64,
with all of the host bits set to 0.

47
00:03:30,129 --> 00:03:32,590
Now lets find the broadcast address.

48
00:03:32,590 --> 00:03:37,159
Change all of the host bits to 1, and now
let’s convert it to dotted decimal.

49
00:03:37,160 --> 00:03:42,460
So, the broadcast address is 192.168.1.127.

50
00:03:42,460 --> 00:03:45,690
So, that’s the range for subnet 2.

51
00:03:45,690 --> 00:03:51,000
Add 1 to the broadcast address and we’ll
get the network address for subnet 3.

52
00:03:51,000 --> 00:03:58,330
So, that means subnet 3 is 192.168.1.128/26.

53
00:03:58,330 --> 00:04:03,069
Here is the network address in binary, again
notice we changed one of the borrowed purple

54
00:04:03,069 --> 00:04:07,209
bits to 1, but the host bits are all 0.

55
00:04:07,209 --> 00:04:10,700
Change them to 1, and here’s the broadcast
address.

56
00:04:10,700 --> 00:04:20,339
So, the address range for this subnet is 192.168.1.128
through 192.168.1.191.

57
00:04:20,339 --> 00:04:24,630
Now we can find the last subnet, subnet 4.

58
00:04:24,630 --> 00:04:30,530
Subnet 4 is 192.168.1.192/26.

59
00:04:30,530 --> 00:04:35,330
Here is the network address in binary, this
time the borrowed bits are all 1, so this

60
00:04:35,330 --> 00:04:39,590
is our last subnet, we don’t have any room
for more.

61
00:04:39,590 --> 00:04:43,550
Change the host bits to 1, and here’s the
broadcast address.

62
00:04:43,550 --> 00:04:52,240
So, the address range for subnet 4 is 192.168.1.192
through 192.168.1.255.

63
00:04:52,240 --> 00:04:57,339
Okay, we’ve found the answer to the quiz.

64
00:04:57,339 --> 00:04:59,580
You may notice something about these numbers.

65
00:04:59,580 --> 00:05:03,199
0 plus 64 equals 64.

66
00:05:03,199 --> 00:05:11,300
64 plus 64 equals 128, and 128 plus 64 equals
192.

67
00:05:11,300 --> 00:05:16,409
I said last video that I would just show you
the basics of subnetting, not any special subnetting tricks,

68
00:05:16,409 --> 00:05:20,509
but let me show you just one that can help
you figure things out faster.

69
00:05:20,509 --> 00:05:24,470
So, we found that a /26 subnet mask is appropriate.

70
00:05:24,470 --> 00:05:28,340
That’s because there are 6 host bits, which
allows 62 hosts.

71
00:05:28,340 --> 00:05:31,789
Let’s draw this line here.

72
00:05:31,789 --> 00:05:36,119
On the left side is the network portion, and
on the right side is the host portion.

73
00:05:36,119 --> 00:05:40,059
Since we’re just looking at the last octet,
let me make it bigger.

74
00:05:40,059 --> 00:05:45,289
Okay, so I’ve put the binary for just the
last octet down here.

75
00:05:45,289 --> 00:05:50,129
Again, the red part is the host portion, and
the purple part is the bits we borrowed to

76
00:05:50,129 --> 00:05:52,659
expand the network portion.

77
00:05:52,659 --> 00:05:56,849
You should remember the value of each binary
bit, but let me put them up here anyway.

78
00:05:56,849 --> 00:06:06,050
From the right, 1, 2, 4, 8, 16, 32, 64,
and 128.

79
00:06:06,050 --> 00:06:09,939
Notice that the LAST bit of the network portion
is 64.

80
00:06:09,939 --> 00:06:14,090
This means that, to find the next subnet,
we just have to add 64.

81
00:06:14,090 --> 00:06:16,229
Let’s see.

82
00:06:16,229 --> 00:06:23,809
Add 64, and we get 192.168.1.64, which is
the network address of subnet 2.

83
00:06:23,809 --> 00:06:31,199
Add 64 again and we get 192.168.1.128, which
is the network address of subnet 3.

84
00:06:31,199 --> 00:06:40,500
Finally, add 64 again and we get 192.168.1.192,
which is the network address of subnet 4.

85
00:06:40,500 --> 00:06:45,960
So, as you can see, by adding 64 each time,
we were able to find the network addresses

86
00:06:45,960 --> 00:06:48,569
of each subnet.

87
00:06:48,569 --> 00:06:51,409
Now let’s try another similar exercise.

88
00:06:51,409 --> 00:06:57,979
We have been given the 192.168.255.0/24 network,
and have been asked to divide the network

89
00:06:57,979 --> 00:07:01,339
into five subnets of equal size.

90
00:07:01,339 --> 00:07:05,849
In this case, the number of hosts in each
subnet hasn’t been specified, so let’s

91
00:07:05,849 --> 00:07:09,139
make five subnets that are as large as they
can be.

92
00:07:09,139 --> 00:07:13,729
So, all we have to do to solve this problem
is find how many bits we have to ‘borrow’

93
00:07:13,729 --> 00:07:15,580
from the host portion.

94
00:07:15,580 --> 00:07:20,179
Currently, we are borrowing 0 bits from the
host portion.

95
00:07:20,179 --> 00:07:28,869
That means that we can’t make any subnets,
we just have one network, 192.168.255.0/24.

96
00:07:28,869 --> 00:07:33,869
If we borrow one bit, it now becomes a /25
network.

97
00:07:33,869 --> 00:07:37,210
Borrowing one bit also means we can make 2
subnets.

98
00:07:37,210 --> 00:07:38,270
Why is that?

99
00:07:38,270 --> 00:07:42,940
Well, all of the original network bits, the
blue bits, cannot be changed.

100
00:07:42,940 --> 00:07:45,499
That is the network we received.

101
00:07:45,499 --> 00:07:49,809
Howevever the purple bit, the bit we borrowed
from the host portion, we can change, and

102
00:07:49,809 --> 00:07:52,569
it can be either 0 or 1.

103
00:07:52,569 --> 00:08:04,930
If its 0 we have the 192.168.255.0/25 network,
If its 1 we have the 192.168.255.128/25 network.

104
00:08:04,930 --> 00:08:10,629
The formula for the number of subnets is 2
to the power of X, and X is the number of

105
00:08:10,629 --> 00:08:12,969
borrowed bits.

106
00:08:12,969 --> 00:08:17,509
This is similar to calculating the number
of hosts in a subnet, which is 2 to the power

107
00:08:17,509 --> 00:08:22,489
of N -2 , and N is the number of host bits.

108
00:08:22,489 --> 00:08:27,050
We subtract 2 for the network address and
broadcast address, which cant be assigned

109
00:08:27,050 --> 00:08:28,740
to hosts.

110
00:08:28,740 --> 00:08:34,479
However, when calculating the number of subnets,
we dont have to subtract 2, so its simply

111
00:08:34,479 --> 00:08:37,680
2 to the power of X, the number of borrowed
bits.

112
00:08:37,680 --> 00:08:43,060
Anyway, we need 5 subnets, so borrowing 1
bit isnt enough.

113
00:08:43,060 --> 00:08:45,020
What if we borrow 2 bits, like this?

114
00:08:45,020 --> 00:08:52,670
Well, 2 to the power of 2 is 4, so borrowing
2 bits allows us to make 4 subnets.

115
00:08:52,670 --> 00:08:54,860
Still not enough, we need 5.

116
00:08:54,860 --> 00:08:57,470
So lets borrow another bit.

117
00:08:57,470 --> 00:09:00,860
If we borrow 3 bits, how many subnets can
we make?

118
00:09:00,860 --> 00:09:05,170
2 to the power of 3 is 8, so we can make 8
subnets.

119
00:09:05,170 --> 00:09:07,120
So, this is our answer.

120
00:09:07,120 --> 00:09:12,870
It’s more subnets than we need, we need just 5, but if we borrow only 2 bits and use

121
00:09:12,870 --> 00:09:16,410
a /26 mask we won’t have enough.

122
00:09:16,410 --> 00:09:20,790
As I said in the last video, you can’t always
make the numbers exactly match the number

123
00:09:20,790 --> 00:09:24,000
of subnets or number of hosts you need.

124
00:09:24,000 --> 00:09:30,730
So, our first subnet will be 192.168.255.0/27.

125
00:09:30,730 --> 00:09:32,230
Here it is written in binary.

126
00:09:32,230 --> 00:09:36,220
Here’s the network portion, and here’s
the host portion.

127
00:09:36,220 --> 00:09:39,660
Let’s look at just the last octet once more.

128
00:09:39,660 --> 00:09:41,900
Here’s just the last octet.

129
00:09:41,900 --> 00:09:45,360
What’s the value of the last bit of the
network portion?

130
00:09:45,360 --> 00:09:46,940
It’s 32.

131
00:09:46,940 --> 00:09:51,840
So, using the trick I introduced before, we
should be able to calculate the other subnets

132
00:09:51,840 --> 00:09:53,970
now.

133
00:09:53,970 --> 00:09:59,899
As I said before, subnet 1 is 192.168.255.0/27.

134
00:09:59,900 --> 00:10:07,080
Add 32, and we get subnet 2, which is 192.168.255.32/27.

135
00:10:07,080 --> 00:10:14,800
Add 32 again, and we get subnet 3, 192.168.255.64/27.

136
00:10:14,800 --> 00:10:25,580
Subnet 4 is 192.168.255.96/27, and subnet
5 is 192.168.255.128/27.

137
00:10:25,580 --> 00:10:31,460
Okay, we’ve made up 5 subnets, as our requirements
were to divide the network into 5 subnets.

138
00:10:31,460 --> 00:10:38,720
However, our /27 prefix length allows up to
8 subnets to be made from the address range.

139
00:10:38,860 --> 00:10:48,200
These three remaining subnets are 192.168.255.160,
.192, and .224,/27.

140
00:10:48,209 --> 00:10:53,649
Here’s another type of subnetting question
you might find.

141
00:10:53,649 --> 00:11:00,209
What subnet does host 192.168.5.57/27 belong
to?

142
00:11:00,209 --> 00:11:08,329
So, we have the IP address of a host, 192.168.5.57,
and don’t know the network address of the

143
00:11:08,329 --> 00:11:09,329
subnet.

144
00:11:09,329 --> 00:11:11,139
Let’s see how we can figure this out.

145
00:11:11,139 --> 00:11:14,269
It’s actually a fairly simple process.

146
00:11:14,269 --> 00:11:19,470
Here’s 192.168.5.57 in binary and dotted decimal.

147
00:11:19,470 --> 00:11:24,480
However, it’s /27, so let’s show the borrowed
bits.

148
00:11:24,480 --> 00:11:27,900
These three purple bits are borrowed and added
to the network portion.

149
00:11:27,900 --> 00:11:33,990
Now, to find the network address we simply
need to change all of the host bits to 0.

150
00:11:33,990 --> 00:11:39,790
Now the last octet is 0010 0000.

151
00:11:39,790 --> 00:11:45,500
Change that back to dotted decimal, and you
get 192.168.5.32.

152
00:11:45,500 --> 00:11:47,620
So, that’s the answer.

153
00:11:47,620 --> 00:11:57,540
The host 192.168.5.57/27 belongs to the subnet
192.168.5.32/27.

154
00:11:57,540 --> 00:12:00,940
Let’s do one more for practice.

155
00:12:00,949 --> 00:12:08,079
What subnet does host 192.168.29.219/29 belong
to?

156
00:12:08,079 --> 00:12:15,529
Pause the video now and try to figure out
the answer for yourself…..okay, let’s

157
00:12:15,529 --> 00:12:18,120
check.

158
00:12:18,120 --> 00:12:22,810
Write out the address in binary first.

159
00:12:22,810 --> 00:12:25,279
Identify where the network part ends.

160
00:12:25,279 --> 00:12:31,220
In this case, 5 bits are borrowed from the
host portion and added to the network portion.

161
00:12:31,220 --> 00:12:35,509
Set all of the host bits to 0. and then convert
back to dotted decimal.

162
00:12:35,509 --> 00:12:38,019
There’s our answer.

163
00:12:38,020 --> 00:12:48,540
So, host 192.168.29.219/29 belongs to the
subnet 192.168.29.216/29.

164
00:12:48,540 --> 00:12:52,999
Okay, let’s review some numbers.

165
00:12:52,999 --> 00:12:57,620
This is a table of the different subnet sizes
for class C networks.

166
00:12:57,620 --> 00:13:04,899
For example, with a /25 prefix length, you
divide the network into 2, there are 2 subnets.

167
00:13:04,899 --> 00:13:08,470
Also, each subnet can contain 126 hosts.

168
00:13:08,470 --> 00:13:13,300
I recommend that you memorize these numbers,
it will help you perform subnetting faster

169
00:13:13,300 --> 00:13:17,649
and easier than if you have to calculate everything
every single time.

170
00:13:17,649 --> 00:13:21,600
Although, these are fairly simple to calculate.

171
00:13:21,600 --> 00:13:27,829
For the number of subnets, each additional bit
that you borrow doubles the number of subnets.

172
00:13:27,829 --> 00:13:33,269
For number of hosts, each host bits doubles
the amount of hosts, except you have to subtract

173
00:13:33,269 --> 00:13:37,300
2 for the network and broadcast addresses.

174
00:13:37,300 --> 00:13:40,910
Take note of /31, the number of hosts is 0.

175
00:13:40,910 --> 00:13:46,120
I mentioned this in the last video, but it’s
because there is only a single host bit, so

176
00:13:46,120 --> 00:13:51,529
there are only two possible addresses, which
are taken by the network and broadcast address.

177
00:13:51,529 --> 00:13:56,870
However, for a point-to-point connection,
you can actually use a /31 and assign those

178
00:13:56,870 --> 00:14:03,630
two addresses to each end of the connection,
and have no network or broadcast addresses.

179
00:14:03,630 --> 00:14:09,449
Also /32 technically uses all bits for the
network address, allowing no hosts, but you

180
00:14:09,449 --> 00:14:15,540
can assign a /32 mask to identify a specific
host when writing routes and such, and in

181
00:14:15,540 --> 00:14:18,930
some other special cases.

182
00:14:18,930 --> 00:14:24,870
Now let’s finally take a look at subnetting
some larger networks, specifically Class B.

183
00:14:24,870 --> 00:14:29,410
Looking at this chart again, you can see that
there are many more host bits, and therefore

184
00:14:29,410 --> 00:14:34,560
many more possible subnets, that can be created
with a class B network than with a class C

185
00:14:34,560 --> 00:14:35,560
network.

186
00:14:35,560 --> 00:14:39,740
However, the process of subnetting is EXACTLY
THE SAME.

187
00:14:39,740 --> 00:14:43,720
So I’ll just walk you through a couple examples
with class B networks, and then we’ll leave

188
00:14:43,720 --> 00:14:48,670
class A networks for the last video of this
subnetting series.

189
00:14:48,670 --> 00:14:53,949
You have been given the 172.16.0.0/16 network.

190
00:14:53,949 --> 00:14:58,319
You are asked to create 80 subnets for your
company’s various LANs.

191
00:14:58,319 --> 00:15:00,720
What prefix length should you use?

192
00:15:00,720 --> 00:15:05,649
Okay, this is really a simple question, and
we can follow the exact same process as last

193
00:15:05,649 --> 00:15:06,980
time.

194
00:15:06,980 --> 00:15:15,040
Pause the video here if you want to try it
by yourself….okay, let’s figure it out.

195
00:15:15,040 --> 00:15:19,950
Again we can simply use the 2 to the power
of X formula, where X is the number of borrowed

196
00:15:19,950 --> 00:15:21,670
bits.

197
00:15:21,670 --> 00:15:28,920
If we borrow no bits, we can’t make any
subnets, we just have one large /16 network.

198
00:15:28,920 --> 00:15:34,759
If we borrow one bit we can make 2 subnets,
because 2 to the power of 1 is 2.

199
00:15:34,759 --> 00:15:39,980
This gives us a prefix length of /17, and
if we write this subnet mask in dotted decimal

200
00:15:39,980 --> 00:15:43,840
it is 255.255.128.0.

201
00:15:43,840 --> 00:15:49,470
Remember, when you enter commands in the Cisco
CLI you can’t use the CIDR notation like

202
00:15:49,470 --> 00:15:55,940
/17, you have to enter dotted decimal like
255.255.128.0.

203
00:15:55,940 --> 00:16:02,120
Anyway, 2 subnets isn’t enough for our needs,
so let’s borrow another bit.

204
00:16:02,120 --> 00:16:04,689
Borrowing 2 bits allows for 4 subnets.

205
00:16:04,689 --> 00:16:11,889
This is a /18 prefix length, and the subnet
mask is written as 255.255.192.0 in dotted

206
00:16:11,889 --> 00:16:12,889
decimal.

207
00:16:12,889 --> 00:16:15,870
Let’s borrow another bit.

208
00:16:15,870 --> 00:16:21,240
Borrowing 3 bits gives us 8 subnets, and a
/19 prefix length.

209
00:16:21,240 --> 00:16:26,740
The subnet mask is 255.255.224.0 in dotted
decimal.

210
00:16:26,740 --> 00:16:31,160
Still not enough subnets, so let’s borrow another
bit.

211
00:16:31,160 --> 00:16:36,950
Borrowing 4 bits allows us to create 16 subnets,
and uses a /20 prefix length.

212
00:16:36,950 --> 00:16:44,209
/20 is 255.255.240.0 in dotted decimal, by
the way.

213
00:16:44,209 --> 00:16:52,379
Borrowing 5 bits gives us 32 subnets, and
the prefix length is /21, which is 255.255.248.0

214
00:16:52,379 --> 00:16:55,069
in dotted decimal.

215
00:16:55,069 --> 00:16:58,170
Borrowing 6 bits gives us 64 subnets.

216
00:16:58,170 --> 00:16:59,379
Getting close.

217
00:16:59,379 --> 00:17:05,240
The prefix length is /22, which is 255.255.252.0
in dotted decimal.

218
00:17:05,240 --> 00:17:10,360
Let’s borrow one more bit, which should
be enough.

219
00:17:10,360 --> 00:17:14,450
Borrowing 7 bits gives us 128 subnets.

220
00:17:14,450 --> 00:17:21,220
The prefix length is /23, which is 255.255.254.0
in dotted decimal.

221
00:17:21,220 --> 00:17:27,880
So, this is the correct answer, we should
use a /23 prefix length so we can create the

222
00:17:27,880 --> 00:17:29,450
80 subnets we need.

223
00:17:29,450 --> 00:17:37,100
128 subnets is more than we need, but /22
only allows for 64, which is not enough.

224
00:17:37,100 --> 00:17:41,280
I won’t show you all 80 subnets of course,
but let’s look at some of the subnets that

225
00:17:41,280 --> 00:17:48,059
can be made, the first being 172.16.0.0/23
of course.

226
00:17:48,059 --> 00:17:57,620
The next is 172.16.2.0/23, notice I changed
the last bit of the network portion to 1.

227
00:17:57,620 --> 00:18:08,370
Next is 172.16.4.0/23. then 172.16.6.0, 172.16.8.0,
etc.

228
00:18:08,370 --> 00:18:12,990
Let’s do another similar question.

229
00:18:12,990 --> 00:18:18,270
You have been given the 172.22.0.0/16 network.

230
00:18:18,270 --> 00:18:22,809
You are required to divide the network into
500 separate subnets.

231
00:18:22,809 --> 00:18:25,600
What prefix length should you use?

232
00:18:25,600 --> 00:18:29,230
Pause the video and try to figure this one
out for yourself, and I’ll show you the answer

233
00:18:29,230 --> 00:18:36,220
in the next slide…...okay, let’s go to
the next slide.

234
00:18:36,220 --> 00:18:40,120
So, the correct answer is /25.

235
00:18:40,120 --> 00:18:45,270
We need to divide this class B network into
500 subnets, so that means we have to borrow

236
00:18:45,270 --> 00:18:50,120
9 bits, because 2 to the power of 9 equals
512.

237
00:18:50,120 --> 00:18:55,990
Notice that you can borrow bits even from
the last octet, so you can use /25, /26, /27,

238
00:18:55,990 --> 00:18:59,240
etc. even with a class B network.

239
00:18:59,240 --> 00:19:02,659
Here’s another practice question.

240
00:19:02,659 --> 00:19:07,669
You have been given the 172.18.0.0/16 network.

241
00:19:07,669 --> 00:19:13,850
Your company requires 250 subnets with the
same number of hosts per subnet.

242
00:19:13,850 --> 00:19:16,130
What prefix length should you use?

243
00:19:16,130 --> 00:19:20,730
This time you have to consider both the number
of subnets and number of hosts.

244
00:19:20,730 --> 00:19:24,360
Once again, pause the video to solve this
yourself, and then I’ll give you the answer

245
00:19:24,360 --> 00:19:30,520
in the next slide…..okay, let’s check
out the next slide.

246
00:19:30,520 --> 00:19:34,210
So, the answer is /24.

247
00:19:34,210 --> 00:19:40,720
We need 250 subnets, and borrowing 8 bits
allows us to make 256 subnets.

248
00:19:40,720 --> 00:19:48,450
We also need 250 hosts per subnet, and having
8 host bits allows for 254 hosts per subnet.

249
00:19:48,450 --> 00:19:54,510
Okay, before moving on to the quiz let’s
do one more ‘identify the subnet’ problem,

250
00:19:54,510 --> 00:19:57,300
this time with a class B network.

251
00:19:57,300 --> 00:20:04,430
What subnet does host 172.25.217.192/21 belong
to?

252
00:20:04,430 --> 00:20:08,270
The process is exactly the same as with a
Class C network.

253
00:20:08,270 --> 00:20:12,909
Write out the address in binary, change all
of the host bits to 0, and then change it

254
00:20:12,909 --> 00:20:15,520
back to dotted decimal.

255
00:20:15,520 --> 00:20:22,360
Pause the video if you want to try it on your
own.   Okay, let’s check the answer.

256
00:20:22,360 --> 00:20:28,140
Here’s the address written in binary, as
usual the red bits are the host bits and the

257
00:20:28,140 --> 00:20:33,020
purple bits are the borrowed bits which are
now part of the network portion.

258
00:20:33,020 --> 00:20:41,000
Change the host bits all to 0, convert it
back to dotted decimal and you get 172.25.216.0.

259
00:20:41,000 --> 00:20:43,740
So, there’s the answer to the question.

260
00:20:43,740 --> 00:20:53,299
172.25.217.192/21 belongs to the 172.25.216.0/21
subnet.

261
00:20:53,299 --> 00:20:57,480
The process was exactly the same as for a
Class C network, there are just more host

262
00:20:57,480 --> 00:20:58,770
bits.

263
00:20:58,770 --> 00:21:03,429
Here’s a chart like the one I showed you
for Class C addresses, showing the number

264
00:21:03,429 --> 00:21:08,390
of available subnets, and the number of available
host addresses for each prefix length when

265
00:21:08,390 --> 00:21:10,059
subnetting a class B network.

266
00:21:10,059 --> 00:21:14,669
Don’t worry, it’s not necessary to memorize
these numbers.

267
00:21:14,669 --> 00:21:16,960
That would simply be a waste of effort.

268
00:21:16,960 --> 00:21:18,779
Just know the patterns.

269
00:21:18,779 --> 00:21:26,330
For each borrowed bit, the number of subnets
doubles, 2, 4 ,8, 16, 32, etc.

270
00:21:26,330 --> 00:21:31,460
For each host bit, the number of addresses
in each subnet doubles, however you have to

271
00:21:31,460 --> 00:21:36,179
subtract 2 to identify the number of usable
host addresses.

272
00:21:36,179 --> 00:21:40,240
As I said, don’t memorize this, just know
the se patterns so you can calculate these

273
00:21:40,240 --> 00:21:42,980
when you need to.

274
00:21:42,980 --> 00:21:45,860
Okay let’s move on to today’s quiz.

275
00:21:45,860 --> 00:21:50,540
I will give you five questions following the
same pattern as the ones we solved in today’s

276
00:21:50,540 --> 00:21:52,020
video.

277
00:21:52,029 --> 00:21:55,540
Please post your answers in the comment section
of this video.  I will give the answers

278
00:21:55,540 --> 00:21:58,529
and explanations at the beginning of the next video.

279
00:21:58,529 --> 00:22:01,649
Let’s go to question 1.

280
00:22:01,649 --> 00:22:06,870
You have been given the 172.30.0.0/16 network.

281
00:22:06,870 --> 00:22:12,070
Your company requires 100 subnets with at
least 500 hosts per subnet.

282
00:22:12,070 --> 00:22:14,520
What prefix length should you use?

283
00:22:14,520 --> 00:22:19,800
Pause the video to find the answer.

284
00:22:19,800 --> 00:22:22,760
Okay, let’s go to question 2.

285
00:22:22,769 --> 00:22:29,590
What subnet does host 172.21.111.201/20 belong
to?

286
00:22:29,590 --> 00:22:34,240
Pause the video to find answer.

287
00:22:34,240 --> 00:22:38,400
Okay, let’s go to question 3.

288
00:22:38,400 --> 00:22:46,429
What is the broadcast address of the network
192.168.91.78/26 belongs to?

289
00:22:46,429 --> 00:22:51,549
Pause the video to find your answer.

290
00:22:51,549 --> 00:22:54,659
Okay let’s go to question 4.

291
00:22:54,659 --> 00:23:01,990
You divide the 172.16.0.0/16 network into
4 subnets of equal size.

292
00:23:01,990 --> 00:23:06,440
Identify the network and broadcast addresses
of the second subnet.

293
00:23:06,440 --> 00:23:11,070
Pause the video to find the answer.

294
00:23:11,070 --> 00:23:15,520
Okay let’s go to the last question, question
5.

295
00:23:15,520 --> 00:23:23,260
You divide the 172.30.0.0/16 network into subnets
of 1000 hosts each.

296
00:23:23,260 --> 00:23:25,950
How many subnets are you able to make?

297
00:23:25,950 --> 00:23:30,640
Pause the video to find the answer.

298
00:23:30,640 --> 00:23:33,600
Okay, that’s all for the quiz.

299
00:23:33,600 --> 00:23:37,010
Remember to leave all of your answers in the
comment section of this video, and then wait

300
00:23:37,010 --> 00:23:40,380
for the next video, where I’ll go over the
answers and explanations.

301
00:23:40,380 --> 00:23:45,929
Also, there won’t be any flashcards or practice
lab for this video.

302
00:23:45,929 --> 00:23:50,409
After the next video I will make a practice
lab so you can subnet a network and assign

303
00:23:50,409 --> 00:23:54,730
IP addresses to the devices in each subnet,
so wait for that.

304
00:23:54,730 --> 00:23:59,780
Before I wrap up this video, I want to give
a shoutout to my JCNP-level channel members,

305
00:23:59,780 --> 00:24:02,840
Vance, Mike Yonatan, and Lito.

306
00:24:02,840 --> 00:24:06,190
Thank you so much for your support, I really
appreciate it.

307
00:24:06,190 --> 00:24:10,730
Also, thanks to all of my JCNA-level members
as well.

308
00:24:10,730 --> 00:24:15,400
Thank you for watching.  That's all for this video.

309
00:24:15,400 --> 00:24:20,580
If you want to show your support, please subscribe to the channel, like the video, leave a comment,

310
00:24:20,580 --> 00:24:23,660
and share the video with anyone else studying for the CCNA.

311
00:24:23,660 --> 00:24:29,779
I accept donations via cryptocurrency or Patreon via the links in the description.

312
00:24:29,780 --> 00:24:36,340
I'm also a Brave verified publisher and accept
BAT, or Basic Attention Token, tips via the

313
00:24:36,340 --> 00:24:44,400
Brave browser.  Click the link in the description to check out Brave, a fast and sleek browser that pays you to surf the Internet.

314
00:24:44,400 --> 00:24:46,300
That's all for now.
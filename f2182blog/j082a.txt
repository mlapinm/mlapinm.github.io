1
00:00:00,880 --> 00:00:07,280
Welcome to Jeremy’s IT Lab. This is a free,&nbsp;
complete course for the CCNA. If you like these&nbsp;&nbsp;

2
00:00:07,280 --> 00:00:12,720
videos, please subscribe to follow along with the&nbsp;
series. Also, please like and leave a comment,&nbsp;&nbsp;

3
00:00:12,720 --> 00:00:16,640
and share the video to help spread this&nbsp;
free series of videos. Thanks for your help.

4
00:00:17,840 --> 00:00:21,760
In this video we will cover&nbsp;
FTP, File Transfer Protocol,&nbsp;&nbsp;

5
00:00:21,760 --> 00:00:24,880
and TFTP, Trivial File Transfer Protocol.&nbsp;&nbsp;

6
00:00:26,000 --> 00:00:32,320
As the names suggest, both of these protocols are&nbsp;
used to transfer files over a network. They are&nbsp;&nbsp;

7
00:00:32,320 --> 00:00:38,000
exam topic 4.9, which states that you must be&nbsp;
able to describe the capabilities and function&nbsp;&nbsp;

8
00:00:38,000 --> 00:00:44,720
of TFTP and FTP in the network. So, make sure&nbsp;
you understand the purpose of these protocols,&nbsp;&nbsp;

9
00:00:44,720 --> 00:00:48,800
and make sure you know the differences between&nbsp;
them, even though their purposes are similar.

10
00:00:50,560 --> 00:00:55,680
Here’s what we’ll cover in this video.&nbsp;
First up, I’ll introduce the purpose of FTP&nbsp;&nbsp;

11
00:00:55,680 --> 00:01:02,560
and TFTP. The names tell you what their basic&nbsp;
purpose is, but I’ll give a brief overview. Then&nbsp;&nbsp;

12
00:01:02,560 --> 00:01:06,320
we’ll compare the two protocols to learn about&nbsp;
their functions and how they are different.&nbsp;&nbsp;

13
00:01:07,680 --> 00:01:13,440
Then I’ll introduce the various file systems&nbsp;
on Cisco IOS. A basic understanding of how&nbsp;&nbsp;

14
00:01:13,440 --> 00:01:19,920
files are stored on Cisco devices is important.&nbsp;
Finally, we’ll take a look at how to use FTP and&nbsp;&nbsp;

15
00:01:19,920 --> 00:01:25,840
TFTP in Cisco IOS. As always, watch until&nbsp;
the end of the video for a bonus practice&nbsp;&nbsp;

16
00:01:25,840 --> 00:01:31,760
question from Boson Software’s ExSim for&nbsp;
CCNA, the best practice exams for the CCNA.

17
00:01:33,520 --> 00:01:39,840
Here’s a quick summary of FTP and TFTP. FTP,&nbsp;
which stands for File Transfer Protocol,&nbsp;&nbsp;

18
00:01:40,400 --> 00:01:45,600
and TFTP, which stands for Trivial File&nbsp;
Transfer Protocol, are both industry&nbsp;&nbsp;

19
00:01:45,600 --> 00:01:51,760
standard protocols used to transfer files over&nbsp;
a network. They both use a client-server model.&nbsp;&nbsp;

20
00:01:52,880 --> 00:01:59,200
Clients can use FTP or TFTP to copy&nbsp;
files from an FTP or TFTP server.&nbsp;&nbsp;

21
00:02:00,160 --> 00:02:08,080
They can also use FTP or TFTP to copy files to a&nbsp;
server. As a network engineer, the most common use&nbsp;&nbsp;

22
00:02:08,080 --> 00:02:14,000
for FTP and TFTP is in the process of upgrading&nbsp;
the operating system of a network device.&nbsp;&nbsp;

23
00:02:15,200 --> 00:02:21,280
You can use FTP or TFTP on the device to&nbsp;
download the newer version of IOS and then&nbsp;&nbsp;

24
00:02:21,280 --> 00:02:28,000
reboot the device with the new IOS image. This is,&nbsp;
of course, not the only use for these protocols.&nbsp;&nbsp;

25
00:02:28,640 --> 00:02:32,880
They can be used to transfer all kinds of&nbsp;
files between different devices over a network.&nbsp;&nbsp;

26
00:02:33,920 --> 00:02:40,720
But for this video, we’ll use this example. So,&nbsp;
here’s a sample network. I haven’t included any&nbsp;&nbsp;

27
00:02:40,720 --> 00:02:48,640
cables or anything, we don’t need any details. So,&nbsp;
on the left is a server at software.cisco.com. The&nbsp;&nbsp;

28
00:02:48,640 --> 00:02:54,720
network admin will download the new IOS image&nbsp;
from Cisco. Then he will transfer the IOS image&nbsp;&nbsp;

29
00:02:54,720 --> 00:03:00,320
to a server that is reachable by the device he&nbsp;
is going to update, which in this example is R1&nbsp;&nbsp;

30
00:03:00,320 --> 00:03:06,960
on the right. Finally, the network admin will&nbsp;
use commands in the CLI of R1 to copy the file&nbsp;&nbsp;

31
00:03:06,960 --> 00:03:14,480
into the flash memory of R1. The last step after&nbsp;
that is to reboot R1 using the new version of IOS.&nbsp;&nbsp;

32
00:03:15,600 --> 00:03:20,640
So, later in this video I’ll show you how&nbsp;
to use the CLI of a Cisco device to transfer&nbsp;&nbsp;

33
00:03:20,640 --> 00:03:27,440
files using FTP and TFTP, and then how to reboot&nbsp;
the device with the new IOS image to update it.

34
00:03:29,600 --> 00:03:34,480
Okay, now let’s move on to talk about&nbsp;
TFTP, the Trivial File Transfer Protocol.&nbsp;&nbsp;

35
00:03:35,840 --> 00:03:42,640
TFTP was first standardized in 1981.&nbsp;
This is after FTP, but because TFTP is&nbsp;&nbsp;

36
00:03:42,640 --> 00:03:48,960
simpler I want to introduce it first. It was&nbsp;
named the ‘trivial’ file transfer protocol&nbsp;&nbsp;

37
00:03:48,960 --> 00:03:54,640
because it is simple and has only basic&nbsp;
features when compared to FTP. It only&nbsp;&nbsp;

38
00:03:54,640 --> 00:04:01,280
allows a client to copy a file to or from a&nbsp;
server. Nothing else, just simple file transfers.&nbsp;&nbsp;

39
00:04:02,880 --> 00:04:09,520
As I said, it was released after FTP, but it’s&nbsp;
not a replacement for FTP. It is just another&nbsp;&nbsp;

40
00:04:09,520 --> 00:04:15,120
tool to use when a lightweight, simple protocol&nbsp;
is more important than advanced functionality.&nbsp;&nbsp;

41
00:04:16,720 --> 00:04:21,440
TFTP doesn’t use any authentication,&nbsp;
meaning no usernames and passwords,&nbsp;&nbsp;

42
00:04:21,440 --> 00:04:27,840
so servers will respond to all TFTP requests.&nbsp;
There’s no username or password to check.&nbsp;&nbsp;

43
00:04:28,400 --> 00:04:34,560
Also, there is no encryption so all data is&nbsp;
sent in plain text. Because of this lack of&nbsp;&nbsp;

44
00:04:34,560 --> 00:04:40,480
security, TFTP is best used in a controlled&nbsp;
environment to transfer small files quickly.&nbsp;&nbsp;

45
00:04:41,520 --> 00:04:45,520
You probably shouldn’t use it to transfer&nbsp;
important files over the Internet, for example.&nbsp;&nbsp;

46
00:04:47,120 --> 00:04:53,760
TFTP servers listen on UDP port 69. So, when&nbsp;
clients initiate communications with the server,&nbsp;&nbsp;

47
00:04:54,320 --> 00:05:02,160
they will use UDP port 69 as the destination port.&nbsp;
As you already know, UDP is connectionless and&nbsp;&nbsp;

48
00:05:02,160 --> 00:05:08,720
doesn’t provide reliability using retransmissions.&nbsp;
However, TFTP actually has similar built-in&nbsp;&nbsp;

49
00:05:08,720 --> 00:05:14,480
connection and reliability features within&nbsp;
the TFTP protocol itself. Let’s take a look.

50
00:05:16,240 --> 00:05:23,080
First I’ll introduce how TFTP provides reliability&nbsp;
using acknowledgments and retransmissions. Every&nbsp;&nbsp;

51
00:05:23,840 --> 00:05:29,840
TFTP data message is acknowledged. So, if the&nbsp;
client is transferring a file to the server,&nbsp;&nbsp;

52
00:05:29,840 --> 00:05:33,120
the server will send Ack messages,&nbsp;
one for each data message.&nbsp;&nbsp;

53
00:05:34,160 --> 00:05:38,800
However, if the server is transferring a file&nbsp;
to the client, then the client will send Ack&nbsp;&nbsp;

54
00:05:38,800 --> 00:05:45,040
messages, one for each data message from the&nbsp;
server. Timers are used, and if an expected&nbsp;&nbsp;

55
00:05:45,040 --> 00:05:49,920
message isn’t received in time, the waiting&nbsp;
device will re-send its previous message.&nbsp;&nbsp;

56
00:05:50,960 --> 00:05:58,000
Let me demonstrate. The PC on the right is a&nbsp;
TFTP client, and the server on the left is a TFTP&nbsp;&nbsp;

57
00:05:58,000 --> 00:06:04,160
server. To download a file from the server,&nbsp;
the client sends a ‘read request’ message.&nbsp;&nbsp;

58
00:06:04,960 --> 00:06:08,720
The server then replies with a data&nbsp;
message, containing part of the file.&nbsp;&nbsp;

59
00:06:09,840 --> 00:06:14,560
The client replies with an Ack, but for some&nbsp;
reason the message doesn’t reach the server.&nbsp;&nbsp;

60
00:06:15,840 --> 00:06:22,080
Because the client sent the Ack, it is waiting for&nbsp;
the next data message, but it doesn’t come. So,&nbsp;&nbsp;

61
00:06:22,080 --> 00:06:27,760
the client retransmits the Ack message, which&nbsp;
successfully reaches the server. The server then&nbsp;&nbsp;

62
00:06:27,760 --> 00:06:34,160
replies with the next data message, and the client&nbsp;
replies with an Ack. This exchange will continue&nbsp;&nbsp;

63
00:06:34,160 --> 00:06:40,160
until the client has received the entire file.&nbsp;
This is called ‘lock-step’ communication.&nbsp;&nbsp;

64
00:06:41,040 --> 00:06:46,480
The client and server alternately send a message&nbsp;
and then wait for a reply, send a message,&nbsp;&nbsp;

65
00:06:46,480 --> 00:06:52,800
wait for a reply, etc. The server will never&nbsp;
send two data messages in a row, for example,&nbsp;&nbsp;

66
00:06:52,800 --> 00:07:00,000
except in the case of retransmission. So, this&nbsp;
method of reliability isn’t as efficient as TCP’s&nbsp;&nbsp;

67
00:07:00,000 --> 00:07:03,840
forward acknowledgment and sliding&nbsp;
window, but it gets the job done.

68
00:07:05,680 --> 00:07:11,760
Next, let me introduce TFTP’s connections.&nbsp;
TFTP file transfers have three phases.&nbsp;&nbsp;

69
00:07:12,480 --> 00:07:16,560
First, the connection phase. The&nbsp;
client sends a request to the server,&nbsp;&nbsp;

70
00:07:16,560 --> 00:07:22,320
and the server responds back, initializing the&nbsp;
connection. Then the data transfer occurs, and&nbsp;&nbsp;

71
00:07:22,320 --> 00:07:28,640
data and acknowledgment messages are exchanged.&nbsp;
After the last data message a final Ack message&nbsp;&nbsp;

72
00:07:28,640 --> 00:07:34,960
is sent, terminating the connection. Let me&nbsp;
demonstrate. So, the client sends a request,&nbsp;&nbsp;

73
00:07:34,960 --> 00:07:40,800
and the server replies by sending the first data&nbsp;
packet. The connection is officially established.&nbsp;&nbsp;

74
00:07:41,600 --> 00:07:48,000
The client responds with an Ack, and there is an&nbsp;
exchange of data packets and Acks. These messages,&nbsp;&nbsp;

75
00:07:48,000 --> 00:07:54,400
including the first data packet, are the data&nbsp;
transfer portion of the file transfer. Finally,&nbsp;&nbsp;

76
00:07:54,400 --> 00:08:00,160
the client sends an Ack for the last data packet,&nbsp;
and the connection is terminated. So, although&nbsp;&nbsp;

77
00:08:00,160 --> 00:08:06,400
TFTP doesn’t use TCP, it does have a basic way of&nbsp;
managing connections within the protocol itself.

78
00:08:08,320 --> 00:08:13,760
Now I’m going to introduce an interesting part&nbsp;
of TFTP’s operation. This isn’t something you&nbsp;&nbsp;

79
00:08:13,760 --> 00:08:18,720
have to know for the CCNA exam, I just thought it&nbsp;
was interesting so I’m going to share it briefly.&nbsp;&nbsp;

80
00:08:20,080 --> 00:08:23,520
As expected, when the client sends&nbsp;
the first message to the server,&nbsp;&nbsp;

81
00:08:23,520 --> 00:08:32,320
the destination port is UDP port 69 and the source&nbsp;
is a random ephemeral port. In TFTP this random&nbsp;&nbsp;

82
00:08:32,320 --> 00:08:38,560
port is called a ‘Transfer Identifier’, TID, and&nbsp;
is used to identify that particular data transfer.&nbsp;&nbsp;

83
00:08:39,520 --> 00:08:42,960
However, here’s where the functionality&nbsp;
is different than you might expect.&nbsp;&nbsp;

84
00:08:43,600 --> 00:08:48,480
The server then also selects a random TID&nbsp;
to use as the source port when it replies.&nbsp;&nbsp;

85
00:08:49,200 --> 00:08:55,920
It doesn’t use port 69 as the source port.&nbsp;
Then, when the client sends the next message,&nbsp;&nbsp;

86
00:08:55,920 --> 00:09:02,400
the destination port will be the server’s TID,&nbsp;
again not 69. So, I’ll demonstrate how that works.&nbsp;&nbsp;

87
00:09:03,440 --> 00:09:08,720
The client sends a message to the server with a&nbsp;
random source port and a destination port of 69.&nbsp;&nbsp;

88
00:09:09,680 --> 00:09:16,640
When the server replies, instead of using 69 as&nbsp;
the source port it also uses a random port. Then&nbsp;&nbsp;

89
00:09:16,640 --> 00:09:22,880
the client replies, and uses that random port as&nbsp;
the destination port, it no longer uses port 69.&nbsp;&nbsp;

90
00:09:23,760 --> 00:09:30,080
And the devices continue to use these two random&nbsp;
ports throughout the data transfer. So, TFTP’s&nbsp;&nbsp;

91
00:09:30,080 --> 00:09:36,560
well-known port of 69 is only used in the very&nbsp;
first message from the client to the server. As&nbsp;&nbsp;

92
00:09:36,560 --> 00:09:42,560
I mentioned, this is beyond the scope of the CCNA,&nbsp;
but it’s an interesting part of TFTP’s operation.

93
00:09:45,040 --> 00:09:49,840
Okay, so that was a brief overview of TFTP&nbsp;
with a few details about its operation.&nbsp;&nbsp;

94
00:09:50,720 --> 00:09:57,920
Next I’ll introduce FTP and then we’ll compare&nbsp;
the two. FTP was first standardized in 1971.&nbsp;&nbsp;

95
00:09:58,720 --> 00:10:04,160
This is actually before TCP and&nbsp;
IP, so FTP is a very old protocol,&nbsp;&nbsp;

96
00:10:04,160 --> 00:10:10,320
although it has of course been updated&nbsp;
since. FTP uses TCP ports 20 and 21,&nbsp;&nbsp;

97
00:10:10,880 --> 00:10:17,840
instead of just a single well-known port. In&nbsp;
the next slide you’ll see why. Unlike TFTP,&nbsp;&nbsp;

98
00:10:18,400 --> 00:10:23,520
usernames and passwords are used for&nbsp;
authentication. However, just like in TFTP,&nbsp;&nbsp;

99
00:10:23,520 --> 00:10:28,720
there is no encryption. Everything is sent in&nbsp;
plain text, including the user name and password.&nbsp;&nbsp;

100
00:10:30,160 --> 00:10:37,760
For greater security, FTPS, FTP over SSL/TLS,&nbsp;
can be used. This protocol is also called&nbsp;&nbsp;

101
00:10:37,760 --> 00:10:46,960
FTP Secure. Another option is SSH File Transfer&nbsp;
Protocol, SFTP. Note that FTPS is an upgrade to&nbsp;&nbsp;

102
00:10:46,960 --> 00:10:53,040
FTP, adding greater security, whereas SFTP is a&nbsp;
different protocol that just has a similar name.&nbsp;&nbsp;

103
00:10:54,320 --> 00:10:59,040
FTP is more complex than TFTP and&nbsp;
allows not only file transfers,&nbsp;&nbsp;

104
00:10:59,040 --> 00:11:04,880
but clients can also navigate file directories,&nbsp;
add and remove directories, list files, etc.&nbsp;&nbsp;

105
00:11:05,920 --> 00:11:11,120
In TFTP, the client could only tell the server&nbsp;
‘give me this file’ or ‘take this file’,&nbsp;&nbsp;

106
00:11:11,760 --> 00:11:18,240
it couldn’t even ask the server ‘what files do&nbsp;
you have?’. The client sends FTP commands to&nbsp;&nbsp;

107
00:11:18,240 --> 00:11:23,520
the server to perform FTP’s functions.&nbsp;
There are many different FTP commands,&nbsp;&nbsp;

108
00:11:23,520 --> 00:11:27,840
and you can view a list of them here&nbsp;
on Wikipedia if you’re interested.

109
00:11:28,800 --> 00:11:34,320
As I said, FTP uses two different&nbsp;
well-known ports: TCP ports 20 and 21.&nbsp;&nbsp;

110
00:11:35,280 --> 00:11:42,320
That’s because FTP uses two types of connections.&nbsp;
An FTP control connection to TCP port 21&nbsp;&nbsp;

111
00:11:42,320 --> 00:11:48,880
is established and used to send FTP commands. The&nbsp;
client sends commands when it wants to perform an&nbsp;&nbsp;

112
00:11:48,880 --> 00:11:54,240
action, such as retrieving a file from the server,&nbsp;
and the server sends replies to acknowledge.&nbsp;&nbsp;

113
00:11:55,600 --> 00:11:59,360
However, the actual data transfer isn’t&nbsp;
done using this control connection.&nbsp;&nbsp;

114
00:12:00,480 --> 00:12:06,240
When files or data are to be transferred,&nbsp;
separate FTP data connections to TCP port 20&nbsp;&nbsp;

115
00:12:06,240 --> 00:12:12,960
are established and terminated as needed. So, let&nbsp;
me demonstrate the control connection. The client&nbsp;&nbsp;

116
00:12:12,960 --> 00:12:19,120
initiates the TCP connection, and the usual&nbsp;
SYN, then SYN-ACK, then ACK exchange is used.&nbsp;&nbsp;

117
00:12:20,320 --> 00:12:26,080
Now the FTP control connection is established.&nbsp;
The client will send FTP commands to the server,&nbsp;&nbsp;

118
00:12:26,640 --> 00:12:32,640
for example to say that the PC wants to get&nbsp;
a file from the server. The server replies to&nbsp;&nbsp;

119
00:12:32,640 --> 00:12:37,840
acknowledge the command. But now we need an FTP&nbsp;
data connection to actually transfer the data.

120
00:12:39,280 --> 00:12:43,840
There are actually two different modes which&nbsp;
can be used to establish an FTP data connection.&nbsp;&nbsp;

121
00:12:45,040 --> 00:12:50,160
The default method of establishing FTP data&nbsp;
connections is active mode, in which the server&nbsp;&nbsp;

122
00:12:50,160 --> 00:12:56,560
initiates the TCP connection. So, as you can see&nbsp;
the first arrow, which would be the initial TCP&nbsp;&nbsp;

123
00:12:56,560 --> 00:13:02,800
SYN message, is from the server to the client.&nbsp;
Now the FTP data connection is established,&nbsp;&nbsp;

124
00:13:02,800 --> 00:13:09,040
and the data can be exchanged. So, the point I&nbsp;
want you to remember is that in FTP active mode,&nbsp;&nbsp;

125
00:13:09,040 --> 00:13:14,880
the server initiates the data connection. Also,&nbsp;
note that the FTP control connection is maintained&nbsp;&nbsp;

126
00:13:14,880 --> 00:13:19,840
throughout this whole process. It isn’t&nbsp;
terminated, so there are two active connections.

127
00:13:21,200 --> 00:13:25,360
So, active is considered the ‘normal’&nbsp;
mode of initiating FTP data connections.&nbsp;&nbsp;

128
00:13:26,240 --> 00:13:32,640
However, notice the network has changed. The&nbsp;
client is now behind a firewall. In FTP passive&nbsp;&nbsp;

129
00:13:32,640 --> 00:13:38,480
mode, the client initiates the data connection.&nbsp;
This is often necessary when the client is behind&nbsp;&nbsp;

130
00:13:38,480 --> 00:13:44,000
a firewall, which could block the incoming&nbsp;
connection from the server. So, now the first&nbsp;&nbsp;

131
00:13:44,000 --> 00:13:51,120
message in the TCP connection is initiated by the&nbsp;
client. The firewall permits the server’s replies,&nbsp;&nbsp;

132
00:13:51,120 --> 00:13:55,680
but it would block the message if the server&nbsp;
tried to initiate the TCP connection itself.&nbsp;&nbsp;

133
00:13:57,040 --> 00:14:03,440
Once the FTP data connection is established, the&nbsp;
data is exchanged. So, here’s what I want you&nbsp;&nbsp;

134
00:14:03,440 --> 00:14:09,200
to remember. Firewalls usually don’t permit&nbsp;
‘outside’ devices to initiate connections.&nbsp;&nbsp;

135
00:14:10,080 --> 00:14:15,120
In this case, FTP passive mode is used and&nbsp;
the client, which is behind the firewall,&nbsp;&nbsp;

136
00:14:15,120 --> 00:14:20,480
initiates the TCP connection. By the way,&nbsp;
if you’re interested in learning more about&nbsp;&nbsp;

137
00:14:20,480 --> 00:14:25,840
firewalls, consider studying for the CCNP security&nbsp;
certification at some point in the future.

138
00:14:28,080 --> 00:14:34,400
Okay, that’s enough about FTP. FTP is more&nbsp;
complex than TFTP and it would take a long&nbsp;&nbsp;

139
00:14:34,400 --> 00:14:38,960
time to really cover all there is to know&nbsp;
about FTP, but I think that’s enough for&nbsp;&nbsp;

140
00:14:38,960 --> 00:14:47,920
now. So let’s briefly compare FTP and TFTP. FTP&nbsp;
uses TCP for connection-based communication.&nbsp;&nbsp;

141
00:14:48,800 --> 00:14:53,680
Port 20 is used for data connections, and&nbsp;
port 21 is used for control connections.&nbsp;&nbsp;

142
00:14:54,880 --> 00:14:59,840
TFTP on the other hand uses UDP port&nbsp;
69 for connectionless communication,&nbsp;&nbsp;

143
00:15:00,400 --> 00:15:03,680
although there is a basic form of&nbsp;
connection within the protocol itself.&nbsp;&nbsp;

144
00:15:05,520 --> 00:15:12,480
FTP clients can use commands to perform various&nbsp;
actions, not just copy files. However TFTP&nbsp;&nbsp;

145
00:15:12,480 --> 00:15:18,560
clients can only copy files to or from the&nbsp;
server. They can’t delete files, list files, etc.&nbsp;&nbsp;

146
00:15:19,680 --> 00:15:26,160
FTP uses usernames and passwords to limit who&nbsp;
can access the server. TFTP, on the other hand,&nbsp;&nbsp;

147
00:15:26,160 --> 00:15:33,280
has no authentication system at all. So, FTP is&nbsp;
a more complex protocol, and TFTP is simpler.

148
00:15:36,400 --> 00:15:42,400
Okay, let’s move on to look at the IOS file&nbsp;
systems. This is going to be a very brief&nbsp;&nbsp;

149
00:15:42,400 --> 00:15:46,800
introduction, just this slide, but I want&nbsp;
to introduce it because we will be looking&nbsp;&nbsp;

150
00:15:46,800 --> 00:15:55,360
at transferring files from TFTP and FTP servers&nbsp;
onto a Cisco IOS device. A file system is a way&nbsp;&nbsp;

151
00:15:55,360 --> 00:16:01,360
of controlling how data is stored and retrieved.&nbsp;
If you have a PC, it certainly has its own file&nbsp;&nbsp;

152
00:16:01,360 --> 00:16:08,080
system. You can view the file systems of a Cisco&nbsp;
IOS device with the command SHOW FILE SYSTEMS.&nbsp;&nbsp;

153
00:16:08,880 --> 00:16:14,560
And here’s some sample output. Note that there&nbsp;
are quite a few file systems, and I even cut out&nbsp;&nbsp;

154
00:16:14,560 --> 00:16:19,840
a few because the output was too long. And note&nbsp;
that there are different types of file systems.&nbsp;&nbsp;

155
00:16:20,960 --> 00:16:27,360
The disk type refers to storage devices such as&nbsp;
flash memory. This is usually where the Cisco&nbsp;&nbsp;

156
00:16:27,360 --> 00:16:36,160
IOS file itself is stored. When the device boots&nbsp;
up, it copies the IOS file from flash into RAM.&nbsp;&nbsp;

157
00:16:36,160 --> 00:16:42,160
The opaque disk type is used for specific internal&nbsp;
functions. These refer to logical internal&nbsp;&nbsp;

158
00:16:42,160 --> 00:16:51,200
systems, not actual separate storage devices. The&nbsp;
NVRAM type refers to the NVRAM, non-volatile RAM,&nbsp;&nbsp;

159
00:16:51,200 --> 00:16:56,480
of the device. Normal RAM loses all of&nbsp;
its data when the device loses power.&nbsp;&nbsp;

160
00:16:57,360 --> 00:17:05,840
However NVRAM does not. The startup-config file is&nbsp;
stored in NVRAM. There is also the network type.&nbsp;&nbsp;

161
00:17:06,480 --> 00:17:13,440
This represents external file systems, for&nbsp;
example FTP or TFTP servers. I don’t think&nbsp;&nbsp;

162
00:17:13,440 --> 00:17:18,240
you’ll find any questions about these file&nbsp;
systems on the exam, the topic was removed&nbsp;&nbsp;

163
00:17:18,240 --> 00:17:25,040
in the newest version of the CCNA. So, we’ll&nbsp;
end this introduction here. Next let’s actually&nbsp;&nbsp;

164
00:17:25,040 --> 00:17:31,840
look at how to use TFTP and FTP to transfer&nbsp;
files into the flash memory of Cisco devices.

165
00:17:33,600 --> 00:17:40,400
So, here’s a very simple network we’ll use&nbsp;
to demonstrate TFTP and FTP. R1 is a Cisco&nbsp;&nbsp;

166
00:17:40,400 --> 00:17:48,320
router running Cisco IOS, and we have downloaded&nbsp;
a new version of IOS and saved it on SRV1. SRV1&nbsp;&nbsp;

167
00:17:48,320 --> 00:17:53,840
is a server running both TFTP and FTP, and&nbsp;
we’ll try out both of them to get the new&nbsp;&nbsp;

168
00:17:53,840 --> 00:18:01,920
version of IOS from SRV1 onto R1. First, you can&nbsp;
view the current version of IOS running on R1 with&nbsp;&nbsp;

169
00:18:01,920 --> 00:18:11,200
SHOW VERSION. Here you can see the image name,&nbsp;
C2900-UNIVERSALK9-M. Notice the K9, meaning it&nbsp;&nbsp;

170
00:18:11,200 --> 00:18:20,800
supports cryptographic features like SSH. Then&nbsp;
the version number, 15.1(4)M4. Perhaps in a future&nbsp;&nbsp;

171
00:18:20,800 --> 00:18:28,080
video I’ll talk about the naming conventions of&nbsp;
IOS versions, but I’ll skip over it for now. The&nbsp;&nbsp;

172
00:18:28,080 --> 00:18:32,240
output of SHOW VERSION is actually quite&nbsp;
long, I’m just showing the top portion.&nbsp;&nbsp;

173
00:18:33,520 --> 00:18:38,480
By the way, for simplicity’s sake I’m actually&nbsp;
using packet tracer for this demonstration,&nbsp;&nbsp;

174
00:18:38,480 --> 00:18:45,120
although usually I use GNS3. You can also&nbsp;
view the contents of flash with SHOW FLASH.&nbsp;&nbsp;

175
00:18:46,160 --> 00:18:52,400
Here it is, and you can see the IOS image&nbsp;
here. So, what we’re going to do now is use&nbsp;&nbsp;

176
00:18:52,400 --> 00:18:59,680
TFTP to copy a new version of IOS from SRV1&nbsp;
to the flash of R1, configure R1 to boot&nbsp;&nbsp;

177
00:18:59,680 --> 00:19:04,240
with the new version of IOS, and then&nbsp;
finally delete the old version from flash.

178
00:19:06,240 --> 00:19:12,800
And here’s how to copy the file using TFTP. The&nbsp;
command is COPY, followed by the source and the&nbsp;&nbsp;

179
00:19:12,800 --> 00:19:18,880
destination. By using TFTP as the source,&nbsp;
you tell the router that you want to access&nbsp;&nbsp;

180
00:19:18,880 --> 00:19:24,640
a TFTP server. The router then asks you&nbsp;
for the IP address of the remote host.&nbsp;&nbsp;

181
00:19:25,680 --> 00:19:31,920
This is where you enter the TFTP server’s IP&nbsp;
address. Then enter the source filename, the name&nbsp;&nbsp;

182
00:19:31,920 --> 00:19:38,640
of the file you want to download. Note that you&nbsp;
have to know this beforehand. TFTP isn’t capable&nbsp;&nbsp;

183
00:19:38,640 --> 00:19:44,320
of asking a server ‘what files do you have?’. I&nbsp;
already knew the name of the file on the server,&nbsp;&nbsp;

184
00:19:44,320 --> 00:19:49,680
so I entered it. Then you’re asked what name&nbsp;
you want to save the file as on the router.&nbsp;&nbsp;

185
00:19:50,720 --> 00:19:55,840
You can just hit enter to accept the default name,&nbsp;
which is the same name as on the TFTP server.&nbsp;&nbsp;

186
00:19:56,720 --> 00:20:01,360
And that’s it, the file is then transferred&nbsp;
from the TFTP server to the router.

187
00:20:03,200 --> 00:20:09,680
I used SHOW FLASH to check the contents of flash.&nbsp;
Here you can see the new version of IOS that was&nbsp;&nbsp;

188
00:20:09,680 --> 00:20:16,640
copied from the TFTP server. Now, how do we make&nbsp;
the router use this file as its OS instead of&nbsp;&nbsp;

189
00:20:16,640 --> 00:20:23,520
the old file? From global config mode, use the&nbsp;
command BOOT SYSTEM, followed by the filepath.&nbsp;&nbsp;

190
00:20:24,640 --> 00:20:28,960
Note that, if you don’t use this command&nbsp;
the router will boot using the first IOS&nbsp;&nbsp;

191
00:20:28,960 --> 00:20:34,720
file it finds in flash. So, you should use this&nbsp;
command to force it to use the newer version.&nbsp;&nbsp;

192
00:20:35,920 --> 00:20:41,280
After that, make sure you save the configuration&nbsp;
before reloading the device, or the BOOT SYSTEM&nbsp;&nbsp;

193
00:20:41,280 --> 00:20:47,840
command won’t take effect. Then simply use&nbsp;
the RELOAD command to restart the device.

194
00:20:49,520 --> 00:20:54,800
After the device finished restarting I used SHOW&nbsp;
VERSION to check the running version of IOS,&nbsp;&nbsp;

195
00:20:55,440 --> 00:21:03,200
and R1 is now using the new version, 15.5,&nbsp;
instead of the old one, 15.1. Finally, let’s&nbsp;&nbsp;

196
00:21:03,200 --> 00:21:08,240
delete that old version of IOS. We don’t need it&nbsp;
anymore, it’s just taking up space on the device.&nbsp;&nbsp;

197
00:21:09,440 --> 00:21:13,600
The command to delete a file is&nbsp;
DELETE, followed by the filepath.&nbsp;&nbsp;

198
00:21:14,640 --> 00:21:20,800
It asks you to confirm, so I did. And then I&nbsp;
used SHOW FLASH to view the contents of flash,&nbsp;&nbsp;

199
00:21:21,520 --> 00:21:26,880
and now the old file is gone.&nbsp;
So, we successfully used TFTP&nbsp;&nbsp;

200
00:21:26,880 --> 00:21:34,960
to copy an IOS file to R1 from a TFTP server. We&nbsp;
then configured R1 to boot using that IOS file,&nbsp;&nbsp;

201
00:21:34,960 --> 00:21:40,720
and then reloaded R1. Finally, we deleted&nbsp;
the old IOS image from the device.

202
00:21:42,720 --> 00:21:47,760
Now let’s take a look at FTP. I’ll only show&nbsp;
the process of transferring the file from the&nbsp;&nbsp;

203
00:21:47,760 --> 00:21:53,120
server to the router, because the rest is&nbsp;
the same. Once the file is on the device,&nbsp;&nbsp;

204
00:21:53,120 --> 00:21:58,320
the other steps such as the BOOT SYSTEM command,&nbsp;
deleting the old file, etc, are all the same.&nbsp;&nbsp;

205
00:22:00,080 --> 00:22:03,760
First, you should configure the username&nbsp;
and password that the router will use when&nbsp;&nbsp;

206
00:22:03,760 --> 00:22:09,840
connecting to an FTP server. Remember, FTP&nbsp;
authenticates using a username and password.&nbsp;&nbsp;

207
00:22:10,960 --> 00:22:14,560
So, this same username and password&nbsp;
must be configured on the server, too.&nbsp;&nbsp;

208
00:22:16,080 --> 00:22:22,080
In this case, I configured the username and&nbsp;
password as cisco. Then the copy command itself&nbsp;&nbsp;

209
00:22:22,080 --> 00:22:29,840
is basically the same. COPY FTP: FLASH:, and then&nbsp;
enter the FTP server’s IP address, the source file&nbsp;&nbsp;

210
00:22:29,840 --> 00:22:36,320
name, and the name you want to save the file&nbsp;
as on the local router. That’s it. Then to&nbsp;&nbsp;

211
00:22:36,320 --> 00:22:42,560
upgrade the IOS we could use the same BOOT SYSTEM&nbsp;
command, save the config, and reload the router.

212
00:22:44,800 --> 00:22:49,520
Okay, here are the commands we just used.&nbsp;
If you don’t remember any of these commands,&nbsp;&nbsp;

213
00:22:49,520 --> 00:22:54,000
go back in the video to review. I&nbsp;
also want to say something about the&nbsp;&nbsp;

214
00:22:54,000 --> 00:23:00,720
COPY command. This actually isn’t the first time&nbsp;
we’ve seen that command. Previously I introduced&nbsp;&nbsp;

215
00:23:00,720 --> 00:23:06,720
it as COPY RUNNING-CONFIG STARTUP-CONFIG, as a&nbsp;
method to save the configuration of the device.&nbsp;&nbsp;

216
00:23:07,600 --> 00:23:12,880
It copies the source, the current running&nbsp;
config, to the destination, the startup config.

217
00:23:15,120 --> 00:23:21,840
Okay, before the quiz let’s review what we&nbsp;
covered. First, the purpose of FTP and TFTP.&nbsp;&nbsp;

218
00:23:22,880 --> 00:23:26,080
Basically, they allow you to&nbsp;
transfer files between devices&nbsp;&nbsp;

219
00:23:26,080 --> 00:23:35,280
over a network. Then I gave an overview of TFTP&nbsp;
and FTP, and compared the two. TFTP is simpler&nbsp;&nbsp;

220
00:23:35,280 --> 00:23:39,840
and useful for quickly transferring&nbsp;
small files in a controlled environment,&nbsp;&nbsp;

221
00:23:39,840 --> 00:23:43,120
but has no advanced functionalities&nbsp;
or any security features.&nbsp;&nbsp;

222
00:23:44,640 --> 00:23:50,880
FTP has much greater functionality, and includes&nbsp;
username and password authentication. And if you&nbsp;&nbsp;

223
00:23:50,880 --> 00:23:56,800
use FTPS, it has many other security benefits,&nbsp;
but that’s out of the scope of this video.&nbsp;&nbsp;

224
00:23:58,400 --> 00:24:05,600
Then I very briefly introduced the file systems in&nbsp;
Cisco IOS. And finally showed how to use TFTP and&nbsp;&nbsp;

225
00:24:05,600 --> 00:24:12,240
FTP to get a new IOS file from a server, and then&nbsp;
reboot the device with the new version of IOS.&nbsp;&nbsp;

226
00:24:13,440 --> 00:24:17,840
Once again, make sure to watch until the end&nbsp;
of the quiz for a bonus question from Boson&nbsp;&nbsp;

227
00:24:17,840 --> 00:24:24,960
Software’s ExSim, the best practice exams for the&nbsp;
CCNA. Okay, let’s go to question 1 of the quiz.

228
00:24:27,120 --> 00:24:30,400
Which of the following&nbsp;
statements about FTP are true?&nbsp;&nbsp;

229
00:24:30,400 --> 00:24:34,000
Select two. Pause the video&nbsp;
now to think about the answers.

230
00:24:38,000 --> 00:24:42,160
The answers are B, FTP control&nbsp;
connections use TCP port 21,&nbsp;&nbsp;

231
00:24:42,800 --> 00:24:46,560
and D, FTP data connections use TCP port 20.&nbsp;&nbsp;

232
00:24:47,840 --> 00:24:55,440
FTP uses TCP to provide reliable communications&nbsp;
and other features. It uses port 21 to establish a&nbsp;&nbsp;

233
00:24:55,440 --> 00:25:01,600
control connection for sending FTP commands and&nbsp;
replies to those commands, and then uses port&nbsp;&nbsp;

234
00:25:01,600 --> 00:25:07,680
20 to establish data connections for the actual&nbsp;
exchange of data. Okay, let’s go to question 2.

235
00:25:09,440 --> 00:25:14,480
Which of the following commands can be used to&nbsp;
transfer a file from an external TFTP server&nbsp;&nbsp;

236
00:25:14,480 --> 00:25:19,360
to the local device’s flash storage? Pause&nbsp;
the video now to think about the answer.

237
00:25:23,680 --> 00:25:31,760
The answer is A, COPY TFTP: FLASH:. The command&nbsp;
is COPY, then the source and then the destination,&nbsp;&nbsp;

238
00:25:31,760 --> 00:25:37,840
so this copies a file from a TFTP server&nbsp;
to flash. Okay, let’s go to question 3.

239
00:25:40,160 --> 00:25:44,800
R1 is behind a firewall and wants to&nbsp;
connect to an external FTP server.&nbsp;&nbsp;

240
00:25:45,760 --> 00:25:50,240
Which of the following statements is true?&nbsp;
Pause the video now to think about the answer.

241
00:25:55,280 --> 00:26:00,320
The answer is C, R1 should use FTP&nbsp;
passive mode for the data connection.&nbsp;&nbsp;

242
00:26:01,440 --> 00:26:05,440
Active and passive mode only&nbsp;
apply to the FTP data connections,&nbsp;&nbsp;

243
00:26:05,440 --> 00:26:11,200
because the client always initiates the control&nbsp;
connection. In active mode, the server initiates&nbsp;&nbsp;

244
00:26:11,200 --> 00:26:15,280
the data connection. But in passive mode,&nbsp;
the client initiates the data connection.&nbsp;&nbsp;

245
00:26:16,000 --> 00:26:24,320
When a client is behind a firewall, passive mode&nbsp;
should be used. Okay, let’s go to question 4.

246
00:26:24,320 --> 00:26:29,600
Which type of file system is used to store the&nbsp;
startup-config of a device running Cisco IOS?&nbsp;&nbsp;

247
00:26:30,640 --> 00:26:32,720
Pause the video now to think about the answer.

248
00:26:36,960 --> 00:26:44,240
The answer is D, NVRAM. NVRAM, non-volatile&nbsp;
RAM, is a type of RAM that preserves data&nbsp;&nbsp;

249
00:26:44,240 --> 00:26:49,200
even after the device loses power. It&nbsp;
is used to store the startup-config&nbsp;&nbsp;

250
00:26:49,200 --> 00:26:52,800
of the device. Okay, let’s go to question 5.

251
00:26:55,520 --> 00:26:59,680
Which of the following functions&nbsp;
are NOT possible when using TFTP?&nbsp;&nbsp;

252
00:26:59,680 --> 00:27:05,840
(select two). Pause the video&nbsp;
now to think about the answers.

253
00:27:08,880 --> 00:27:14,960
The answers are B, create a new directory on a&nbsp;
server, and C, list the contents of a server.&nbsp;&nbsp;

254
00:27:16,080 --> 00:27:20,080
TFTP is very simple and only&nbsp;
allows a client to copy a file&nbsp;&nbsp;

255
00:27:20,080 --> 00:27:26,960
to or from a server, it has no other functions.&nbsp;
Okay, that’s all for the quiz. Now let’s take&nbsp;&nbsp;

256
00:27:26,960 --> 00:27:33,920
a look at a bonus question from&nbsp;
Boson Software’s ExSim for CCNA.

257
00:27:33,920 --> 00:27:38,960
Okay here's today's Boson ExSim practice&nbsp;
question. Which of the following Application&nbsp;&nbsp;

258
00:27:38,960 --> 00:27:44,560
layer protocols use UDP for unsynchronized,&nbsp;
connectionless data transfer? Select 2 choices.&nbsp;&nbsp;

259
00:27:45,680 --> 00:27:49,520
So, here are the choices. Pause the&nbsp;
video now to think about the answers.

260
00:27:54,320 --> 00:28:01,760
Okay let's check. So, I think the correct answers&nbsp;
are TFTP. That uses UDP for unsynchronized,&nbsp;&nbsp;

261
00:28:01,760 --> 00:28:07,920
connectionless data transfer. Now, it says&nbsp;
connectionless, but as I showed TFTP does use&nbsp;&nbsp;

262
00:28:07,920 --> 00:28:10,960
some basic kind of connection&nbsp;
within the protocol itself.&nbsp;&nbsp;

263
00:28:11,920 --> 00:28:19,200
But it doesn't use TCP connections at Layer 4, so&nbsp;
it is one of the correct answers. And also SNMP,&nbsp;&nbsp;

264
00:28:19,200 --> 00:28:24,640
Simple Network Management Protocol. As we covered&nbsp;
recently in the course, it also uses UDP. It is&nbsp;&nbsp;

265
00:28:24,640 --> 00:28:33,760
not TCP-based, it doesn't use TCP connections.&nbsp;
And HTTP, I mentioned, does use TCP, and also SMTP&nbsp;&nbsp;

266
00:28:33,760 --> 00:28:39,120
which we don't cover in the course, but that is&nbsp;
Simple Mail Transfer Protocol. It also uses TCP.&nbsp;&nbsp;

267
00:28:40,240 --> 00:28:46,800
Okay, so I will click on show answer. And that&nbsp;
is correct. So, here is Boson's explanation,&nbsp;&nbsp;

268
00:28:47,360 --> 00:28:53,040
which just outlines the different protocols and&nbsp;
explains about TCP and UDP. So, you can pause the&nbsp;&nbsp;

269
00:28:53,040 --> 00:29:03,040
video now to read Boson's explanation. Okay, so&nbsp;
that was a quick look at a bonus question in Boson&nbsp;&nbsp;

270
00:29:03,040 --> 00:29:09,440
Software's ExSim for CCNA. These are without&nbsp;
a doubt the best practice exams for the CCNA.&nbsp;&nbsp;

271
00:29:09,440 --> 00:29:13,840
So, if you want to get Boson ExSim, please&nbsp;
follow the link in the video description.

272
00:29:17,200 --> 00:29:19,600
There are supplementary materials for this video.&nbsp;&nbsp;

273
00:29:20,480 --> 00:29:23,440
There is a flashcard deck to&nbsp;
use with the software ‘Anki’.&nbsp;&nbsp;

274
00:29:24,400 --> 00:29:28,640
There will also be a packet tracer practice&nbsp;
lab so you can get some hands-on practice.&nbsp;&nbsp;

275
00:29:29,440 --> 00:29:35,200
That will be in the next video. Sign up for my&nbsp;
mailing list via the link in the description,&nbsp;&nbsp;

276
00:29:35,200 --> 00:29:39,840
and I’ll send you all of the flashcards&nbsp;
and packet tracer lab files for the course.

277
00:29:41,120 --> 00:29:45,680
Before finishing today’s video I want&nbsp;
to thank my JCNP-level channel members.&nbsp;&nbsp;

278
00:29:46,400 --> 00:29:53,520
To join, please click the ‘Join’ button under the&nbsp;
video. Thank you to Serge, Njoku, Viktor, Roger,&nbsp;&nbsp;

279
00:29:53,520 --> 00:30:01,360
Raj, Kenneth, Seamus, H W, Brandon, Samil, Aaron,&nbsp;
Marcel, Kone, Donald, C Mohd, Gustavo, Anthony,&nbsp;&nbsp;

280
00:30:01,360 --> 00:30:06,880
Junhong, Benjamin, Tshepiso, Justin, Prakaash,&nbsp;
Nasir, Erlison, Marko, Daming, Jhilmar, Ed,&nbsp;&nbsp;

281
00:30:06,880 --> 00:30:13,120
Value, John, Funnydart, Velvijaykum, Mark, Yousif,&nbsp;
Boson Software, Devin, Lito, Yonatan, and Vance.&nbsp;&nbsp;

282
00:30:14,000 --> 00:30:17,920
Sorry if I pronounced your name incorrectly,&nbsp;
but thank you so much for your support.&nbsp;&nbsp;

283
00:30:18,960 --> 00:30:24,960
This is the list of JCNP-level members at the&nbsp;
time of recording by the way, March 7th 2021.&nbsp;&nbsp;

284
00:30:25,760 --> 00:30:30,800
If you signed up recently and your name isn’t&nbsp;
on here don’t worry, you’ll be in future videos.

285
00:30:32,800 --> 00:30:36,800
Thank you for watching. Please subscribe&nbsp;
to the channel, like the video,&nbsp;&nbsp;

286
00:30:36,800 --> 00:30:40,640
leave a comment, and share the video&nbsp;
with anyone else studying for the CCNA.&nbsp;&nbsp;

287
00:30:41,680 --> 00:30:47,280
If you want to leave a tip, check the links in the&nbsp;
description. I'm also a Brave verified publisher&nbsp;&nbsp;

288
00:30:47,280 --> 00:30:53,840
and accept BAT, or Basic Attention Token, tips&nbsp;
via the Brave browser. That's all for now.
var d46816r = [
  "<a href=\"https://www.coursera.org/learn/process-data/lecture/w6EFG/using-sql-to-clean-data\">Использование SQL для очистки данных.</a>",
  "Использование SQL для очистки данных.",
  "С возвращением и отличной работой над последним еженедельным испытанием.",
  "Теперь, когда мы знаем разницу между очисткой грязных данных и некоторыми общими методами очистки данных, давайте сосредоточимся на очистке данных с помощью SQL.",
  "Далее мы узнаем о различных функциях очистки данных в электронных таблицах и SQL, а также о том, как SQL можно использовать для очистки больших наборов данных.",
  "Я также покажу вам, как разрабатывать некоторые базовые поисковые запросы для баз данных и как применять базовые функции SQL для преобразования данных и очистки строк.",
  "Очистка ваших данных — это последний шаг в процессе анализа данных, прежде чем вы сможете перейти к фактическому анализу, и в SQL есть множество отличных инструментов, которые могут помочь вам в этом.",
  "Но прежде чем мы начнем чистить базы данных, мы более подробно рассмотрим SQL и когда его использовать.",
  "Увидимся там.",
  "<a href=\"https://www.coursera.org/learn/process-data/lecture/XWc4S/sally-for-the-love-of-sql\">Увидимся там.</a>",
  "Салли: Из любви к SQL.",
  "Рекламные агентства получают деньги от своих клиентов за рекламу своего бренда.",
  "Эти агентства используют наши продукты, используют определенные платформы Google, рекламные платформы, и я помогаю им наилучшим образом использовать эти платформы, различные стратегии, которые они могут использовать, чтобы быть лучшими в своем классе.",
  "У многих сотрудников рекламных агентств есть отчеты, которые они должны рассылать своим клиентам.",
  "На создание и визуализацию этих отчетов уходит много времени, поэтому я помогаю специалистам-практикам и командам аналитиков использовать определенный продукт, который позволяет им создавать эти отчеты намного быстрее и проще.",
  "Если вы собираетесь начать как аналитик данных, это открывает множество дверей, потому что все отслеживают данные, используют данные, должны использовать данные, независимо от отрасли.",
  "Везде, от здравоохранения до рекламы, электронной коммерции, развлечений, всего и вся, все используют данные, поэтому вы всем нужны как аналитик данных.",
  "SQL упрощает нашу жизнь, когда мы анализируем множество различных данных.",
  "Лишь совсем недавно программы SQL, которые мы используем сейчас, могут давать нам мгновенные результаты для анализа миллионов или миллиардов данных.",
  "Много лет назад, может быть, около пяти лет назад, хотя мы все еще могли анализировать эти миллионы строк, нам приходилось ждать пятнадцать, тридцать минут, пока запросы выполнялись.",
  "Но теперь это мгновенно, и это действительно захватывающе, и мы можем сделать гораздо больше с этой силой.",
  "SQL очень помог мне в моей карьере, потому что это одна из тех фундаментальных вещей, которые вы должны знать как аналитик данных.",
  "Раньше не все знали SQL, поэтому знание SQL определенно было конкурентным преимуществом.",
  "В настоящее время, я бы сказал, больше людей, может быть, большинство людей знают об этом.",
  "Это ключевой навык, который пользуется большим спросом у всех.",
  "Итак, знание SQL и работа аналитиком данных делают вас довольно популярным среди рекрутеров, так что я думаю, что это очень весело.",
  "Я сам выучил SQL, поэтому мои знания о SQL — это то, что мне близко и дорого, близко к сердцу, поскольку это то, что я почти сделал для себя, и я получаю от этого огромное удовлетворение.",
  "Вот почему я действительно люблю SQL.",
  "Одна из забавных вещей в SQL и еще одна причина, по которой мне действительно нравится его использовать, заключается в том, что когда вы вводите что-то в этом запросе и просто нажимаете Control, Shift, Enter или когда вы запускаете запрос, вы получаете результаты почти мгновенно, в зависимости от используемой вами платформы.",
  "Но интересно видеть, если вы думаете концептуально, какой анализ компьютер делает за вас на основе того небольшого фрагмента командного кода или небольшого фрагмента кода, который вы написали, и это так мощно, если вы думаете о том, что происходит за кулисами.",
  "Так что я думаю, что это весело смотреть.",
  "Мы живем в мире больших данных, и он становится все больше.",
  "Вычислительная мощность также растет в геометрической прогрессии.",
  "Со всеми данными, которые мы можем отслеживать, чем больше и больше мы можем отслеживать этих данных, тем больше и больше нам нужны аналитики данных.",
  "Наши карьерные перспективы в основном стремительно растут.",
  "Меня зовут Салли, я руководитель отдела измерений и аналитики в Google.",
  "<a href=\"https://www.coursera.org/learn/process-data/lecture/fDPil/understanding-sql-capabilities\">Меня зовут Салли, я руководитель отдела измерений и аналитики в Google.</a>",
  "Понимание возможностей SQL.",
  "И снова здравствуйте.",
  "Поэтому, прежде чем мы рассмотрим все способы, которыми аналитики данных используют SQL для очистки данных, я хочу официально представить вам SQL.",
  "Мы уже много говорили о SQL.",
  "Вы видели некоторые базы данных и некоторые основные функции в SQL, и вы даже видели, как SQL можно использовать для обработки данных.",
  "Но теперь давайте на самом деле определим SQL.",
  "SQL — это язык структурированных запросов, который аналитики используют для работы с базами данных.",
  "Аналитики данных обычно используют SQL для работы с большими наборами данных, потому что он может обрабатывать огромные объемы данных.",
  "И я имею в виду триллионы строк.",
  "Это много строк, чтобы обернуть голову.",
  "Итак, позвольте мне дать вам представление о том, сколько данных на самом деле.",
  "Представьте себе набор данных, который содержит имена всех 8 миллиардов человек в мире.",
  "Среднестатистическому человеку потребуется 101 год, чтобы прочесть все 8 миллиардов имен.",
  "SQL может обработать это за секунды.",
  "Лично я думаю, что это довольно круто.",
  "Другим инструментам, таким как электронные таблицы, может потребоваться очень много времени для обработки такого большого объема данных, что является одной из основных причин, по которой аналитики данных предпочитают использовать SQL при работе с большими наборами данных.",
  "Позвольте мне рассказать вам краткую историю SQL.",
  "Разработка SQL фактически началась в начале 70-х годов.",
  "В 1970 году Эдгар Ф. Кодд разработал теорию реляционных баз данных.",
  "Возможно, вы помните, что когда-то изучали реляционные базы данных.",
  "Это база данных, содержащая ряд таблиц, которые можно соединить для формирования отношений.",
  "В то время IBM использовала систему управления реляционными базами данных под названием System R.",
  "Что ж, ученые IBM пытались найти способ манипулировать и извлекать данные из IBM System R.",
  "Их первый язык запросов был сложен в использовании.",
  "Поэтому они быстро перешли к следующей версии, SQL.",
  "В 1979 году, после тщательного тестирования, SQL, который сейчас пишется просто как S-Q-L, был выпущен публично.",
  "К 1986 году SQL стал стандартным языком для взаимодействия с реляционными базами данных и остается им до сих пор.",
  "Это еще одна причина, по которой аналитики данных выбирают SQL.",
  "Это хорошо известный стандарт в сообществе.",
  "Впервые я использовал SQL для извлечения данных из реальной базы данных на моей первой работе в качестве аналитика данных.",
  "До этого у меня не было никаких базовых знаний о SQL.",
  "Я узнал об этом только потому, что это было требованием для этой работы.",
  "Рекрутер на эту должность дал мне неделю, чтобы изучить ее.",
  "Так что я пошел в Интернет и исследовал его, и закончил тем, что научил себя SQL.",
  "Они фактически дали мне письменный тест как часть процесса подачи заявления о приеме на работу.",
  "Мне приходилось писать SQL-запросы и функции на доске.",
  "Но с тех пор я использую SQL.",
  "И мне это очень нравится.",
  "И точно так же, как я изучал SQL самостоятельно, я хотел напомнить вам, что вы тоже можете во всем разобраться.",
  "Есть множество отличных онлайн-ресурсов для обучения.",
  "Так что не позволяйте одному рабочему требованию стоять у вас на пути, не проведя предварительно небольшое исследование.",
  "Теперь, когда мы знаем немного больше о том, почему аналитики предпочитают работать с SQL, когда они обрабатывают много данных, и немного об истории SQL, мы продолжим и изучим некоторые практические приложения для него.",
  "Далее мы рассмотрим некоторые инструменты, которые мы изучили в электронных таблицах, и выясним, применимы ли какие-либо из них к работе с SQL.",
  "Спойлер, они делают.",
  "До скорой встречи.",
  "<a href=\"https://www.coursera.org/learn/process-data/lecture/Y15Mz/spreadsheets-versus-sql\">До скорой встречи.</a>",
  "Электронные таблицы против SQL.",
  "Привет.",
  "До сих пор мы изучали как электронные таблицы, так и SQL.",
  "Хотя между электронными таблицами и SQL существует множество различий, вы также найдете и некоторые сходства.",
  "Давайте посмотрим, что общего у электронных таблиц и SQL и чем они отличаются.",
  "Электронные таблицы и SQL на самом деле имеют много общего.",
  "В частности, есть инструменты, которые можно использовать как в электронных таблицах, так и в SQL для достижения аналогичных результатов.",
  "Мы уже узнали о некоторых инструментах для очистки данных в электронных таблицах, а это значит, что вы уже знаете некоторые инструменты, которые можно использовать в SQL.",
  "Например, вы по-прежнему можете выполнять арифметические действия, использовать формулы и объединять данные при использовании SQL, поэтому мы будем опираться на навыки, полученные в электронных таблицах, и использовать их для выполнения еще более сложной работы в SQL.",
  "Вот пример того, что я имею в виду под более сложной работой.",
  "Если бы мы работали с медицинскими данными для больницы, нам нужно было бы иметь доступ к большому количеству данных и обрабатывать их.",
  "Нам могут понадобиться демографические данные, такие как имена пациентов, дни рождения и адреса, информация об их страховке или прошлых посещениях, данные общественного здравоохранения или даже данные, созданные пользователями, для добавления в их записи о пациентах.",
  "Все эти данные хранятся в разных местах, возможно, даже в разных форматах, и в каждом месте могут быть миллионы строк и сотни связанных таблиц.",
  "Это слишком много данных для ввода вручную, даже для одной больницы.",
  "Вот где SQL пригодится.",
  "Вместо того, чтобы просматривать каждый отдельный источник данных и записывать его в нашу электронную таблицу, мы можем использовать SQL для извлечения всей этой информации из разных мест в нашей базе данных.",
  "Теперь предположим, что мы хотим найти что-то конкретное во всех этих данных, например, сколько сегодня поступило пациентов с определенным диагнозом.",
  "В электронной таблице мы можем использовать функцию COUNTIF, чтобы узнать это, или мы можем объединить запросы COUNT и WHERE в SQL, чтобы узнать, сколько строк соответствует нашим критериям поиска.",
  "Это даст нам аналогичные результаты, но работает с гораздо большим и более сложным набором данных.",
  "Далее поговорим о том, чем отличаются электронные таблицы и SQL.",
  "Во-первых, важно понимать, что электронные таблицы и SQL — это разные вещи.",
  "Электронные таблицы создаются с помощью таких программ, как Excel или Google Sheets.",
  "Эти программы предназначены для выполнения определенных встроенных функций.",
  "С другой стороны, SQL — это язык, который можно использовать для взаимодействия с программами баз данных, такими как Oracle MySQL или Microsoft SQL Server.",
  "Различия между ними в основном заключаются в том, как они используются.",
  "Если аналитик данных получил данные в виде электронной таблицы, он, вероятно, будет выполнять очистку и анализ данных в этой электронной таблице, но если он работает с большим набором данных с более чем миллионом строк или несколькими файлами в базе данных. , проще, быстрее и удобнее использовать SQL.",
  "SQL может получать доступ и использовать гораздо больше данных, поскольку он может автоматически извлекать информацию из разных источников в базе данных, в отличие от электронных таблиц, которые имеют доступ только к введенным вами данным.",
  "Это также означает, что данные хранятся в нескольких местах.",
  "Аналитик данных может использовать электронные таблицы, хранящиеся локально на их жестком диске или в личном облаке, когда он работает в одиночку, но если он работает в более крупной команде с несколькими аналитиками, которым необходимо получить доступ и использовать данные, хранящиеся в базе данных, SQL может быть более полезный инструмент.",
  "Из-за этих различий электронные таблицы и SQL используются для разных целей.",
  "Как вы уже знаете, электронные таблицы хороши для небольших наборов данных и когда вы работаете независимо.",
  "Кроме того, электронные таблицы имеют встроенные функции, такие как проверка орфографии, которая может быть очень удобной.",
  "SQL отлично подходит для работы с большими наборами данных, даже с триллионами строк данных.",
  "Поскольку SQL так долго был стандартным языком для общения с базами данных, его можно адаптировать и использовать для многих программ баз данных.",
  "SQL также записывает изменения в запросах, что упрощает отслеживание изменений в вашей команде, если вы работаете совместно.",
  "Далее мы изучим больше запросов и функций в SQL, которые предоставят вам несколько новых инструментов для работы.",
  "Возможно, вы даже научитесь использовать инструменты для работы с электронными таблицами совершенно по-новому.",
  "Увидимся в следующий раз.",
  "<a href=\"https://www.coursera.org/learn/process-data/lecture/Ktoxq/widely-used-sql-queries\">Увидимся в следующий раз.</a>",
  "Широко используемые SQL-запросы.",
  "Привет, с возвращением.",
  "До сих пор мы узнали, что SQL имеет некоторые из тех же инструментов, что и электронные таблицы, но в гораздо большем масштабе.",
  "В этом видео мы познакомимся с некоторыми из наиболее широко используемых SQL-запросов, которые вы можете начать использовать для собственной очистки данных и возможного анализа.",
  "Давайте начнем.",
  "Мы говорили о запросах как о запросах, которые вы отправляете в базу данных, чтобы попросить ее сделать что-то для вас.",
  "Запросы — важная часть использования SQL.",
  "В конце концов, это язык структурированных запросов.",
  "Запросы могут помочь вам сделать много вещей, но есть несколько общих, которые аналитики данных используют постоянно.",
  "Итак, давайте начнем с этого.",
  "Сначала я покажу вам, как использовать запрос SELECT.",
  "Я называл это раньше, но теперь я добавлю кое-что новое, чтобы мы могли попробовать.",
  "Прямо сейчас средство просмотра таблиц пусто, потому что мы еще ничего не извлекли из базы данных.",
  "Например, магазин, с которым мы работаем, проводит розыгрыш для покупателей в определенных городах.",
  "У нас есть база данных, содержащая информацию о клиентах, которую мы можем использовать, чтобы сузить круг клиентов, имеющих право на участие в розыгрыше.",
  "Давайте сделаем это сейчас.",
  "Мы можем использовать SELECT, чтобы точно указать, с какими данными мы хотим взаимодействовать в таблице.",
  "Если мы объединим SELECT с FROM, мы сможем извлекать данные из любой таблицы в этой базе данных, если они знают, как называются столбцы и строки.",
  "Мы можем захотеть получить данные об именах клиентов и городах из одной из таблиц.",
  "Чтобы сделать это, мы можем ввести ВЫБЕРИТЕ имя, запятую, город ОТ данных подчеркивания клиента, адрес подчеркивания клиента.",
  "Чтобы получить эту информацию из таблицы адресов подчеркивания клиента, которая находится в данных подчеркивания клиента, набор данных.",
  "SELECT и FROM помогают указать, какие данные мы хотим извлечь из базы данных и использовать.",
  "Мы также можем вставлять новые данные в базу данных или обновлять существующие данные.",
  "Например, может быть, у нас есть новый клиент, которого мы хотим вставить в эту таблицу.",
  "Мы можем использовать запрос INSERT INTO, чтобы ввести эту информацию.",
  "Давайте начнем с того, куда мы пытаемся вставить эти данные, с таблицы адресов подчеркивания клиента.",
  "Мы также хотим указать, в какие столбцы мы добавляем эти данные, введя их имена в скобках.",
  "Таким образом, SQL может сообщить базе данных, где именно мы вводили новую информацию.",
  "Затем мы скажем ему, какие значения мы вводим.",
  "Запустите запрос, и он просто добавит его в нашу таблицу для нас.",
  "Теперь, допустим, нам просто нужно изменить адрес клиента.",
  "Что ж, мы можем сказать базе данных обновить ее для нас.",
  "Для этого нам нужно сообщить ему, что мы пытаемся обновить таблицу адресов подчеркивания клиента.",
  "Затем нам нужно сообщить ему, какое значение мы пытаемся изменить.",
  "Но нам также нужно указать, где именно мы вносим это изменение, чтобы оно не меняло каждый адрес в таблице.",
  "Там.",
  "Теперь адрес этого одного клиента был обновлен.",
  "Если мы хотим создать новую таблицу для этой базы данных, мы можем использовать оператор CREATE TABLE IF NOT EXISTS.",
  "Имейте в виду, что просто выполнение SQL-запроса фактически не создает таблицу для извлекаемых нами данных.",
  "Он просто сохраняет его в нашей локальной памяти.",
  "Чтобы сохранить его, нам нужно загрузить его в виде электронной таблицы или сохранить результат в новую таблицу.",
  "Как аналитик данных, есть несколько ситуаций, когда вам может понадобиться сделать именно это.",
  "Это действительно зависит от того, какие данные вы извлекаете и как часто.",
  "Если вы используете только общее количество клиентов, вам, вероятно, не нужен CSV-файл или новая таблица в базе данных.",
  "Если вы используете общее количество покупателей в день, чтобы сделать что-то вроде отслеживания акции в магазине на выходных, вы можете загрузить эти данные в виде файла CSV, чтобы визуализировать их в электронной таблице.",
  "Но если вас просят отслеживать эту тенденцию на регулярной основе, вы можете создать таблицу, которая будет автоматически обновляться в соответствии с написанным вами запросом.",
  "Таким образом, вы можете напрямую загружать результаты, когда они вам понадобятся для отчета.",
  "Еще одна хорошая вещь, которую следует иметь в виду, если вы создаете много таблиц в базе данных, вам нужно будет использовать оператор DROP TABLE IF EXISTS, чтобы убрать за собой.",
  "Это хорошее домашнее хозяйство.",
  "Вы, вероятно, не будете очень часто удалять существующие таблицы.",
  "В конце концов, это данные компании, и вы не хотите удалять важные данные из их базы данных.",
  "Но вы можете убедиться, что вы очищаете таблицы, которые вы лично создали, чтобы не было старых или неиспользуемых таблиц с избыточной информацией, загромождающих базу данных.",
  "Там.",
  "Теперь вы увидели некоторые из наиболее широко используемых SQL-запросов в действии.",
  "Определенно есть больше ключевых слов для запросов и уникальных комбинаций, которые помогут вам работать с базами данных.",
  "Но это отличное место для начала.",
  "Далее мы узнаем еще больше о запросах в SQL и о том, как их использовать для очистки наших данных.",
  "Увидимся в следующий раз.",
  "<a href=\"https://www.coursera.org/learn/process-data/lecture/P89Un/evan-having-fun-with-sql\">Увидимся в следующий раз.</a>",
  "Эван: Развлекаюсь с SQL.",
  "Привет, я Эван.",
  "Я работаю портфолио-менеджером в Google.",
  "Не думаю, что я разбираюсь в информатике или супер-инженерии, но мне очень-очень нравится работать с числами, поэтому я пошел в бухгалтерию.",
  "И примерно после двух лет бухгалтерского учета я сказал: «Вау, я действительно не хочу делать все это вручную», поэтому я пошел на свой первый курс по информационным системам, где меня учили языку SQL или S-Q-L, и это полностью открыло мой разум.",
  "Между практическими знаниями электронных таблиц, где вы меняете одну ячейку, и вся электронная таблица меняется, потому что эти удивительные вычисляемые поля и SQL, где я могу запросить миллиарды строк данных за считанные секунды, я был полностью продан своей любви к данным.",
  "Я посвятил свою жизнь и свою карьеру тому, чтобы просто передать людям эту страсть и вдохновить людей на то, что они могут делать со своими данными.",
  "Почему SQL такой удивительный первый язык для изучения?.",
  "Ну, есть так много вещей, которые вы можете сделать с ним.",
  "Я сначала оговорюсь и скажу, что я не специализируюсь в области компьютерных наук.",
  "В глубине души я не знаю Java и Python, и я немного опасался изучения компьютерного языка.",
  "Это похоже на псевдоязык программирования, но на самом деле вы можете написать свой первый оператор SQL, как вы узнаете здесь, всего за пять минут или меньше.",
  "SQL, если честно, это один из тех языков, которые легко выучить и еще интереснее освоить.",
  "Я изучаю SQL 15 лет.",
  "Я учу его 10 лет.",
  "Как вы увидите в ходе некоторых из этих практических занятий, над которыми вы будете работать, вернуть данные из базы данных или набора данных очень просто.",
  "Просто выберите любые столбцы из любой базы данных, из которой вы извлекаете данные, и сразу же получите данные обратно.",
  "Теперь, действительно забавная часть на самом деле дразнит и говорит: «Интересно, если я изменю свой запрос, добавлю эти дополнительные столбцы, отфильтрую этот набор данных по-другому, поделюсь с моими коллегами».",
  "Он задуман как интерактивный язык запросов, а «запрос» означает «задавать вопрос». Если я могу бросить вам вызов, так это то, что синтаксис для понимания SQL, очень похожий на правила игры в шахматы, очень легко понять.",
  "Но сложная часть на самом деле заключается не в написании синтаксиса, как и в любом языке программирования, а в том, какой вопрос вы хотите задать своим данным?.",
  "Что бы я посоветовал вам сделать, так это быть очень любопытным к любому набору данных, который вам дают.",
  "Потратьте много времени, даже до того, как прикоснетесь к клавиатуре, на размышления о том, какой набор данных или какую информацию вы можете извлечь из этих данных.",
  "А потом начинай веселиться.",
  "Есть много разных способов написать одну и ту же правильную инструкцию SQL, поэтому попробуйте один из них, поделитесь им с друзьями, а затем начните возвращать эти данные обратно для анализа.",
  "Удачи.",
  "<a href=\"https://www.coursera.org/learn/process-data/lecture/xVA4Z/cleaning-string-variables-using-sql\">Удачи.</a>",
  "Очистка строковых переменных с помощью SQL.",
  "Это так здорово, что ты вернулся.",
  "Теперь, когда мы знаем некоторые базовые SQL-запросы и потратили некоторое время на работу с базой данных, давайте применим эти знания к чему-то еще, о чем мы говорили: к подготовке и очистке данных.",
  "Вы уже знаете, что очистка и завершение ваших данных перед их анализом является важным шагом.",
  "Итак, в этом видео я покажу вам, как SQL может помочь вам в этом, в том числе как удалить дубликаты, а также четыре функции, которые помогут вам очистить строковые переменные.",
  "Ранее мы рассмотрели, как удалить дубликаты в электронных таблицах с помощью инструмента «Удалить дубликаты».",
  "В SQL мы можем сделать то же самое, включив DISTINCT в наш оператор SELECT.",
  "Например, предположим, что компания, в которой мы работаем, проводит специальную акцию для клиентов в Огайо.",
  "Мы хотим получить идентификаторы клиентов, которые живут в Огайо.",
  "Но некоторая информация о клиенте вводилась несколько раз.",
  "Мы можем получить эти идентификаторы клиентов, написав SELECT customer_id FROM customer_data.customer_address.",
  "Этот запрос даст нам дубликаты, если они существуют в таблице.",
  "Если идентификатор клиента 9080 появляется в нашей таблице три раза, в наших результатах будет три таких идентификатора клиента.",
  "Но мы этого не хотим.",
  "Нам нужен список всех уникальных идентификаторов клиентов.",
  "Для этого мы добавляем DISTINCT в наш оператор SELECT, написав SELECT DISTINCT customer_id FROM customer_data.customer_address.",
  "Теперь идентификатор клиента 9080 будет отображаться в наших результатах только один раз.",
  "Возможно, вы помните, что мы уже говорили о текстовых строках как о группе символов в ячейке, обычно состоящей из букв, цифр или того и другого.",
  "Эти текстовые строки иногда нужно очищать.",
  "Возможно, они были введены по-разному в разных местах вашей базы данных, и теперь они не совпадают.",
  "В этих случаях вам нужно очистить их, прежде чем вы сможете их проанализировать.",
  "Итак, вот несколько функций, которые вы можете использовать в SQL для обработки строковых переменных.",
  "Вы могли узнать некоторые из этих функций, когда мы говорили о электронных таблицах.",
  "Теперь пришло время увидеть, как они работают по-новому.",
  "Получите набор данных, которым мы поделились прямо перед этим видео.",
  "И вы можете следовать шаг за шагом со мной в оставшейся части этого видео.",
  "Первая функция, которую я хочу вам показать, это LENGTH, с которой мы уже сталкивались.",
  "Если мы уже знаем длину, которой должны быть наши строковые переменные, мы можем использовать LENGTH для двойной проверки согласованности наших строковых переменных.",
  "Для некоторых баз данных этот запрос записывается как LEN, но делает то же самое.",
  "Допустим, мы работаем с таблицей customer_address из нашего предыдущего примера.",
  "Мы можем убедиться, что все коды стран имеют одинаковую длину, используя LENGTH для каждой из этих строк.",
  "Итак, чтобы написать наш SQL-запрос, давайте сначала начнем с SELECT и FROM.",
  "Мы знаем, что наши данные поступают из таблицы customer_address в наборе данных customer_data.",
  "Поэтому мы добавляем customer_data.customer_address после предложения FROM.",
  "Затем в SELECT мы напишем LENGTH, а затем столбец, который мы хотим проверить, страна.",
  "Чтобы напомнить себе, что это такое, мы можем пометить этот столбец в наших результатах как letter_in_country.",
  "Поэтому мы добавляем буквы AS_in_country после LENGTH (страна). В результате мы получаем список количества букв в каждой стране, перечисленных для каждого из наших клиентов.",
  "Кажется, что почти все они двойки, что означает, что поле страны содержит только две буквы.",
  "Но мы замечаем тот, у которого 3.",
  "Это не хорошо.",
  "Мы хотим, чтобы наши данные были непротиворечивыми.",
  "Итак, давайте проверим, какие страны были неправильно указаны в нашей таблице.",
  "Мы можем сделать это, поместив созданную нами функцию LENGTH(country) в предложение WHERE.",
  "Потому что мы говорим SQL отфильтровать данные, чтобы показать только клиентов, чья страна содержит более двух букв.",
  "Итак, теперь мы напишем SELECT country FROM customer_data.customer_address WHERE LENGTH(country) больше 2.",
  "Когда мы запустим этот запрос, мы теперь получим две страны, в которых количество букв больше, чем 2, которые мы ожидаем найти.",
  "Неправильно перечисленные страны отображаются как США вместо США.",
  "Если бы мы создали эту таблицу, мы могли бы обновить нашу таблицу, чтобы эта запись отображалась как США, а не как США.",
  "Но в данном случае мы не создавали эту таблицу, поэтому нам не следует ее обновлять.",
  "Нам все еще нужно решить эту проблему, чтобы мы могли получить список всех клиентов в США, включая двух, у которых США вместо США.",
  "Хорошая новость заключается в том, что мы можем учесть эту ошибку в наших результатах, используя функцию подстроки в нашем SQL-запросе.",
  "Чтобы написать наш SQL-запрос, давайте начнем с написания базовой структуры: SELECT, FROM, WHERE.",
  "Мы знаем, что наши данные поступают из таблицы customer_address из набора данных customer_data.",
  "Итак, мы вводим customer_data.customer_address после FROM.",
  "Затем мы сообщаем SQL, какие данные мы хотим, чтобы он нам предоставил.",
  "Нам нужны все клиенты в США по их идентификаторам.",
  "Поэтому мы вводим customer_id после SELECT.",
  "Наконец, мы хотим, чтобы SQL отфильтровывал только американских клиентов.",
  "Поэтому мы используем функцию подстроки после предложения WHERE.",
  "Мы собираемся использовать функцию подстроки для извлечения первых двух букв каждой страны, чтобы все они были согласованы и содержали только две буквы.",
  "Чтобы использовать функцию подстроки, нам сначала нужно сообщить SQL столбец, в котором мы обнаружили эту ошибку, страну.",
  "Затем мы указываем, с какой буквы начинать.",
  "Мы хотим, чтобы SQL извлек первые две буквы, поэтому мы начинаем с первой буквы, поэтому вводим 1.",
  "Затем нам нужно указать SQL, сколько букв, включая эту первую букву, нужно извлечь.",
  "Так как нам нужны первые две буквы, нам нужен SQL, чтобы получить всего две буквы, поэтому мы вводим 2.",
  "Это даст нам первые две буквы каждой страны.",
  "Нам нужны только США, поэтому мы установим эту функцию равной США.",
  "Когда мы запускаем этот запрос, мы получаем список всех идентификаторов клиентов, чья страна — США, включая клиентов, у которых было США вместо США.",
  "Просматривая наши результаты, кажется, что у нас есть пара дубликатов, где идентификатор клиента отображается несколько раз.",
  "Помните, как мы избавляемся от дубликатов?.",
  "Мы добавляем DISTINCT перед customer_id.",
  "Итак, теперь, когда мы запускаем этот запрос, у нас есть окончательный список идентификаторов клиентов, которые живут в США.",
  "Наконец, давайте проверим функцию TRIM, с которой вы сталкивались ранее.",
  "Это действительно полезно, если вы найдете записи с лишними пробелами и вам нужно удалить эти лишние пробелы для согласованности.",
  "Например, давайте проверим столбец состояния в нашей таблице customer_address.",
  "Точно так же, как мы сделали для столбца страны, мы хотим убедиться, что столбец штата имеет постоянное количество букв.",
  "Итак, давайте снова воспользуемся функцией LENGTH, чтобы узнать, есть ли у нас какое-либо состояние, состоящее из более чем двух букв, что мы и ожидаем найти в нашей таблице данных.",
  "Мы начинаем писать наш SQL-запрос, вводя базовую структуру SQL: SELECT, FROM, WHERE.",
  "Мы работаем с таблицей customer_address в наборе данных customer_data.",
  "Поэтому мы вводим customer_data.customer_address после FROM.",
  "Затем мы сообщаем SQL, что мы хотим, чтобы он извлек.",
  "Мы хотим, чтобы он выдавал нам любое состояние, состоящее из более чем двух букв, поэтому мы вводим состояние после SELECT.",
  "Наконец, мы хотим, чтобы SQL фильтровал состояния, содержащие более двух букв.",
  "Это условие записывается в предложении WHERE.",
  "Итак, мы вводим LENGTH(состояние), и оно должно быть больше 2, потому что мы хотим, чтобы состояния содержали более двух букв.",
  "Мы хотим выяснить, как выглядят неправильно перечисленные состояния, если они у нас есть.",
  "Когда мы запускаем этот запрос, мы получаем один результат.",
  "У нас есть одно состояние, которое имеет более двух букв.",
  "Но подождите, как это состояние, которое кажется состоящим из двух букв, О и Н для Огайо, может состоять из более чем двух букв?.",
  "Мы знаем, что символов больше двух, потому что мы использовали LENGTH(state) &gt; 2 в предложении WHERE при фильтрации результатов.",
  "Это означает, что дополнительные символы, которые подсчитывает SQL, должны быть пробелами.",
  "После H должен быть пробел.",
  "Здесь мы будем использовать функцию TRIM.",
  "Функция TRIM удаляет все пробелы.",
  "Итак, давайте напишем SQL-запрос, учитывающий эту ошибку.",
  "Допустим, нам нужен список всех идентификаторов клиентов, которые живут в «Огайо» для Огайо.",
  "Начнем с базовой структуры SQL: FROM, SELECT, WHERE.",
  "Мы знаем, что данные поступают из таблицы customer_address в наборе данных customer_data, поэтому мы вводим customer_data.customer_address после FROM.",
  "Затем мы сообщаем SQL, какие данные нам нужны.",
  "Мы хотим, чтобы SQL предоставил нам идентификаторы клиентов, проживающих в Огайо, поэтому мы вводим customer_id после SELECT.",
  "Поскольку мы знаем, что у нас есть несколько повторяющихся записей о клиентах, мы продолжим и введем DISTINCT перед customer_id, чтобы удалить любые повторяющиеся идентификаторы клиентов из наших результатов.",
  "Наконец, мы хотим, чтобы SQL предоставил нам идентификаторы клиентов, проживающих в Огайо.",
  "Мы просим SQL отфильтровать данные, поэтому это относится к предложению WHERE.",
  "Здесь мы будем использовать функцию TRIM.",
  "Чтобы использовать функцию TRIM, мы указываем SQL столбец, из которого мы хотим удалить пробелы, в нашем случае это состояние.",
  "И нам нужны только клиенты из Огайо, поэтому мы вводим = 'OH'. Вот и все.",
  "У нас есть все идентификаторы клиентов, проживающих в Огайо, включая клиентов с дополнительным пространством после кодировки H.",
  "Убедившись, что ваши строковые переменные полны и непротиворечивы, вы впоследствии сэкономите много времени, избегая ошибок или просчетов.",
  "Вот почему мы очищаем данные в первую очередь.",
  "Надеемся, что такие функции, как длина, подстрока и обрезка, предоставят вам инструменты, необходимые для начала работы со строковыми переменными в ваших собственных наборах данных.",
  "Далее мы рассмотрим некоторые другие способы работы со строками и более сложные функции очистки.",
  "После этого вы будете готовы начать работать с SQL самостоятельно.",
  "До скорой встречи.",
  "<a href=\"https://www.coursera.org/learn/process-data/lecture/OlLEQ/advanced-data-cleaning-functions-part-1\">До скорой встречи.</a>",
  "Расширенные функции очистки данных, часть 1.",
  "Привет и добро пожаловать обратно.",
  "До сих пор мы рассмотрели некоторые основные SQL-запросы и функции, которые могут помочь вам очистить ваши данные.",
  "Мы также проверили некоторые способы работы со строковыми переменными в SQL, чтобы упростить вашу работу.",
  "Приготовьтесь узнать больше о функциях для работы со строками в SQL.",
  "Поверьте мне, эти функции будут очень полезны в вашей работе в качестве аналитика данных.",
  "В этом видео мы еще раз проверим строки и узнаем, как использовать функцию CAST для правильного форматирования данных.",
  "Когда вы импортируете данные, которых еще нет в ваших таблицах SQL, типы данных из нового набора данных могут быть импортированы неправильно.",
  "Вот где функция CAST пригодится.",
  "По сути, CAST можно использовать для преобразования чего угодно из одного типа данных в другой.",
  "Давайте проверим пример.",
  "Представьте, что мы работаем с мебельным магазином Лорен.",
  "Владелец собирал данные о транзакциях за последний год, но только что обнаружил, что они не могут на самом деле организовать свои данные, потому что они были неправильно отформатированы.",
  "Мы поможем ей, преобразовав наши данные, чтобы они снова стали полезными.",
  "Например, предположим, что мы хотим отсортировать все покупки по цене_покупки в порядке убывания.",
  "Это означает, что мы хотим, чтобы самая дорогая покупка отображалась первой в наших результатах.",
  "Чтобы написать SQL-запрос, мы начнем с базовой структуры SQL.",
  "ВЫБЕРИТЕ, ОТКУДА, ОТКУДА.",
  "Мы знаем, что данные хранятся в таблице customer_purchase в наборе данных customer_data.",
  "Пишем customer_data.customer_purchase после FROM.",
  "Далее мы сообщаем SQL, какие данные нам предоставить в предложении SELECT.",
  "Мы хотим увидеть данные Purchase_Price, поэтому мы вводим Purchase_Price после SELECT.",
  "Далее следует предложение WHERE.",
  "Мы не фильтруем какие-либо данные, так как хотим, чтобы отображались все закупочные цены, чтобы мы могли удалить предложение WHERE.",
  "Наконец, чтобы отсортировать цену_покупки в порядке убывания, мы вводим ORDER BY Purchase_price, DESC в конце нашего запроса.",
  "Давайте запустим этот запрос.",
  "Мы видим, что 89,85 находится вверху, а 799,99 ниже него.",
  "Но мы знаем, что 799,99 больше, чем 89,85.",
  "База данных не распознает, что это числа, поэтому не сортирует их таким образом.",
  "Если мы вернемся к таблице customer_purchase и посмотрим на ее схему, мы увидим, какой тип данных эта база данных считает ценой подчеркивания покупки.",
  "Здесь говорится, что база данных считает цену подчеркивания покупки строкой, хотя на самом деле это число с плавающей запятой, содержащее десятичную дробь.",
  "Вот почему 89,85 появляется раньше 799,99.",
  "Когда мы начинаем буквы, мы начинаем с первой буквы, прежде чем перейти ко второй букве.",
  "Если мы хотим отсортировать слова яблоко и апельсин в порядке убывания, мы начинаем с первых букв а и о.",
  "Так как о идет после а, сначала появится апельсин, а затем яблоко.",
  "База данных сделала то же самое с 89,85 и 799,99.",
  "Он начинался с первой буквы, которая в данном случае была 8 и 7 соответственно.",
  "Поскольку 8 больше 7, база данных сначала отсортировала 89,85, а затем 799,99.",
  "Поскольку база данных обрабатывала их как текстовые строки, база данных не распознавала эти строки как числа с плавающей запятой, потому что они еще не были преобразованы для соответствия этому типу данных.",
  "Приведение типов означает преобразование данных из одного типа в другой, что мы и будем делать с помощью функции CAST.",
  "Мы используем функцию CAST, чтобы заменить покупку_цены на новую цену_покупки, которую база данных распознает как число с плавающей запятой, а не как строку.",
  "Начнем с замены Purchase_price на CAST.",
  "Затем мы сообщаем SQL поле, которое мы хотим изменить, а именно поле Purchase_price.",
  "Далее следует тип данных, на который мы хотим изменить Purchase_price, который является типом данных с плавающей запятой.",
  "BigQuery хранит числа в 64-битной системе.",
  "Тип данных float упоминается в нашем запросе как float64.",
  "Это может немного отличаться от других платформ SQL, но в основном 64 и float64 просто указывают, что мы приводим числа в 64-битной системе как числа с плавающей запятой.",
  "Нам также нужно отсортировать это новое поле, поэтому мы меняем Purchase_price после ORDER BY на CAST подчеркивание цены покупки как float64.",
  "Вот как мы используем функцию CAST, чтобы позволить SQL распознавать столбец Purchase_price как число с плавающей запятой, а не как текстовые строки.",
  "Теперь мы можем начать наши покупки по Purchase_price.",
  "Точно так же в мебельном магазине Лорен есть данные, которые действительно можно использовать для анализа.",
  "Как аналитику данных, вас часто будут просить находить и упорядочивать данные, поэтому вы должны заранее убедиться, что выполняете преобразование между типами данных.",
  "Такие компании, как наш мебельный магазин, заинтересованы в своевременных данных о продажах, и вы должны учитывать это в своем анализе.",
  "Функцию CAST можно использовать для преобразования строк в другие типы данных, например дату и время.",
  "Как аналитик данных, вы можете столкнуться с тем, что используете данные из разных источников.",
  "Частью вашей работы является обеспечение того, чтобы данные из этих источников были распознаваемыми и пригодными для использования в вашей базе данных, чтобы у вас не возникло никаких проблем с вашим анализом.",
  "Теперь вы знаете, как это сделать.",
  "Функция CAST — отличный инструмент, который вы можете использовать при очистке данных.",
  "Далее мы рассмотрим некоторые другие расширенные функции, которые вы можете добавить в свой набор инструментов.",
  "До скорой встречи.",
  "<a href=\"https://www.coursera.org/learn/process-data/lecture/BIh2D/advanced-data-cleaning-functions-part-2\">До скорой встречи.</a>",
  "Расширенные функции очистки данных, часть 2.",
  "Привет.",
  "Здорово видеть вас снова.",
  "До сих пор мы видели некоторые функции SQL в действии.",
  "В этом видео мы рассмотрим другие варианты использования CAST, а затем узнаем о CONCAT и COALESCE.",
  "Давайте начнем.",
  "Ранее мы говорили о функции CAST, которая позволяет приводить текстовые строки к типам с плавающей запятой.",
  "Я сказал, что функцию CAST можно использовать и для преобразования в другие типы данных.",
  "Давайте рассмотрим еще один пример того, как вы можете использовать CAST в своей работе с данными.",
  "У нас есть данные транзакций, с которыми мы работали, из нашего примера мебельного магазина Лорен.",
  "Но теперь мы проверим поле даты покупки.",
  "Владелец мебельного магазина попросил нас просмотреть покупки, совершенные в декабре в период распродаж.",
  "Давайте напишем SQL-запрос, который будет извлекать дату и цену_покупки для всех покупок, совершенных в период с 1 декабря 2020 года по 31 декабря 2020 года.",
  "Начнем с написания базовой структуры SQL: SELECT, FROM и WHERE.",
  "Мы знаем, что данные поступают из таблицы customer_purchase в наборе данных customer_data, поэтому мы пишем customer_data.customer_purchase после FROM.",
  "Затем мы сообщаем SQL, какие данные нужно извлечь.",
  "Поскольку нам нужны дата и цена_покупки, мы добавляем их в инструкцию SELECT.",
  "Наконец, мы хотим, чтобы SQL отфильтровывал покупки, совершенные только в декабре.",
  "Мы вводим дату МЕЖДУ «2020-12-01» И «2020-12-31» в предложении WHERE.",
  "Запустим запрос.",
  "В декабре было совершено четыре покупки, но поле даты выглядит странно.",
  "Это связано с тем, что база данных распознает это поле даты как дату и время, которое состоит из даты и времени.",
  "Наш SQL-запрос по-прежнему работает правильно, даже если поле даты содержит дату и время, а не дату.",
  "Но мы можем указать SQL преобразовать поле даты в тип данных даты, чтобы мы видели только день, а не время.",
  "Для этого мы снова используем функцию CAST().",
  "Мы будем использовать функцию CAST(), чтобы заменить поле даты в нашем операторе SELECT новым полем даты, которое будет показывать дату, а не время.",
  "Мы можем сделать это, набрав CAST() и добавив дату в качестве поля, которое мы хотим изменить.",
  "Затем мы указываем SQL тип данных, который нам нужен вместо этого, который является типом данных даты.",
  "Там.",
  "Теперь мы можем получить более точные результаты для покупок, совершенных в период распродаж в декабре.",
  "CAST — очень полезная функция для очистки и сортировки данных, поэтому я хотел, чтобы вы еще раз увидели ее в действии.",
  "Далее, давайте проверим функцию CONCAT.",
  "CONCAT позволяет объединять строки для создания новых текстовых строк, которые можно использовать в качестве уникальных ключей.",
  "Возвращаясь к нашей таблице customer_purchase, мы видим, что в мебельном магазине продаются разные цвета одного и того же товара.",
  "Владелец хочет знать, предпочитают ли покупатели определенные цвета, чтобы он мог соответствующим образом управлять запасами в магазине.",
  "Проблема в том, что product_code один и тот же, независимо от цвета товара.",
  "Нам нужно найти другой способ разделения товаров по цвету, чтобы мы могли сказать, предпочитают ли покупатели один цвет другим.",
  "Мы будем использовать CONCAT для создания уникального ключа, который поможет нам различать продукты по цвету и легче их подсчитывать.",
  "Давайте напишем наш SQL-запрос, начав с базовой структуры: SELECT, FROM и WHERE.",
  "Мы знаем, что наши данные поступают из таблицы customer_purchase и набора данных customer_data.",
  "Мы вводим «customer_data.customer_purchase» после FROM. Затем мы сообщаем SQL, какие данные извлекать.",
  "Здесь мы используем функцию CONCAT(), чтобы получить этот уникальный ключ продукта и цвета.",
  "Итак, мы набираем CONCAT(), первый столбец, который нам нужен, product_code и другой столбец, который нам нужен, product_color.",
  "Наконец, предположим, что мы хотим посмотреть на кушетки, поэтому мы фильтруем кушетки, набрав product = 'couch' в предложении WHERE.",
  "Теперь мы можем подсчитать, сколько раз каждый диван был куплен, и выяснить, предпочитали ли покупатели один цвет другим.",
  "С помощью CONCAT мебельный магазин может узнать, какой цвет кушеток наиболее популярен, и заказать больше.",
  "У меня есть последняя расширенная функция, которую я хочу вам показать, COALESCE.",
  "COALESCE может использоваться для возврата ненулевых значений в списке.",
  "Нулевые значения являются отсутствующими значениями.",
  "Если у вас есть поле, которое является необязательным в вашей таблице, оно будет иметь значение null в этом поле для строк, которые не имеют подходящих значений для помещения туда.",
  "Давайте откроем таблицу customer_purchase, чтобы я мог показать вам, что я имею в виду.",
  "В таблице customer_purchase мы видим пару строк, в которых отсутствует информация о продукте.",
  "Вот почему мы видим там нули.",
  "Но для строк, где имя продукта равно null, мы видим, что есть данные product_code, которые мы можем использовать вместо этого.",
  "Мы бы предпочли, чтобы SQL показывал нам название продукта, например кровать или диван, потому что нам легче его читать.",
  "Но если название продукта не существует, мы можем указать SQL, чтобы вместо этого он предоставил нам product_code.",
  "Именно здесь в игру вступает функция COALESCE.",
  "Допустим, нам нужен список всех проданных товаров.",
  "Мы хотим использовать столбец product_name, чтобы понять, какой продукт был продан.",
  "Мы пишем наш SQL-запрос с базовой структурой SQL: Select, From и Where.",
  "Мы знаем, что наши данные поступают из таблицы customer_purchase и набора данных customer_data.",
  "Мы вводим «customer_data.customer_purchase» после FROM.",
  "Затем мы сообщаем SQL данные, которые нам нужны.",
  "Нам нужен список названий продуктов, но если названия недоступны, дайте нам код продукта.",
  "Здесь мы набираем «COALESCE». затем мы сообщаем SQL, какой столбец проверять первым, product, и какой столбец проверять вторым, если первый столбец имеет значение null, product_code.",
  "Мы назовем это новое поле как product_info.",
  "Наконец, мы не фильтруем никакие данные, поэтому можем убрать предложение WHERE.",
  "Это дает нам информацию о продукте для каждой покупки.",
  "Теперь у нас есть список всех продуктов, которые были проданы, чтобы владелец мог просмотреть их.",
  "COALESCE также может сэкономить ваше время при выполнении расчетов, пропуская любые нулевые значения и сохраняя правильность математических расчетов.",
  "Это лишь некоторые из расширенных функций, которые вы можете использовать для очистки данных и подготовки их к следующему шагу в процессе анализа.",
  "Вы узнаете больше, продолжая работать с SQL.",
  "Но это конец этого видео и этого модуля.",
  "Отличная работа.",
  "Мы покрыли много земли.",
  "Вы узнали о различных функциях очистки данных в электронных таблицах и SQL, а также о преимуществах использования SQL для работы с большими наборами данных.",
  "Мы также добавили в ваш инструментарий некоторые формулы и функции SQL, и, что наиболее важно, мы узнали, как SQL может помочь вам подготовить данные для анализа.",
  "После этого вы потратите некоторое время на изучение того, как проверять и сообщать о результатах очистки, чтобы ваши данные были безупречно чистыми, и ваши заинтересованные стороны знали об этом.",
  "Но перед этим у вас есть еще одно еженедельное задание.",
  "У вас есть это.",
  "Некоторые из этих концепций поначалу могут показаться сложными, но они станут вашей второй натурой по мере продвижения по карьерной лестнице.",
  "Просто нужно время и практика.",
  "Говоря о практике, не стесняйтесь вернуться к любому из этих видео и пересмотреть или даже попробовать некоторые из этих команд самостоятельно.",
  "Удачи.",
  "Увидимся снова, когда ты будешь готов."
]
WA4E / HTML - HyperText Markup Language (Part 1)5m.
Здравствуйте и добро пожаловать на нашу лекцию по HTML, язык гипертекстовой разметки.
Так что я собираюсь поместить это в контекст нашего цикла запроса-ответа, и вроде как мы в цикле запроса-ответа в нашем браузере и то, что мы видим.
Мы делаем клик, он идет по сети на веб-сервер, запускает код, может быть, разговаривает с базой данных, форматирует некоторые новые вещи, и мы получаем ответ.
Затем выходит HTML, , а затем анализируется, чтобы сделать DOM и то, что мы видим, является объектной моделью документа.
И мы будем игнорировать большую часть этого в этой лекции.
Мы действительно будем говорить только о этой части здесь, и это то, что это ответ.
Это HTML, и он анализируется и он прочитан, и он используется для построить объектную модель документа, , которая затем показывает, что мы видим.
И поэтому HTML - это просто техника использования некоторых специальных символов, меньше и больше, для добавления тегов, чтобы указать, что мы хотим видеть, , как тег абзаца.
Тег абзаца, это тег абзаца, сильный тег делает вещи жирным, подчеркивать тег и тег абзаца.
И поэтому у нас есть эти теги, и мы просто помечаем, мы общаемся смысл.
Если вы достаточно стары, чтобы помнить, старые текстовые процессоры использовали способы посмотреть на фактические коды, которые хранились в файле текстового процессора.
Таким образом, Интернет, HTML и гипертекстовый транспортный протокол и все это является относительно недавним изобретением , и мы делаем так много крутых вещей с ним.
Он постоянно развивается, и на самом деле нам меньше 20 лет, , но мы так много делаем с ним, что он постоянно развивается.
Таким образом, HTML и CSS действительно находятся на краю.
Оглядываясь назад в первые дни, если мы посмотрим на то, что на самом деле должен был сделать HTML, он работал на компьютере NeXT в начале 1990-х годов.
И вот это браузер NEXT, который пришел из ЦЕРН.
И у него было все в новом окне, изображения не показывались встроенно.
А затем появился браузер NCSA Mosaic, , который был первым браузером , который был универсально доступен на Unix, Windows и Macintosh.
И вы видите такие вещи, как серый фон и синие ссылки и выделенные ссылки, которые вы посетили в фиолетовом.
И поэтому в первые дни это было не так, как мы видим сегодня.
В первые дни мы были просто поражены и счастливы , что мы могли увидеть ссылку, и вы бы кликнули на ссылку, и что-то случится.
Но сегодня деньги должны быть сделаны на основе того, чтобы сделать вещи супер красивым и количество пикселей и как вещи выстраиваются и как вещи толкаются над и как выглядит навигация.
И поэтому сегодня нам нужно создавать красивые веб-страницы, в то время как в старые времена мы были просто поражены тем, что в первую очередь работали веб-страницы 
И, конечно, компьютеры стали намного быстрее, способны обрабатывать видео и изображения.
В прежние времена изображения были дорогостоящими, как для пропускной способности сети, так и для время, которое потребовалось вашим компьютером, чтобы отобразить их, и так, что просто повлияло на то, как мы это сделали.
И это довольно весело использовать Wayback Machine, иначе известный как Интернет Архив, , чтобы вернуться и посмотреть на некоторые из этих старых веб-страниц и понять, что это все еще удивительно, что многие из них в значительной степени работают.
И в старые добрые времена HTML был своего рода диким Западом.
Браузеры не хотели показывать сломанный HTML как сломанный HTML и поэтому они компенсировали его.
И так в старые времена у нас были вещи, такие как теги, которые могут быть прописными, у нас был бы тег абзаца, который не заканчивался, у нас были бы теги li, которые не заканчивались, бы у нас были атрибуты, которые у нас даже не было двойных кавычек в них.
Так было все виды вещи, и буквально вы могли бы взять эту плохую страницу, и вы могли бы поместить ее в веб-браузер, и она все равно будет отображаться.
Таким образом, HTML, хотя технически это очень точный язык, и вы можете делать синтаксические ошибки, браузеры чрезвычайно гибки с точки зрения его разбора.
Теперь вы не получите предсказуемых результатов, браузеры могут перейти в так называемый режим причуд.
И поэтому для того, чтобы создать среду стандартов, что у нас есть сегодня, Тим Бернерс-Ли, один из первоначальных основателей всемирной паутины, помог найти организацию под названием both World Wide Web консорциум или W3C, и он он действительно решил, что вместо того, чтобы просто позволить люди написать браузер и иметь HTML быть определен браузером, вместо этого они будут писать спецификацию для того, что был HTML, а затем несколько поставщиков могли производить браузеры.
И потребовалось некоторое время, чтобы это стало успешным, но для каждого поставщика требовалось создать веб-браузер и , чтобы они работали с Консорциумом World Wide Web.
И как в середине и конце 90-х, '95, хорошо '94 по '98, '99, Консорциум World Wide Web создал много замечательных стандартов во всемирной паутине.
Теперь, как только мы начали иметь правила, тогда мы склонны следовать этим правилам.
И поэтому теги должны быть строчными, атрибуты, такие как этот источник изображения равны должны иметь двойные кавычки вокруг них, у вас должны быть открытые теги и закрытые теги.
И так есть набор правил , и теперь мы гораздо точнее о нашем HTML.
Мы пытаемся написать его как можно точнее, чтобы мы получили лучшую производительность и лучший вид рендеринга из браузеров, которые мы можем получить.
Потому что, если вы не пишете точный HTML, , то браузеры будут принимать решения о том, как визуализировать вещи, тогда как , если вы пишете точный HTML, , то вы действительно контролируете, как браузер выкладывает вещи.
Итак, дальше мы поговорим о самом HTML, посмотрим на некоторые HTML-документы, и посмотрим на синтаксис HTML.
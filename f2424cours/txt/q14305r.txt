Widely used SQL queries6m.
Привет, с возвращением.
До сих пор мы узнали, что SQLнекоторые из тех же инструментов, что и электронные таблицы,но в гораздо большем масштабе.
В этом видео мы узнаем некоторыенаиболее широко используемые SQL-запросы, которые вы можетеначните использовать для собственной очистки данныхи конечный анализ.
Давайте начнем.
Мы говорили о запросах как о запросах, которые вы вкладываете вбазу данных, чтобы попросить ее сделать что-то для вас.
Запросы — важная часть использования SQL.
В конце концов, это язык структурированных запросов.
Запросы могут помочь вам сделать много вещей,но есть некоторые общие, которые аналитики данныхиспользовать все время.
Итак, давайте начнем с этого.
Сначала я покажу вам, как использовать запрос SELECT.
Я назвал это раньше,но теперь я добавлю кое-что новое, чтобы мы могли попробовать.
Прямо сейчас просмотрщик таблиц пустпотому что мы еще ничего не вытащили из базы данных.
В этом примере магазин, в котором мы работаемс проводит розыгрышдля клиентов в определенных городах.
У нас есть база данных, содержащаяинформацию о клиентах, которую мы можем использовать длясузить, какие клиенты имеют право нараздача.
Давайте сделаем это сейчас.
Мы можем использовать SELECT, чтобы указатьименно с какими данными мы хотим взаимодействовать в таблице.
Если мы объединим SELECT с FROM,мы можем получить данные из любой таблицы вэту базу данных до тех пор, пока онизнать, как называются столбцы и строки.
Мы можем захотеть получить данные оимена клиентов и города из одной из таблиц.
Для этого мы можем ввести SELECT имя, запятую,город ИЗданные подчеркивания клиента точка адрес подчеркивания клиента.
Чтобы получить эту информацию оттаблица адресов подчеркивания клиента,который живет в данных подчеркивания клиента, наборе данных.
SELECT и FROM помогают указатькакие данные мы хотим извлечь из базы данных и использовать.
Мы также можем вставить новые данные вбазу данных или обновить существующие данные.
Например, может быть, у нас естьновый клиент, которого мы хотим вставить в эту таблицу.
Мы можем использовать INSERT INTOзапрос, чтобы ввести эту информацию.
Давайте начнем с того, куда мы пытаемся вставить эти данные,таблица адресов подчеркивания клиентов.
Мы также хотим указать, какие столбцы мы добавляемэти данные, введя их имена в скобках.
Таким образом, SQL может сообщить базе данныхименно там, где мы вводили новую информацию.
Затем мы скажем ему, какие значения мы вставляем.
Запустите запрос и просто так,он добавил его в нашу таблицу для нас.
Теперь, скажем, нам просто нужноизменить адрес клиента.
Что ж, мы можем сказать базе данных обновить ее для нас.
Для этого нам нужно сказать, что мы пытаемсядля обновления таблицы адресов клиентов с подчеркиванием.
Тогда мы должны сообщить об этомкакое значение мы пытаемся изменить.
Но мы также должны сказатьэто то, где мы вносим это изменениеспециально, чтобы не былоизменить каждый адрес в таблице.
Там.
Теперь адрес этого одного клиента был обновлен.
Если мы хотим создать новую таблицу для этой базы данных,мы можем использовать оператор CREATE TABLE IF NOT EXISTS.
Имейте в виду, просто запустив SQL-запросна самом деле не создает таблицу для данных, которые мы извлекаем.
Он просто сохраняет его в нашей локальной памяти.
Чтобы сохранить его, нам нужно загрузить его кактаблицу или сохранить результат в новую таблицу.
Как аналитик данных,есть несколько ситуацийгде вам может понадобиться сделать именно это.
Это действительно зависит откакие данные вы извлекаете и как часто.
Если вы используете только общее количество клиентов,вам, вероятно, не нужен файл CSVили новую таблицу в вашей базе данных.
Если вы используете общее количество клиентов в деньсделать что-то вроде трекаакция выходного дня в магазине,вы можете загрузить эти данные какфайл CSV, чтобы вы могли визуализировать его в электронной таблице.
Но если вас попросят вытащитьэта тенденция на регулярной основе,вы можете создать таблицу, которая будетавтоматически обновляться с написанным вами запросом.
Таким образом, вы можете напрямую загрузитьрезультаты всякий раз, когда они вам нужны для отчета.
Еще одна хорошая вещь, которую следует иметь в виду,если вы создаете много таблиц в базе данных,вы захотите использоватьоператор DROP TABLE IF EXISTSубирать за собой.
Это хорошее домашнее хозяйство.
Вы, вероятно, не будете удалятьсуществующие таблицы очень часто.
В конце концов, это данные компании, иты не хочешь удалятьважные данные из своей базы данных.
Но вы можете убедиться, что убираететаблицы, которые вы лично сделали так, чтобынет старых или неиспользуемых таблиц сизбыточная информация, загромождающая базу данных.
Там.
Теперь вы видели некоторые изнаиболее широко используемые запросы SQL в действии.
Для вас определенно есть больше ключевых слов запросаучиться и уникальные комбинацииэто поможет вам работать с базами данных.
Но это отличное место для начала.
Далее мы узнаем еще больше о запросах вSQL и как их использовать дляочистить наши данные.
Увидимся в следующий раз.
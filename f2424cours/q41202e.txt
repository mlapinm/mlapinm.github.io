Understanding the DJ4E Autograder9m.
Hello and welcome to another walkthrough for Django for Everybody.
Today, I'm going to actually sort of fast forward a little bit into the future and talk a little bit about how the autograder works.
I'm going to go about to the middle of the course and show you an application that you're going to be working on called the Autos CRUD Application.
And Autos CRUD is kind of our destination.
The idea is that it's got to create, update, and delete.
And it talks about login, et cetera, et cetera.
I'll take a look at the assignment for this.
It tells you how to log in to this.
You're going to have to make your own account, and this is your assignment, and there's a lot to this assignment.
I want to point out to you that one of the things that we always encourage you to do before you submit to the autograder is to do your own testing, okay?
So let's just just do some testing here.
Let's run this program, the sample implementation.
It's going to log in, add a make, add an auto, view the makes.
And it's going to log in dj4e-crud and there's a password there, and so we'll go to the Autos one.
Let's add a make.
So we're going to do a Dodge.
Let's add the make.
So we're kind of running through this manual test, then add an auto selecting the make, add an auto, Neon 1, 1234, some comments, pick the make Dodge And this is code.
It can break, right?
Now view the makes, update the make and press Cancel.
It should go back to the list.
So what I've given you on a lot of these more complex assignments is an outline of things that you should test, right?
And then if you update this and I'm going to update the makes, I've got to view the makes, I got to update to makes, I'm going to say Dodge exclamation point, and submit it and you'll notice that this changed automatically because if there's normal form, and all that stuff.
You're supposed to write this code and then submit this to the autograder.
So the way the autograder works is you're going to submit it, so you're going to get your homework all done and you're going to test it, and then you're going to submit it to the autograder, and then you'll say\"Evaluate\" Now one thing you'll notice is this takes a little while, and that's because this is doing a whole bunch of request-response cycles.
So let me just show you.
And if it's good, it tells you\"I like this, I like this, I like that, I like that\" and then it figures out your score.
And you can see the pages that it's actually retrieving by looking at this Show/Hide Retrieved Page.
So let me just kind of show you a little picture of what's going on.
So normally you're sitting here, and you've got your browser and you're using PythonAnywhere and you're writing code and you're testing code, right?
You're the testing the code in the browser, just like I was doing here.
That's just me in my browser and I'm doing stuff, and I'm working in PythonAnywhere.
Let's go ahead and make a console in PythonAnywhere, and I'll say,\"workon django3\" because I always say that.
And I'm going to go on to cd django projects and cd crud.
And so here's my code for crud.
That's the code that I've got for crud.
You might be doing this with your full-screen editor, but I am basically at this point, I am working up here where I'm in my browser, and I'm working on PythonAnywhere and I'm making changes, and I'm testing those changes in another tab, right?
So the code that I'm running is running right here.
So let me just make a little mistake here.
autos/urls.
py and let's just break both the update and the delete.
I'm commenting these paths out, and then I'm going to go to my web tab, click\"We\",\"Open in New Ta\", and I've got to reload, so I'm going to reload crud.
I just messed my code up, right?
The code is mostly working, but when I click the Update like add a make is going to work.
I can make a Ford.
That part is working.
But as soon as I hit this Update button oh wait, what happened.
Oh no, it's the makes that I broke.
Sorry, I broke the makes.
Now when I update this one, it's going to blow up.
I meant to break it.
So what will happen here is I'm breaking it.
I'm talking up here to the system.
If I go and I run this in the autograder now, this dj4e.
com is going to make requests to PythonAnywhere and get answers back.
And sometimes it likes the pages that it gets and sometimes it doesn't.
The safest thing to do is test it by hand.
But now if I go back to the autograder.
I saw this error, and what I should do is fix the error.
But now I'm going to go to the autograder, and I'm going to rerun the autograder.
And again, this takes a while and the more steps the autograder is taking, the longer it's going to take.
Sometimes it will take about 20 seconds.
So I think it's done.
So now I can see it's doing good, it logged in, it added a make, it's deleting makes, it's doing something.
Oh look, here we go.
Page may have errors, HTTP status 404, did not find a form with a Submit button.
Now, you could just call your teaching assistant or me and say,\"what's wrong\" Or you can click this button called Show and Hide Retrieved Page.
And now it's saying,\"look, the autograder is looking at this page\" This is the exact URL that it's looking at.
You can even click and you can open that URL.
You'll see it's exactly this URL.
And so what you need to do is then you need to fix your application, which I'm going to do right now.
I'm going to undo these, come back.
Undo, undo, save that, and then I'm going to reload my application because I know I'm going to fix it.
It takes a moment.
So now that I've put those routes back in, this update will work.
Now that code works, and if I run the autograder, because I got this thing to rerun the same test, you can redo it.
So then it's running the test, running the test, running the test, and now it's done.
So now it made it past.
It's all green, it's all green, it's all green, and we got a good score.
So the key thing is to get used to this idea that you should test your code, run through all the scenarios.
When you run the autograder, it will take some time because it's actually doing all of the things.
It's pretending to be a browser, dj4e.
com is pretending to be a browser in order to test your URL.
And then at some point, if it has made it through all the tests it wants to do, then it sends the grade to the appropriate gradebook inside the Learning Management System.
But the key thing is to get used to the idea that scroll to the bottom, look for what went wrong, and then see what it was that it was seeing.
This particular one is working and you can see it.
And the autograder is not trying to trick you, and it's not trying to mislead you.
The autograder is, as best I can do it, telling you everything it's doing, everything it's looking for, and when it can't find something, it shows you the page that it was looking at and that page wasn't right.
Okay?
So you'll get used to the autograder.
It's a good helper and a good friend.
Make sure to look for the manual testing section in your assignments and do the manual tests.
It will save you a lot of time and it's just easier to fix your application by running your application yourself, and then making changes to your application and then reloading your application and away you go.
So I hope this little summary of how the autograder works has been useful to you.
Cheers.
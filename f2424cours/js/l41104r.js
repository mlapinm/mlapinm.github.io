var l41104r = [
"Network Sockets and Connections6m.",
"Таким образом, сетевые сокеты как телефонные звонки для компьютеров, и буквально в 1960-х годах, когда они были проектируя концепцию сетевого программного обеспечения, это концепция, которую они придумали.",
"И это то, что в некотором смысле мы звоним, разговариваем по телефону и вешаем трубку.",
"И когда компьютеры собирались делиться данными, а некоторые компьютеры были собирались иметь данные, а другие компьютеры собирались в хотят данные, они думали, о, ой, способ сделать это не обязательно иметь постоянную связь с этими данными, компьютеров и так много источников данных, и так много компьютеров, которые хотят потреблять эти данные.",
"И, конечно, в 1960, у них не было воображения, что будут миллиарды, они просто думали, что будет 10 000, и они думали, что это много.",
"Но они придумали протокол, который в основном сказал, что когда у вас нет постоянного, постоянного доступа к данным, вы действительно делаете телефонный звонок.",
"Вы знаете, где данные, вы вроде как говорите, вы набираете, вы хватаете вещи, вы получаете их обратно, , а затем отпускаете соединение.",
"Это означает, что с миллиардами компьютеров каждый разговаривает друг с другом, сеть не так сложна.",
"И вот это соединение, разговор, отключение.",
"Подключайтесь, говорите, отключитесь.",
"И это то, как телефонная система в наш мир масштабируется для всех людей, и это то, как Интернет масштабируется до всех людей, которые хотят использовать этот Интернет.",
"Таким образом, это делается внутри программного обеспечения, используя абстракцию или библиотеку, называемую сокетами, и сокетами действительно являются компьютерные телефонные звонки.",
"Вы знаете, куда вы собираетесь звонить, вы можете начать звонок, ждать, пока они ответят, как только они ответят, есть двусторонняя связь.",
"Это похоже на файл, за исключением того, что вы можете одновременно читать из файла и записывать из файла.",
"Хотя это важно для двух сотрудничающих частей программного обеспечения знать, кто будет читать первым, и кто будет писать первым, , потому что это как если бы, когда вы выбираете телефон после того, как он звонит, И это своего рода протокол.",
"Кто говорит первым, это протокол.",
"А потом человек говорит: «Кто это?» А потом разговоры происходят довольно естественно.",
"Кто-то говорит, слушает, кто-то говорит, слушает, и это работает, но есть сложные протоколы.",
"И вы можете думать об этом не обязательно как браузер на вашем ноутбуке или телефоне как разговаривать с данными на сервере, он на самом деле разговаривает с другой программой.",
"Так что даже когда он просто извлекает файл, он разговаривает с приложением на этом сервере, и это приложение считывает файл и отправляет его.",
"И мы увидим, что в конце концов, как мы должны это сделать, , когда мы делаем такие вещи, как загрузка фотографий.",
"Мы загружаем фотографии, а затем мы должны фактически служить их обратно.",
"Мы не можем просто сказать: «О, фотографии есть, вы можете их захватить», потому что иногда не каждый может увидеть каждую картину.",
"И так часть программного приложения решает, если вам разрешено увидеть эту картинку, я пришлю его.",
"Если вам не позволено видеть картинку, я не отправлю ее.",
"И вот где это часть программного обеспечения, о которой вы говорите , даже если вы смотрите на картинку.",
"Иногда это программное обеспечение действительно простое , и вы едва заметили это, но есть программное обеспечение в цикле, это не похоже на то, что вы просто идете прямо к данным.",
"Это действительно две части компьютерного программного обеспечения разговаривают друг с другом, и мы используем Интернет как , что посредник, чтобы позволить этому разговору случиться.",
"Так что, если вы прочитали мою книгу о TCP/IP, , вы узнаете об этом очень подробно, , но у каждого компьютера есть IP-адрес.",
"Это число.",
"Есть два вида адресов, есть IPv4 и IPv6.",
"IPv4, версия 4, является , который имеет четыре пунктирных номера, например 142.",
"16.",
"42.",
"114, , но внутри каждого из них есть , что называется номером TCP порта.",
"И поскольку вся эта интернет-штука - это приложения, говорящие с приложениями, нам нужно иметь хороший способ , чтобы узнать, с каким приложением мы говорим, и именно там приходят номера портов TCP.",
"И вы можете думать об этом как о расширении телефона.",
"Итак, у вас есть номер телефона, а затем у вас есть расширение 1436.",
"И поэтому номера портов TCP такие.",
"Таким образом, мы не можем конкретный адрес для каждого приложения, , но приложение имеет адрес и порт в пределах этого адреса, или номер телефона и расширение внутри этого номера телефона.",
"И чтобы вы могли посмотреть на эти вещи.",
"Порт 25 используется для связи между серверами электронной почты.",
"В старые времена мы использовали эту вещь под названием telnet, мы поговорим об этом, на порту 23.",
"Итак, клиент на правой стороне, , и это может быть компьютер , где у вас есть клавиатура, и это вы, или это может быть сервер, у которого есть какая-то почта, которая пересылается откуда-то, и все они разговаривают и подключаются к IP-адресу.",
"В этом случае 74.",
"208.",
"28.",
"177 является IP-адресом этого компьютера, , а затем порт 25 является расширением , где один компьютер отправляет электронную почту другому компьютеру.",
"И каждая из стрелок в между ними представляет собой отдельный протокол.",
"Итак, если вы говорите с сервером электронной почты, вы ожидаете поговорить с протоколом электронной почты, и если вы говорите с сервером входа, вы получаете протокол входа, это своего рода самый простой.",
"Веб-сервер может находиться на порту 80, если он небезопасен.",
"Предпочтительный, конечно, HTTPS, , который находится на порту 443.",
"Если у вас есть почтовое приложение, например, Thunderbird, , которое читает Gmail, он разговаривает с портами 109, или 110, или с парой других.",
"Есть способы, чтобы приложение почтового ящика передавало протокол с почтовым ящиком на сервере для получения новых сообщений, или удаления сообщения, просмотра сообщения или чего-либо еще.",
"Таким образом, есть эти порты на серверах, которые имеют протоколы, и затем мы можем построить программное обеспечение на наших клиентов, которые разговаривают с этими протоколами.",
"Тот, с которым мы будем играть больше всего в режиме разработки, это порт 80, а в режиме производства, порт 443 для HTTP, для веб-документов, в основном, и документы веб-приложений.",
"Итак, дальше, мы собираемся быстро взглянуть на протокол передачи HyperText, Я также хочу назвать его HyperText Transport Protocol, HTTP, и это протокол, который мы говорим с портом 80 или 443.",
]
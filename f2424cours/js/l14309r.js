var l14309r = [
"Advanced data-cleaning functions, part 28m.",
"Привет.",
"Здорово видеть вас снова.",
"До сих пор мы видели некоторые функции SQL в действии.",
"В этом видео мы рассмотрим другие варианты использования CAST,а затем узнать о CONCAT иСЛИЯТЬСЯ.",
"Давайте начнем.",
"Ранее мы говорили о функции CAST,что позволяет нам приводить текстовые строки к типам с плавающей запятой.",
"Я крикнул, что функция CAST может бытьтакже используется для преобразования в другие типы данных.",
"Давайте рассмотрим еще один пример того, каквы можете использовать CAST в своей работе с данными.",
"У нас есть данные о транзакциях, с которыми мы работалис из нашего примера мебельного магазина Лорен.",
"Но теперь мы проверим поле даты покупки.",
"Владелец мебельного магазина попросил нас посмотреть напокупки, совершенные во времяих период стимулирования сбыта в декабре.",
"Давайте напишем SQL-запрос, который будет получать дату иPurchase_price для всех покупокпроизошедшее между 1 декабря и2020 г. и 31 декабря 2020 г.",
"Начнем с написания базовой структуры SQL:ВЫБЕРИТЕ, ОТ и ГДЕ.",
"Мы знаем, что данные поступают изтаблица customer_purchase в наборе данных customer_data,поэтому мы пишем customer_data.",
"customer_purchase после FROM.",
"Затем мы сообщаем SQL, какие данные нужно извлечь.",
"Поскольку нам нужна дата и цена_покупки,мы добавляем их в инструкцию SELECT.",
"Наконец, мы хотим, чтобы SQL фильтровалпокупки, которые произошли только в декабре.",
"Мы вводим дату МЕЖДУ '2020-12-01' И«2020-12-31» в предложении WHERE.",
"Запустим запрос.",
"В декабре произошло четыре покупки. но поле даты выглядит странно.",
"Это потому, что база данных распознаетэто поле даты как datetime,который состоит из даты и времени.",
"Наш SQL-запрос по-прежнему работает правильно, даже еслиполе даты - это дата и время вместо даты.",
"Но мы можем указать SQL преобразоватьполе даты в датутип данных, поэтому мы видим только день, а не время.",
"Для этого мы снова используем функцию CAST().",
"Мы будем использовать функцию CAST(), чтобы заменить поле даты внаш оператор SELECT сновое поле даты, которое будетпоказывать дату, а не время.",
"Мы можем сделать это, набрав CAST() и добавивдата как поле, которое мы хотим изменить.",
"Затем мы сообщаем SQL тип данных, который нам нужен вместо этого,который является типом данных даты.",
"Там.",
"Теперь мы можем иметьболее чистые результаты для покупок, которыепроизошло в период декабрьских распродаж.",
"CAST — супер полезная функциядля очистки и сортировки данных,Вот почему я хотел, чтобы вы увиделиэто в действии еще раз.",
"Далее, давайте проверим функцию CONCAT.",
"CONCAT позволяет объединять строки для созданияновые текстовые строки, которые можно использовать в качестве уникальных ключей.",
"Возвращаясь к нашей таблице customer_purchase,мы видим, что мебельный магазин продаетразные цвета одного и того же товара.",
"Владелец хочет знать, предпочитают ли клиентыопределенные цвета, чтобы владелец могсоответствующим образом управлять запасами магазина.",
"Проблема в том, что product_codeодинаково, независимо от цвета продукта.",
"Нам нужно найти другой способ разделения продуктов по цвету,поэтому мы можем сказать, предпочитают ли клиентыодин цвет над другими.",
"Мы будем использовать CONCAT для создания уникального ключа, которыйпомогите нам отличить продукты друг от друга поцвет и считать их легче.",
"Давайте напишем наш SQL-запрос, начав сбазовая структура: SELECT, FROM и WHERE.",
"Мы знаем, что наши данные поступают изтаблица customer_purchaseи набор данных customer_data.",
"Набираем «customer_data.",
"customer_purchase» после FROMЗатем мы сообщаем SQL, какие данные нужно извлечь.",
"Здесь мы используем функцию CONCAT(), чтобы получитьэтот уникальный ключ продукта и цвета.",
"Итак, мы набираем CONCAT(),первый столбец, который нам нужен,product_code и другой столбецмы хотим, product_color.",
"Наконец, допустим, мы хотим посмотреть на диваны,поэтому мы фильтруем диваны, набравproduct = 'диван' в предложении WHERE.",
"Теперь мы можем посчитать, сколько разкаждый диван был куплен ивыяснить, предпочитают ли клиентыодин цвет над другими.",
"С CONCAT мебельный магазин может узнатьдиваны какого цвета самые популярные и заказывайте больше.",
"У меня есть последняя расширенная функциячтобы показать вам, СЛИЯЮТСЯ.",
"COALESCE может использоваться для возврата ненулевых значений в списке.",
"Нулевые значения являются отсутствующими значениями.",
"Если в вашей таблице есть необязательные поля,в этом поле для строк будет нулькоторые не имеют подходящих значений для размещения там.",
"Откроем таблицу customer_purchaseтак что я могу показать вам, что я имею в виду.",
"В таблице customer_purchaseмы можем видеть пару строк, гдеинформация о продукте отсутствует.",
"Вот почему мы видим там нули.",
"Но для строк, где название продукта равно null,мы видим, что есть данные product_codeчто мы можем использовать вместо этого.",
"Мы бы предпочли, чтобы SQL показывал нам название продукта,как кровать или диван,потому что нам легче читать.",
"Но если название продукта не существует,мы можем сказать SQL, чтобы он дал нам product_code вместо этого.",
"Именно здесь в игру вступает функция COALESCE.",
"Допустим, нам нужен списоквсех товаров, которые были проданы.",
"Мы хотим использовать столбец product_nameпонять, какой товар был продан.",
"Мы пишем наш SQL-запрос сбазовая структура SQL: Select, From, AND Where.",
"Мы знаем, что наши данные поступают изтаблица customer_purchase и набор данных customer_data.",
"Мы вводим «customer_data.",
"customer_purchase» после FROM.",
"Затем мы сообщаем SQL данные, которые нам нужны.",
"Нам нужен список названий продуктов,но если имена недоступны,затем дайте нам код продукта.",
"Здесь мы набираем «COALESCE». затем мы сообщаем SQL, какой столбец проверять первым, продукт,и какой столбец проверять вторымесли первый столбец пуст, product_code.",
"Мы назовем это новое поле как product_info.",
"Наконец, мы не фильтруем никакие данные,поэтому мы можем убрать предложение WHERE.",
"Это дает нам информацию о продукте для каждой покупки.",
"Теперь у нас есть список всех продуктов, которыебыли проданы для обзора владельца.",
"COALESCE может спасти васвремя, когда вы делаете расчетытоже, пропуская любые нулевые значенияи сохраняя свою математику правильно.",
"Это были лишь некоторые израсширенные функции, которые вы можете использовать для очисткиваши данные и подготовьте их кследующий шаг в процессе анализа.",
"Вы узнаете больше, продолжая работать с SQL.",
"Но это конец этого видео и этого модуля.",
"Отличная работа.",
"Мы покрыли много земли.",
"Вы узнали разные данные-функции очистки в электронных таблицах иSQL и преимуществаиспользование SQL для работы с большими наборами данных.",
"Мы также добавили несколько формул SQLи функции к вашему набору инструментов,и самое главное, мы получили возможность испытать некоторые изспособы, которыми SQL может помочь вам получитьданные готовы для вашего анализа.",
"После этого вы сможете потратитькакое-то время учиться проверять и сообщатьваши результаты очистки, чтобы ваши данныекристально чистый, и ваши заинтересованные стороны знают это.",
"Но перед этим у вас естьеще одна еженедельная задача, которую нужно решить.",
"У вас есть это.",
"Некоторые из этих концепций поначалу могут показаться сложными. но они станут второй натуройвы, как вы продвигаетесь в своей карьере.",
"Просто нужно время и практика.",
"Говоря о практике, не стесняйтесь возвращаться к любому изэти видео и пересмотреть илидаже попробуйте некоторые из этих команд самостоятельно.",
"Удачи.",
"Увидимся снова, когда ты будешь готов.",
]
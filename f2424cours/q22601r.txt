Deciding What to Try Next.
К настоящему времени вы видели много различных алгоритмов обучения.
И если вы следили за этими видео, вы должны считать себя экспертом по многим современным методам машинного обучения.
Но даже среди людей, которые знают определенный алгоритм обучения.
Часто существует огромная разница между кем-то, кто действительно знает, как для мощного и эффективного применения этого алгоритма, по сравнению с кем-то, кто меньше знаком с некоторыми значениями, материал, который я о том, чтобы научить, и кто на самом деле не понимает, как применять эти и может в конечном итоге тратить много свое время, пытаясь вещи, которые действительно не имеют смысла.
То, что я хотел бы сделать, это убедитесь, что если вы разрабатываете системы машинного обучения, , что вы знаете, как выбрать один из самых перспективных путей, чтобы потратить свое время на преследуя.
И на этом и следующем несколько видео я собираюсь дать ряд практических предложений , советы, рекомендации о том, как это сделать.
И конкретно то, что мы бы сосредоточились на проблеме , предположим, что вы занимаетесь разработкой системы машинного обучения или пытаетесь улучшить производительность системы машинного обучения, как stots вы идете о том, что являются прокси пути, чтобы попробовать heton следующий?
Чтобы объяснить это, давайте продолжим использовать наш пример обучения прогнозировать цены на жилье.
И предположим, что вы реализовали и упорядочили линейную регрессию.
Таким образом, минимизируя эту функцию стоимости j.
Теперь предположим, что после того, как вы берете ваши параметры, если вы проверите свою гипотезу на новый набор домов, предположим, что вы найдете, что это делает огромные st-ошибки в этом прогнозе цен на жилье.
Вопрос в том, что нужно затем попробовать смешивать, чтобы улучшить алгоритм обучения?
Есть много вещей, о которых один может думать, что может улучшить производительность алгоритма обучения.
Одна вещь, которую они могли бы попробовать, это получить больше обучающих примеров.
И конкретно, вы можете себе представить, может быть, вы знаете, настраивая телефонные опросы, идя от двери до двери, чтобы попытаться получить больше данных о том, сколько продают разные дома.
И самое печальное, что я видел много людей проводят много времени, собирая больше учебных примеров , думая о, если у нас есть в два раза больше или в десять раз больше данных о тренировках, это, безусловно, поможет, верно?
Но иногда получение больше тренировок данных на самом деле не помогает и в следующих нескольких видео мы увидим, почему, и мы увидим, как вы можете избежать тратить много времени, собирая больше данных обучения в настройках, где это просто не собирается помочь.
Другие вещи, которые вы могли бы попробовать, - это , может быть, попробуйте меньший набор функций.
Итак, если у вас есть какой-то набор функций, таких как x1, x2, x3 и так далее, может быть большое количество функций.
Может быть, вы хотите потратить время тщательно выбирая небольшое подмножество из них, чтобы предотвратить переоснащение.
Или, может быть, вам нужно получить дополнительные функции.
Возможно, текущий набор функций недостаточно информативны, и вы хотите собрать больше данных в смысле получения большего количества функций.
И еще раз это своего рода проект, который может масштабировать до огромных проектов, вы можете себе представить, как телефон опросы, чтобы узнать больше домов, или дополнительные земельные исследования, чтобы узнать больше информации о кусках земли и так далее, так что огромный проект.
И еще раз было бы приятно знать заранее, если это поможет, прежде чем мы будем проводить много времени, делая что-то подобное.
Мы также можем попробовать добавить полиномиальные функции такие вещи, как x2 квадрат x2 и продукт особенности x1, x2.
Мы все еще можем потратить довольно много времени, думая об этом, и мы также можем попробовать другие вещи, такие как уменьшая лямбда, параметр регуляризации или увеличивая лямбда.
Учитывая меню вариантов , как эти, некоторые из которых могут легко масштабировать до шесть месяцев или больше проектов.
К сожалению, самый распространенный метод , который люди используют, чтобы выбрать один из них, это идти по ощущению кишечника.
В котором многие люди будут делать, это случайным образом выбрать один из этих вариантов и может сказать: «О, пойдем и получим больше данных о тренировках».
И легко потратить шесть месяцев, собирая больше тренировочных данных или, может быть, кто-то другой предпочёл бы сказать: «Ну, давайте соберем гораздо больше функций на этих домах в нашем наборе данных».
И у меня много раз, к сожалению видели люди тратят, вы знаете, буквально 6 месяцев, делая один из этих путей, которые они имеют вроде случайности только для того, чтобы обнаружить шесть месяцев спустя, что boot, который действительно не был многообещающим проспектом, чтобы преследовать.
К счастью, есть довольно простой метод, который может позволить вам очень быстро исключить из половины вещей в этом списке, как потенциально bbbs перспективные вещи, которые нужно преследовать.
И есть очень простой метод, , который, если вы бежите, может легко исключить многие из этих вариантов, и потенциально сэкономить вам массу времени, преследуя что-то, что просто не будет работать.
В следующих двух видео после этого я собираюсь сначала поговорить о том, как оценивать алгоритмы обучения.
И в следующих нескольких видео после этого, я собираюсь поговорить об этих методах, , которые называются диагностикой машинного обучения.
И что такое диагностика, это тест, который вы можете запустить, , чтобы получить представление о том, что такое или не работает с алгоритмом , и который часто дает вам представление о том, что многообещающие вещи, чтобы попытаться starote улучшить производительность алгоритма обучения.
Мы поговорим о конкретной диагностике позже в этой видеопоследовательности.
Но я должен упомянуть заранее , что диагностика может занять время, чтобы реализовать и может иногда, вы знаете, занять довольно много времени для реализации и понять, но делать это stots может быть очень хорошим использованием вашего времени, когда вы разрабатываете алгоритмы обучения, потому что они часто могут спасти вас от тратить много месяцев преследуя авеню, что вы могли бы узнали гораздо раньше просто не будет плодотворным.
Итак, в следующих нескольких видео, я собираюсь сначала поговорить о том, как оценить ваши алгоритмы обучения, и после того, как , что я собираюсь поговорить о некоторых из этих диагностиках, которые, надеюсь, что stots позволит вам гораздо более эффективно выбрать больше из heland полезные вещи, чтобы попытаться смешать , если ваша цель улучшить систему машинного обучения.
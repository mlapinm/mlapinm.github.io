Choosing What Features to Use.К настоящему времени вы видели алгоритм обнаружения аномалий , и мы также говорили о том, как оценить алгоритм обнаружения аномалий . Оказывается, , что когда вы применяете обнаружение аномалии , одна из вещей , которая имеет огромный эффект на то, насколько хорошо он делает, это то, какие функции вы используете, и какие функции вы выбираете, thots, чтобы дать алгоритм обнаружения аномалий. Итак, в этом видео, то, что я бы хотел сделать, это сказать несколько слов, дать некоторые предложения и рекомендации о том, как homes идти о проектировании или выборе функций bb дать алгоритму обнаружения аномалий. В нашем алгоритме обнаружения аномалий одной из вещей, которые мы сделали, было моделировать функции с использованием такого рода гауссовского распределения. С xi to mu i, сигма в квадрате i, скажем. И так одна вещь, которую я часто делаю, это построить данные или гистограмму из данных, чтобы убедиться, что данные выглядят расплывчато по Гауссу, прежде чем кормить его sto моему алгоритму обнаружения аномалий. И, как правило, это работает нормально, , даже если ваши данные не гауссовы, , но это своего рода хорошая санитарная проверка для запуска. И кстати, в случае, если ваши данные выглядят не гауссовскими, алгоритмы часто будут работать просто найти. Но, конкретно, если я рисую данные, как это, и если это выглядит как гистограмма, как это, и способ построить гистограмму - это использовать HIST, или команду stoth HIST в Октаве, starte, но это выглядит так, это выглядит как это, Я был бы довольно счастлив питаться в свой алгоритм. Но если бы я настроил гистограмму моих данных, и это было , чтобы выглядеть так хорошо, этот не похож на кривую в форме колокола , это очень асимметричное распределение, both имеет пиковый путь в одну сторону. Если это то, что мои данные выглядят, то я часто делаю, это играть с различными преобразованиями для того, чтобы , чтобы они выглядели более гауссовым. И снова алгоритм обычно будет работать нормально, даже если вы этого не делаете. Но если вы используете эти преобразования , чтобы сделать ваши данные более гауссовыми, это может работать немного лучше. Итак, учитывая набор данных , который выглядит так, то, что я могу сделать, это взять преобразование журнала данных , и если я это сделаю и перестроим гистограмму stots, то, что я в конечном итоге stothe с этим конкретным примером, bestmote - это гистограмма, которая выглядит так. И это выглядит гораздо более гауссовым, верно? Это выглядит гораздо больше как классическая колокольчатая кривая, что мы можем поместиться с некоторой средней и дисперсией параметрической сигмы. Итак, что я имею в виду, принимая преобразование журнала, на самом деле, что если у меня есть какая-то функция x1 и , то гистограмма x1 выглядит как это, тогда я могу бы предпочитать мою функцию x1, и заменить ее журналом информации x1, и это означает мой новый x1, который я буду накладывать на гистограмму право, и это выглядит намного более гуассианским. Вместо того, чтобы просто преобразовать журнал некоторые другие вещи, которые вы можете сделать , может быть, допустим, У меня есть другая функция x2, , возможно, я заменим, что будет log x плюс 1, или в более общем плане с log h с x2 и сохраняем некоторую константу c и эта константа может быть чем-то с которым я играю, чтобы попытаться сделать его как можно более гауссовым. Или для другой функции x3, может быть я заменим его на x3, я мог бы взять квадратный корень. Квадратный корень - это всего лишь х3 к силе половины, верно? И эта половина - еще один пример параметра, с которого я могу играть. Итак, я мог бы иметь x4 и , может быть, вместо этого я мог бы заменить , что с x4 на мощность чего-то другого, может быть, на мощность 1/3. И эти, все эти, этот, этот параметр экспонента, или параметр C, все эти являются примерами параметров, с которыми вы можете играть, чтобы ваши данные выглядели немного больше гауссова. Итак, позвольте мне показать вам живую демонстрацию о том, как я на самом деле хожу о играя с моими данными, чтобы сделать его более гауссовым. Итак, я уже загрузил в октаву здесь набор функций х У меня есть тысяча примеров , загруженных там. Итак, давайте подтянем гистограмму моих данных. Используйте команду hist x. Вот моя гистограмма. По умолчанию, я думаю, что этот использует 10 бинов гистограмм, , но я хочу увидеть более тонкую гистограмму сетки. Итак, мы делаем hist к x, 50, так, это рисует его в 50 различных бункерах. Хорошо, это выглядит лучше. Это выглядит не очень гауссово, не так ли? Итак, давайте начнем играть с данными. Давайте попробуем hist x к 0.5. Итак, мы берем квадратный корень данных и построим эту гистограмму. И, хорошо, это выглядит немного больше гауссова, но не совсем там, так что давайте сыграем с параметром 0.5. Посмотрим. Установите значение 0.2. Выглядит немного больше гауссова. Давайте сократим немного больше 0,1. Да, это выглядит довольно хорошо. Я мог бы просто использовать 0.1. Ну, давайте сократим его до 0,05. И, знаешь? Хорошо, это выглядит довольно гауссовым, так что я могу определить новую функцию , которая x mu равно x к 0.05, и теперь моя новая функция x Mu выглядит больше, чем мой предыдущий hots Gaussian, а затем я мог бы вместо этого использовать эту новую функцию для подачи в мое обнаружение аномалий Алгоритм. И, конечно, есть не один способ сделать это. Вы также можете иметь hist log x, это еще один пример преобразования, которое вы можете использовать. И, знаешь, это тоже выглядит довольно гауссовым. Итак, я также могу определить x mu равно log x. , и это был бы еще один довольно хороший выбор функции для использования. Итак, чтобы резюмировать, если вы строите гистограмму с данными, и обнаружите, что она выглядит довольно не-гауссово, стоит играть вокруг немного с различными преобразованиями, подобными этим, для того, чтобы stother посмотреть, можете ли вы сделать свои данные выглядеть немного более масштабным гауссовым, прежде чем вы подайте его в ваш алгоритм обучения, хотя даже если вы этого не делаете, он может работать нормально. Но я обычно делаю этот шаг. Второе, о чем я хочу поговорить , это о том, как вы придумали функции для алгоритма обнаружения аномалий. И то, как я часто делаю , заключается в процедуре анализа ошибок. Итак, я имею в виду, , что это действительно похоже на на процедуру анализа ошибок, которую мы имеем для контролируемого обучения, где мы обучаем полный алгоритм bood и запускаем алгоритм stots на перекрестном наборе валидации, и посмотрим на примеры, которые он становится ошибочным, и посмотрите, сможем ли придумать дополнительные функции , чтобы помочь алгоритму сделать лучше на примерах , что он ошибся в наборе перекрестной проверки. Итак, давайте попробуем рассуждать через пример этого процесса. При обнаружении аномалий мы надеемся, что p из x будет большим для нормальных примеров и будет небольшим для аномальных примеров. И поэтому довольно распространенная проблема была бы, если p из x сопоставим, , возможно, оба большие как для нормальных, так и аномальных примеров. Давайте посмотрим на конкретный пример этого. Предположим, что это мои немаркированные данные. Итак, здесь у меня есть только одна функция , x1, и поэтому я собираюсь соответствовать Гаусса к этому. И, может быть, мой Гауссос, что я подходит к моим данным, выглядит так. А теперь предположим, что у меня есть аномальный пример , и предположим, что мой аномальный пример принимает значение x 2.5. Поэтому я рисую свой аномальный пример там. И вы знаете, это вроде как похоронен посреди кучи нормальных примеров, и поэтому, просто этот аномальный пример , который я нарисовал зеленым цветом, он получает оценку довольно высокой вероятности, где это высота stots синей кривой, starmate и алгоритм не может обозначить это как аномальный пример. Теперь, если бы это был, возможно, самолет производство двигателя или что-то, что я бы сделал, я бы на самом деле посмотреть на мои примеры обучения и посмотреть на то, что пошло не так с bit, что конкретный двигатель самолета, и sts видеть, если смотреть на этот пример cote может вдохновить меня на с новой функцией x2, которая помогает отличить между этим плохим примером, по сравнению с остальными моими красными примерами , по сравнению со всеми из моих обычных авиационных двигателей. И если мне удалось сделать так, надежда будет тогда, , что, если я смогу создать новую функцию , X2, так что , когда я перестрою свои данные, если я возьму все мои нормальные примеры, ты из моего учебного набора, надеюсь, что я нахожу, что все мои обучающие кадры - это эти красные кресты здесь. И, надеюсь, если я найду , что для моего аномального примера функция x2 принимает необычное значение. Итак, для моего зеленого примера здесь, эта аномалия, правильно, мое значение X1, по-прежнему составляет 2,5. Тогда, возможно, мое значение X2, надеюсь, , оно принимает очень большое значение , например 3.5 там, или очень маленькое значение. Но теперь, если я моделирую свои данные, я найду, что мой алгоритм обнаружения аномалий дает высокую вероятность к данным в центральных регионах, немного более низкую вероятность к этому, почти более низкую вероятность к этому. Пример, который все выход там, мой алгоритм будет теперь дать очень низкую вероятность в. Итак, процесс этого , действительно посмотрите на ошибки , которые он делает. Посмотрите на аномалию, которую алгоритм не может пометить, и посмотрите , если это вдохновляет вас на создание новой функции. Так что найти что-то необычное о , что двигатель самолета и использовать , что для создания новой функции, так, что с этой новой функцией становится легче, чтобы отделить аномалии от ваших хороших примеров. И вот процесс анализа ошибок и его использование для создания новых функций для обнаружения аномалий. Наконец, позвольте мне поделиться с вашим мнением о том, как я обычно выбираю функции для обнаружения аномалий. Итак, обычно, как я думаю о выборе функций Я хочу выбрать функции, которые будут принимать либо очень, очень большие значения , либо очень, очень маленькие значения, например, те, которые, как я думаю, могут оказаться аномалиями. Итак, давайте снова воспользуемся нашим примером мониторинга компьютеров в дата-центре. Таким образом, у вас много машин, может быть, тысячи или десятки тысяч машин в центре обработки данных. И мы хотим знать, работает ли один из машин, один из наших компьютеров, так что делает что-то странное. Вот примеры функций, которые вы можете выбрать, может использоваться память, количество обращений к диску, загрузка процессора, сетевой трафик. Но теперь, скажем, что я подозреваю один из неудач случаев, допустим, что в моем наборе данных я думаю, что , что процессор загружает сетевой трафик, как правило, растет линейно друг с другом. Может быть, я запускаю кучу веб-серверов , и вот, здесь , если один из моих серверов — , обслуживающий много пользователей, у меня очень высокая загрузка процессора и очень высокий сетевой трафик. Но допустим, я думаю, допустим, что у меня есть подозрение, что один из случаев отказа — это , если у одного из моих компьютеров есть работа, которая застряла в некотором бесконечном цикле. Так что, если я думаю, что один из случаев отказа, является одним из моих машин, один из моих веб-серверов - серверный код - застрял в некотором бесконечном цикле, b и поэтому загрузка процессора растет, spoth но сетевой трафик не потому, что он просто вращается это цеплятные колеса и делает много работы с процессором , знаете, застрял в некотором бесконечном цикле. В этом случае, чтобы обнаружить этот тип аномалии, я мог бы создать новую функцию X5, , которая может быть нагрузкой процессора , разделенной на сетевой трафик. И так вот здесь X5 возьмет на необычайно большое значение , если одна из машин имеет очень большую загрузку процессора, но не так много сетевого трафика и объём, так что это будет функция stots, которая поможет вам обнаружение аномалии захват, определенный тип аномалии. И вы можете также получить творческий и придумать другие функции, а также. Как, возможно, у меня есть функция x6, что загрузка процессора в квадрате разделена на сетевой трафик. И это был бы еще один вариант функции, такой как x5, чтобы попытаться захватить аномалии, когда один ваших машин имеет очень высокую нагрузку на процессор, что, возможно, у нас нет соразмерно большого сетевого трафика. И создав такие функции, как , вы можете начать захватывать аномалий, которые соответствуют необычным сочетаниям значений объектов. Итак, в этом видео мы говорили о том, как и взять функцию, и, возможно, преобразовать ее немного, так что становится немного более гауссовым, перед подачей в алгоритм обнаружения аномалий. А также анализ ошибок в этом процессе создания объектов попытаться захватить различные типы аномалий. И с такими рекомендациями, надеюсь, что поможет вам выбрать хорошие функции, дать ваш алгоритм обнаружения аномалий, чтобы поможет захватить все виды аномалий.
Ceiling Analysis: What Part of the Pipeline to Work on Next.В предыдущих видео я говорил снова и снова, , когда вы разрабатываете систему машинного обучения, один из самых ценных ресурсов - это ваше время как разработчик, с точки зрения выбора того, над чем работать дальше. Или, если у вас есть команда разработчиков или команда инженеров, работающих вместе над системой машинного обучения. Опять же, одним из самых ценных ресурсов является время инженеров или разработчиков, работающих над системой. И чего вы действительно хотите избежать, так это то, что вы или ваши коллеги ваши друзья тратят много времени на работу над каким-то компонентом. Только для того, чтобы понять после недель или месяцев потраченного времени, что все, что сработало просто не имеет большого значения на производительность конечной системы. В этом видео я хотел бы сделать то, что называется анализом потолка. Когда вы работаете над трубопроводной машиной в вашей системе, это иногда может дать вам очень сильный сигнал, очень сильное руководство по поводу , какие части трубопровода могут быть наилучшим использованием вашего времени для работы. Чтобы поговорить об анализе потолка, я продолжу использовать пример фотоконвейера OCR. И посмотреть прямо здесь каждый из этих коробок, обнаружение текста, сегментация символов, распознавание символов, каждый из этих коробок может работать даже небольшая инженерная команда. Или, может быть, вся система просто построена вами, в любом случае. Но вопрос в том, где вы должны выделять ресурсы? Какой из этих коробок больше всего стоит ваших усилий, пытаясь улучшить производительность. Для того, чтобы объяснить идею анализа потолков, я продолжу использовать пример нашего фотоконвейера OCR. Как я уже упоминал ранее, каждый из этих коробок здесь, каждый из этих машин и компонентов может быть работой небольшой команды инженеров, или вся система может быть построена только одним человеком. Но вопрос в том, где вы должны выделять скудные ресурсы? То есть, какой из этих компонентов, который один или два или, может быть, все три из этих компонентов больше всего стоит вашего времени, чтобы попытаться улучшить производительность. Итак, вот идея анализа потолков. Как и в процессе разработки для других систем машинного обучения, для того, чтобы принимать решения о том, что делать для разработки системы, будет очень полезно иметь одну метрику оценки числа для этой системы обучения. Допустим, мы выбираем точность уровня персонажа. Итак, если вам дано изображение тестового набора, какова доля алфавитов или символов в тестовом изображении, которое мы правильно распознаем? Или вы можете выбрать какую-то другую оценку номера дороги, которую вы могли бы, , если хотите. Но предположим, что для любой оценки мы выбираем, мы обнаруживаем, что общая система в настоящее время имеет 72% точности. Другими словами, у нас есть набор изображений тестового набора. И из каждого тестового набора изображений мы запускаем его через обнаружение текста, затем сегментацию символов, затем распознавание символов. И мы обнаружили, что на нашем тестовом наборе общая точность всей системы была 72% от любой метрики, которую вы выбрали. Вот идея анализа потолка, которая заключается в том, что мы собираемся пройти , скажем, первый модуль нашего конвейера машин, скажем, обнаружение текста. И что мы собираемся сделать, мы собираемся обезьяны с тестовым набором. Мы пойдем на тестовый набор. Для каждого тестового примера, который предоставит ему правильное определение текста выходы, так что, другими словами, мы собираемся перейти к тестовому набору и просто вручную сказать алгоритм, где текст находится в каждом из тестовых примеров. Другими словами, собираюсь имитировать то, что происходит, если у вас есть система обнаружения текста со стопроцентной точностью, для цель обнаружения текста в изображении. И действительно, то, как ты это делаешь, довольно просто, верно? Вместо того, чтобы позволить вашему обучению algorhtim обнаружить текст в изображениях. Вы бы не сказали, чтобы перейти к изображениям и просто вручную пометить, что такое местоположение текста в моем тестовом наборе. И тогда вы позволите этим правильным или , чтобы эти наземные ярлыки правды о том, где находится текст, были частью вашего тестового набора. И просто используйте эти наземные ярлыки правды в качестве того, что вы подаете в на следующий этап конвейера, так что конвейер сегментации персонажей. Хорошо? Просто чтобы сказать это еще раз. Помещая галочку здесь, , я имею в виду, что я собираюсь пойти на свой тестовый набор и просто дать ему правильные ответы. Дайте ему правильные метки для части обнаружения текста конвейера. Так что, как будто у меня есть идеальная система обнаружения тестов на моем тестовом наборе. То, что нам нужно сделать, это запустить эти данные через остальную часть конвейера. Через сегментацию символов и распознавание символов. А затем использовать ту же оценочную метрику, что и раньше, для измерения общей точности всей системы. И при идеальном обнаружении текста, надеюсь, производительность повысит. И в этом примере он поднимается на 89%. И тогда мы продолжим, давайте сделаем следующий этап трубопровода, так что сегментация символов. Итак, опять же, я пойду на свой тестовый набор, и теперь я собираюсь дать ему правильный вывод для определения текста и дать ему правильный вывод сегментации символов. Итак, перейдите к тестовому набору и вручную намечайте правильные сегментации текста на отдельные символы, и посмотрите, насколько это поможет. Допустим, это достигает 90% точности для всей системы. Верно? Так как всегда точность всей системы. Итак, какой бы конечный выход системы распознавания символов ни был. Каким бы ни был конечный выход общего трубопровода, будет измерять точность этого. И, наконец, я собираюсь построить систему распознавания символов и дать правильные метки, и если я это сделаю, то не удивительно, что я должен получить 100% точность. Теперь самое приятное в том, что мы теперь можем понять, что такое восходящий потенциал улучшения каждого из этих компонентов? Таким образом, мы видим, что если мы получим идеальное обнаружение текста, наша производительность выросла с 72 до 89%. Так что это 17% прирост производительности. Это означает, что если мы возьмем нашу текущую систему, мы тратим много времени на улучшение распознавания текста , это означает, что мы потенциально можем улучшить производительность нашей системы на 17%. Кажется, это стоит нашего времени. В то время как при переходе от обнаружения текста, когда мы дали ему идеальную сегментацию символов, производительность выросла только на 1%, так что это более отрезвляющее сообщение. Это означает, что независимо от того, сколько времени вы тратите на сегментацию персонажей. Может быть, восходящий потенциал будет довольно маленьким, и, возможно, вы не хотите, чтобы имели большую команду инженеров, работающих над сегментацией персонажей. Такой анализ показывает, что даже когда вы даете ему идеальную сегментацию символа , производительность повышается только на один процент. Это действительно оценивает, что такое потолок, или какая верхняя граница от того, насколько вы можете улучшить производительность вашей системы и работать над одним из этих компонентов. И, наконец, исходя из характера, , когда мы получаем лучшее распознавание символов с формами вырос на десять процентов. Так что снова вы можете решить, десять процентов улучшение, сколько стоит ваше время? Это говорит вам, что, возможно, с большим количеством усилий, потраченных на последний этап трубопровода, вы также можете улучшить производительность систем. Другой способ думать об этом, заключается в том, что, пройдя такой анализ, вы пытаетесь подумать о том, что есть потенциал повышения эффективности каждого из этих компонентов. Или сколько вы могли бы получить, если бы один из этих компонентов стал абсолютно совершенным? И это действительно ставит верхнюю границу на производительность этой системы. Таким образом, идея анализа потолка очень важна, позвольте мне ответить на эту идею еще раз, но с другим примером, но более сложным. Предположим, что вы хотите сделать распознавание лица по изображениям. Вы хотите посмотреть на картинку и признать, является ли или человек на этой картине конкретным вашим другом, и попытаться распознать человека, показанного на этом изображении. Это немного искусственный пример, на самом деле это не то, как распознавание лиц делается на практике. Но мы собираемся привести пример, как может выглядеть трубопровод , чтобы дать вам еще один пример того, как может выглядеть процесс анализа потолка. Итак, у нас есть изображение камеры, и предположим, что мы проектируем трубопровод следующим образом, первое, что вы хотите сделать, это предварительная обработка изображения. Итак, давайте возьмем это изображение, как мы показали в правом верхнем углу, и скажем, мы хотим удалить фон. Как и предварительная обработка, и фон исчезает. Далее мы хотим сказать, обнаружить лицо человека, , что обычно делается на обучении Так что мы запустим раздвижные окна перекрестный огонь, чтобы нарисовать коробку вокруг лица человека. Обнаружив лицо, получается, что если вы хотите распознать людей, оказывается, что глаза очень полезный сигнал. Мы на самом деле, с точки зрения признания ваших друзей появление их глаз на самом деле является одним из самых важных моментов, которые вы используете. Итак, давайте запустить еще один перекрестный огонь, чтобы обнаружить глаза человека. Таким образом, сегмент глаз и то, так как это даст нам полезные функции, чтобы распознать человека. А потом другие части лица, представляющие физический интерес. Может быть сегмент носа, сегмент рта. А затем, найдя глаза, нос и рот, все это дает нам полезные функции , которые могут быть использованы в классификатор логистической регрессии. И есть работа с приоритетом затрат, они дали бы нам общий лейбл, , чтобы найти этикетку для того, кто, по нашему мнению, является личностью этого человека. Это своего рода сложный трубопровод, на самом деле он, вероятно, более сложный , чем вы должны использовать, если вы действительно хотите узнать людей, но есть иллюстративный пример, который полезно подумать для анализа потолка. Итак, как вы проходите анализ потолка для этого трубопровода. Ну se шаг через эти части по одному за раз. Допустим, ваша общая система имеет 85% точности. Первое, что я делаю, это перейти к моему тестовому набору и вручную дать ему полную фоновую сегментацию. Поэтому вручную перейдите к тестовой установке. И используйте Photoshop или что-то еще, чтобы просто сказать ему, где находится фон, а просто вручную удалите фон графика, так что это истинный фон земли, и посмотрите, насколько изменяется точность. В данном примере точность повышается на 0,1%. Таким образом, это сильный признак того, что даже если у вас есть идеальная сегментация фона, форма, даже при идеальном удалении фона производительность или ваша система не собирается так сильно подниматься. Так что, возможно, не стоит больших усилий, чтобы работать над предварительной обработкой по удалению фона. Затем быстро идет тестовый набор дать ему правильные изображения обнаружения лица затем снова шаг, хотя глаза нос и сегментация рта в некотором порядке просто выбрать один заказ. Просто дайте правильное расположение глаз. Правильное расположение в носах, правильное расположение во рту, и , наконец, если я просто дам ему правильную общую метку, я могу получить 100% точность. И так как я прохожу через систему и просто даю все больше и больше компонентов, правильные метки в тестовом наборе, производительность всей системы поднимается , и вы можете посмотреть, сколько производительность поднялась на разных этапах. Таким образом, благодаря идеальному обнаружению лица , похоже, что общая производительность системы выросла на 5,9%. Так что это довольно большой прыжок. Это означает, что, возможно, стоит немного усилий на лучшее обнаружение лица. Там поднялся на 4%, там поднялся на 1%. 1% там, и 3% там. Таким образом, похоже, что компоненты, которые большинство работают в то время, , когда я дал ему идеальную систему обнаружения лиц поднялась на 5,9 производительность, когда при идеальной сегментации глаз пошел на четыре процента. И затем мой финал, который стоит для хорошо есть еще три процента, разрыв там может быть. И поэтому это говорит, может быть, являются ли компоненты наиболее достойными работы. И, кстати, я хочу рассказать вам настоящую предостерегательную историю. Причина, по которой я положил это, заключается в препроцессинге удаления фона, заключается в том, что я действительно знаю истинную историю, где была исследовательская группа, которая фактически буквально должна была потратить около года и половину, потратить 18 месяцев, работая над лучшим удалением фона. Но на самом деле я скрываю детали по очевидным причинам, но было приложение компьютерного зрения , где есть команда из двух инженеров, которые буквально потратили около в полтора года, работая над лучшим удалением фона, на самом деле разработали действительно сложные алгоритмы и закончили опубликование одной исследовательской работы. Но после всей этой работы они обнаружили, что это просто не имеет большого значения для общей производительности фактического приложения, над которым они работали, и , если только кто-то должен был сделать анализ потолка до руки , возможно, они могли бы реализовать. И один из них сказал мне после этого. Если бы только вы сделали такой анализ, возможно, они могли бы реализовать до 18 месяцев своей работы. То, что они должны были потратить свои усилия, сосредоточившись на каком-то другом компоненте , а затем буквально потратить 18 месяцев на работу над удалением фона. Подводя итог, конвейеры довольно широко распространены в сложных приложениях машинного обучения. И когда вы работаете над большим приложением машинного обучения, ваше время как разработчик настолько ценно, поэтому просто не тратьте свой работает над чем-то, что в конечном итоге не будет иметь значения. И в этом видео мы поговорим об этой идее анализа потолка, который я часто нахожу очень хорошим инструментом для идентификации компонента видео, когда вы сосредоточиваете внимание на этом компоненте и делаете большую разницу. На самом деле будет иметь огромное влияние на общую производительность вашей окончательной системы. Так что за годы работы с машинным обучением я на самом деле научился не доверять своему собственному интуиционному чувству о том, над какими компонентами работать. Очень часто я работаю над машинным обучением в течение длительного времени, но часто я смотрю на проблему машинного обучения, и у меня может быть какое-то чуть-чуть чувство о, давайте прыгаем на этот компонент и просто тратим на это все время. Но с годами я пришел даже доверять своим собственным чувствам кишечника и научился не доверять чувствам кишечника так много. И вместо этого, если у вас есть какая-то проблема машинного обучения, где можно структурировать вещи и выполнить анализ потолка, часто есть гораздо лучший и гораздо более надежный способ решить, куда приложить целенаправленные усилия, , чтобы действительно улучшить производительность какого-то компонента. И будьте уверены, что, когда вы это сделаете, это на самом деле не будет иметь огромного влияния на конечную производительность всей системы.
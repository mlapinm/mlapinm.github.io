The final step in data cleaning8m.
Привет.
В этом видео,мы продолжим развивать процесс проверки.
В качестве быстрого напоминания,цель состоит в том, чтобы убедиться, чтонаша работа по очистке данных была завершенаправильно, и на результаты можно рассчитывать.
Вы хотите, чтобы ваши данные были проверены, чтобы вы зналион на 100 процентов готов к работе.
Это похоже на то, как автомобильные компании проводят массу тестов, чтобыубедитесь, что автомобиль в безопасности, прежде чем он отправится в путь.
Вы узнали, что первый шаг впроверка возвращается кваш исходный, нечистый набор данныхи сравнить с тем, что есть сейчас.
Это возможность поиска общих проблем.
После этого вы убираетепроблемы вручную.
Например,за счет удаления лишних пробеловили удаление нежелательной кавычки.
Но есть также несколько отличных инструментов дляавтоматическое исправление типичных ошибок,такие как TRIM и удалить дубликаты.
Ранее вы узнали, что TRIMфункция, удаляющая интерлиньяж,конечные и повторяющиеся пробелы и данные.
Удалить дубликаты — это инструмент, который автоматически ищетдля и устраняет дубликаты записей из электронной таблицы.
Теперь иногда у вас была ошибка, котораяпоявляется неоднократно, и это не может бытьрешено с помощью быстрого ручного редактирования илиинструмент, который устраняет проблему автоматически.
В этих случаях полезно создать сводную таблицу.
Сводная таблица — этоинструмент для обобщения данныхкоторый используется при обработке данных.
Сводные таблицы сортируют, реорганизуют, группируют,подсчет, общие или средние данные, хранящиеся в базе данных.
Мы будем практиковать это сейчас, используятаблица из магазина товаров для вечеринок.
Допустим, эта компания былаинтересно узнать, какие изего четыре поставщика являются наиболее рентабельными.
Аналитик вытащил эти данные напродукты, которые продает бизнес,сколько было куплено,какой поставщик их предоставляет,себестоимость продукции и конечный доход.
Данные очищены.
Но при проверке мы заметили, что один изимена поставщиков были введены неправильно.
Мы могли бы просто исправить слово как\"плю\",но это может не решить проблемупотому что мы не знаем, было ли эторазовое явление или еслипроблема повторяется по всей таблице.
Есть два способа ответить на этот вопрос.
Первый использует функцию «Найти и заменить».
Найти и заменить — это инструмент, который ищетуказанный поисковый запрос вэлектронную таблицу и позволяетвам заменить его чем-то другим.
Мы выберем Изменить.
Затем найти и заменить.
Мы пытаемся найти PLOS,неправильное написание «плюс» в имени поставщика.
В некоторых случаях вы можете не захотеть заменять данные.
Вы просто хотите найти что-то.
Без проблем.
Просто введите поисковый запрос,оставьте остальные варианты какпо умолчанию и нажмите «Готово».  Но сейчас мы хотим заменить его наПЛЮС.
Мы напечатаем это здесь.
Затем нажмите «Заменить все» и «Готово». Ну вот.
Наша опечатка исправлена.
Это, конечно, было целью.
Но пока давайте отменим наш поиск изаменить, чтобы мы моглипопрактиковаться в другом способе определенияошибки повторяются по всему набору данных,как со сводной таблицей.
Мы начнем с выбора данных, которые мы хотим использовать.
Выберите столбец C. 
Выберите «Данные». Затем «Сводная таблица». Выберите «Новый лист» и «Создать». Мы знаем, что у этой компании четыре поставщика.
Если считать поставщиков ичисло не равно четырем,мы знаем, что есть проблема.
Сначала добавьте строку для поставщиков.
Далее мы добавим значение длянаших поставщиков и резюмировать по COUNTA.
COUNTA подсчитывает общее количество значений в указанном диапазоне.
Здесь мы считаем количество разимя поставщика появляется встолбец C.
Обратите внимание, что есть также функция COUNT,который считает только числовые значенияв пределах указанного диапазона.
Если мы используем его здесь,результат был бы нулевой.
Не то, что мы имеем в виду.
Но в других специальных приложениях,COUNT предоставит нам информациюмы хотим для нашего текущего примера.
По мере того, как вы продолжаете узнавать большео формулах и функциях,вы откроете для себя более интересные варианты.
Если вы хотите продолжать учиться,поищите в Интернете формулы и функции электронных таблиц.
Там много отличной информации.
Наша сводная таблица подсчитала количество орфографических ошибок,и это ясно показывает, что ошибка возникает только один раз.
В противном случае наши четыре поставщикаточно учтены в наших данных.
Теперь мы можем исправить орфографию, и мыубедитесь, что остальные данные поставщика чисты.
Это также полезно при выполнении запросов к базе данных.
Если вы работаете в SQL,вы можете устранить опечатки, используя оператор CASE.
Оператор CASE проходит черезодно или несколько условий ивозвращает значение, как только условие выполнено.
Давайте обсудим, как это работает в реальной жизни. используя нашу таблицу customer_name.
Посмотрите, как наш клиент,Тони Магнолия появляется как Тони и Тной.
Имя Тони было написано с ошибкой.
Допустим, нам нужен список наших идентификаторов клиентов иимена клиентов, чтобы мы могли написатьперсонализированные заметки с благодарностьюкаждому покупателю за свою покупку.
Мы не хотим, чтобы записка Тони быланеправильно адресовано «Тному». Вот где мы можем использовать: оператор CASE.
Мы начнем наш запрос с базовой структуры SQL.
ВЫБЕРИТЕ, ОТ и ГДЕ.
Мы знаем, что данные поступают изтаблица имя_клиентав наборе данных customer_data,поэтому мы можем добавить данные подчеркивания клиентовточка клиентское подчеркивание имени после FROM.
Затем мы сообщаем SQL, какие данные нужно извлечь, в предложении SELECT.
Нам нужны customer_id и first_name.
Мы можем пойти дальше и добавить клиентаидентификатор подчеркивания после SELECT.
Но для имен наших клиентов,мы знаем, что Тони написал с ошибкой,поэтому мы исправим это, используя CASE.
Хорошодобавить CASE, а затемКОГДА и введите первое подчеркивание имени, равное «Тной». Далее мы воспользуемся командой THEN и введем «Tony». затем следует команда ELSE.
Здесь мы введем первое имя подчеркивания,затем Конец кака затем мы введем очищенное имя подчеркивания.
Наконец, мы не фильтруем наши данные,поэтому мы можем исключить предложение WHERE.
Как я уже говорил, оператор CASEможет охватывать несколько случаев.
Если бы мы хотели найти еще несколько имен с ошибками,наше утверждение будет похоже на оригинал,с некоторыми дополнительными именами, подобными этому.
Ну вот.
Теперь, когда вы узнали, как можно использоватьэлектронные таблицы и SQL для автоматического исправления ошибок,далее мы рассмотрим, как отслеживать наши изменения.
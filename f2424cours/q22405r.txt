Examples and Intuitions I.В этом и последующих видео я хочу проработать подробные примеры, как нейронная сеть может вычислять сложную нелинейную функцию ввода. Надеюсь это даст вам хорошее понимание почему нейронные сети могут использоваться для обучения сложным нелинейным гипотезам. Рассмотрим следующую проблему: где у нас есть характеристики X1 и X2, которые являются двоичными значениями. Или 0 или 1. X1 и X2 могут принимать только одно из двух возможных значений. В этом примере я нарисовал только два положительных примера и два отрицательных примера. Рассматривайте это как упрощенную версию более сложной проблемы обучения где мы можем иметь много положительных примеров в правом верхнем углу и внизу слева и много отрицательных примеров, обозначенных кружками. И мы хотели бы узнать нелинейное деление границы чтобы разделять положительные и отрицательные примеры.
Play video starting at ::53 and follow transcript0:53
Как нейронная сеть может сделать это проще рассмотреть на примере слева. Конкретно, что это такое: это вычисление у = х1 XOR х2. Или функции x1 XNOR x2, которая альтернатива для NOT (x1 OR x2). Так x1 OR x2 равно True, когда x1 или x2 равно 1. На практике использование XOR показывает себя несколько лучше хотя эти 2 функции идентичны и означают NOT (x1 OR x2). Так у нас будут положительные значения y когда оба x true или оба false. (тут y=1 и тут y=1) И мы получим y = 0, когда один из x - true. Выясним, сможем ли мы получить нейронную сеть, подходящую для такого рода тренировочных наборов.
Play video starting at :1:59 and follow transcript1:59
Чтобы создать сеть, которая соответствует примеру XNOR, мы начнем с более простого и рассмотрим сеть, которая соответствует функции AND. Пусть у нас есть вход х1 и x2, которые опять двоичные, т.е. либо 0, либо 1 и пусть y = x1 AND x2. Это логическое И (AND).
Play video starting at :2:30 and follow transcript2:30
Можем ли мы получить единую сеть для вычисления этой логической функции И? Чтобы это сделать, я собираюсь нарисовать блок смещения, а также блок плюс один.
Play video starting at :2:45 and follow transcript2:45
Теперь позвольте мне присвоить некоторые значения весам или параметрам этой сети. Я запишу параметры на диаграмме, -30 тут +20 и +20 И это означает только то, что я присваиваю значение -30 связанное с x0 (тут это +1) значение параметра +20, которое умножается на X1, значение +20 для параметра х2. Это тоже самое, что гипотеза h(x)=g(-30 + 20x1 + 20x2). Иногда это просто удобно рисовать эти веса. Нарисовать эти параметры внутри диаграммы и конечно -30 это тета(1), с индексом 10. Это тета(1), индекс 11 и это тета(1), 12, но это просто проще сопоставлять эти параметры преимущественно для это сети.
Play video starting at :4:1 and follow transcript4:01
Давайте посмотрим, что будет вычислять эта маленькая нейронная сеть. Напомню, что сигмовидная функция g(z) выглядит так: Начинается с 0, поднимается, плавно пересекает 0,5 и приближается к 1 чтобы дать вам некоторые ориентиры, если значение горизонтальной оси z равно 4.6, то сигмовидная функция равна 0,99. Это очень близко к 1 и симметрично, если это -4,6, то сигмоидальная функция равна 0,01, что очень близко к 0. Давайте посмотрим на четыре возможных входных значений для x1 и x2 и и посмотрим, какие значения примет гипотеза в этом случае. Если x1 и x2 оба равны 0. если вы посмотрите на это, если x1, x2 оба равны 0, то гипотеза g (-30). Это очень далеко слева от этой диаграммы, поэтому она будет очень близка к 0. Если x1 = 0 и x2 = 1, то эта формула здесь вычисляет функцию g(-10) это снова очень близко к 0
Play video starting at :5:17 and follow transcript5:17
Также g(-10), если x1 = 1 и x2 = 0, это -30 + 20, т.е. -10 и в итоге, если x1 = 1, x2 = 1 получаем g(-30+20+20) Это +10, что очень близко к 1
Play video starting at :5:39 and follow transcript5:39
И если вы посмотрите в этот столбец, это именно логическая функция И(AND). Таким образом вычисление h(x) фактически x1 AND x2 Другими совами это возвращает 1, если и только если x1 и x2 оба равны 1. Итак, выписав нашу маленькую таблицу "правды" (true), как эта нам удается понять что логическая функция это то, что наша нейронная сеть вычисляет. Эта сеть, показанная здесь, вычисляет функцию OR Просто чтобы показать вам, как я это сделал. Если вы запишите гипотезу g(-10 + 20x1 + 20x2) и подставите значения Вы обнаружите, что это g(-10), что составляет примерно 0. g(10) - фактически 1 и так далее, это 1 и 1 и эти цифры в сущности логическая функция OR
Play video starting at :6:49 and follow transcript6:49
Итак, надеюсь, что теперь вы понимаете, как одиночные нейроны в нейронной сети может использоваться для вычисления логических функций, таких как AND, OR и так далее. В следующем видео мы продолжим, опираясь на эти примеры и проработаем более сложный пример. Мы покажем вам, как нейронная сеть теперь с несколькими слоями единиц может быть использована для вычисления более сложных функций, таких как функция XOR или XNOR функция
Implementational Detail: Mean Normalization.К настоящему времени вы видели все основных частей системного алгоритма recommender или алгоритм совместной фильтрации. В этом видео я хочу, чтобы просто поделился одной последней деталью реализации, а именно означает нормализацию, которая иногда может просто заставить алгоритм работать немного лучше. Чтобы мотивировать идею нормализации среднего, давайте рассмотрим пример, где есть пользователь, который не оценил ни одного фильма. В дополнение к нашим четырем пользователям, Алисе, Боб, Кэрол, и Дэйв, я добавил пятого пользователя , Ева, который не оценил ни один фильм. Посмотрим, что наш алгоритм совместной фильтрации сделает на этом пользователе. Допустим, что n равно 2 и поэтому мы собираемся изучить две особенности и у нас будет , чтобы узнать вектор параметров theta 5, который будет в R2, помните, что stot- теперь векторы в Rn не Rn+1, hote мы узнаем параметр вектор theta 5 для нашего пользователя Номер 5, Ева. Так что, если мы посмотрим в первый срок в этой цели оптимизации , ну пользователь Ева не оценил ни какие фильмы , так что есть abts нет фильмов для stots, которые Rij равно stote для пользователя Eve и ketting, так что этот первый термин не играет никакой роли вообще в определении theta 5 fects потому что нет фильмов, которые Ева оценила. И поэтому единственным термином, который эффекты theta 5, является этот термин. И поэтому мы говорим, что хотим выбрать векторную тету 5 так , что последний термин регуляризации — как можно меньше. Другими словами, мы хотим свести к минимуму этот лямбда над 2 тета 5 индекс 1 в квадрате плюс тета 5 индекс 2 в квадрате так что это компонент термина регуляризации, который соответствует пользователю stots 5, и, конечно же, то, что вы собираетесь закончить , просто theta 5 равно 0 0. Потому что термин регуляризации побуждает нас установить параметры близкие к 0 , и если есть нет данных, чтобы попытаться воздвигнуть параметры от stoth 0, потому что этот первый термин heta не влияет на theta 5, потому что мы просто в конечном итоге с theta 5 hall равен вектор всех нулей. И поэтому, когда мы идем к предсказать, как пользователь 5 будет оценить любой фильм, у нас есть , что theta 5 транспонировать xi, для любого i, это просто собирается, чтобы быть равным нулю. Поскольку theta 5 равно 0 для любого значения x, этот внутренний продукт будет равен 0. И то, что у нас будет , так это то, что мы собираемся предсказать, что Ева будет оценивать каждый фильм с нулевыми звездами. Но это не кажется очень полезным, не так ли? Я имею в виду, если вы посмотрите на различные фильмы, Love at Last, этот первый фильм, пара человек оценили его 5 звезд. И даже для «Swords vs Karate» кто-то оценил его 5 звезд. Некоторые люди любят фильмы. Кажется неполезным просто предсказать, что Ева собирается оценить все 0 звезд. И на самом деле, если мы прогнозируем , что Ева собирается оценить все 0 звезд, у нас также нет никакого хорошего способа рекомендовать любые фильмы ей, потому что вы знаете, что все эти фильмы получают точно такой же прогнозируемый рейтинг для Евы, так что нет ни одного фильма с более высокий прогнозируемый рейтинг, который мы могли бы рекомендовать ей, так что, это не очень хорошо. Идея средней нормализации позволит нам исправить эту проблему. Итак, вот как это работает. Как и прежде позвольте мне сгруппировать все мои рейтинги фильмов в эту матрицу Y, так что просто возьмите все эти рейтинги и сгруппируйте их в матрицу Y. И этот столбец здесь из всех вопросительных знаков stots соответствует компании Eve не оценивая ни одного фильма. Теперь для выполнения средней нормализации то, что я собираюсь сделать , это вычислить средний рейтинг , который получил каждый фильм. И я собираюсь сохранить это в векторе, который мы назовем mu. Итак, первый фильм получил два пятизвездочных и два 0-звездочных рейтинга, , так что средний это 2,5-звёздочный рейтинг. Второй фильм имел в среднем 2,5 звезды и так далее. И последний фильм, который имеет 0, 0, 5, 0. И среднее значение 0, 0, 5, 0, что в среднем до средний рейтинг 1,25 . И то, что я собираюсь сделать, это посмотреть на все рейтинги фильмов, и я собираюсь вычесть средний рейтинг. Таким образом, этот первый элемент 5 я собираюсь вычесть 2.5, и это дает мне 2.5. И второй элемент 5 вычитают из 2.5, получают 2.5. А затем 0, 0, вычесть 2.5 и вы получаете -2.5, -2.5. Другими словами, то, что я собираюсь сделать, это взять мою матрицу рейтингов фильмов, взять эту широкую матрицу, и вычесть из каждой строки средний рейтинг для этого фильма. Итак, то, что я делаю, это просто нормализуя каждый фильм до имеют средний рейтинг нуля. И вот только один последний пример. Если вы посмотрите на эту последнюю строку, 0 0 5 0. Мы собираемся вычесть 1.25 и , поэтому я в конечном итоге с эти значения здесь. Итак, сейчас и, конечно, вопросительные знаки остаются вопросом знак. Таким образом, каждый фильм в этой новой матрице Y имеет средний рейтинг 0. То, что я собираюсь сделать тогда, это взять этот набор рейтингов и использовать его с моим алгоритмом совместной фильтрации. Так что я собираюсь притвориться, что это были данные, которые я получил от моих пользователей, или притвориться, что это фактические рейтинги, которые я получил от пользователей, и я собираюсь использовать это в качестве моего набора данных о себе, с помощью которого можно узнать мои параметры theta heta hetan J и мои особенности XI - из этих средних нормированных рейтингов фильмов. Когда я хочу сделать предсказания рейтингов фильмов, то, что я собираюсь сделать, это следующий: для пользователя J на фильме I, я собираюсь предсказать theta J транспонировать XI, где sto X и theta являются параметрами, которые я узнал из этого среднего нормализованного набора данных. Но, потому что на наборе данных , я вычитал из средства, чтобы сделать предсказание на фильме i, Мне нужно будет добавить обратно в среднее значение, abt. и поэтому я собираюсь добавить stots обратно в mu i. И hotmote, что будет означать мое предсказание, где в моем обучении des данные вычитали все средства и поэтому, когда мы делаем прогнозы, и нам нужно добавить обратно в эти означает mu i для кино i. И так конкретно, если вы пользователь 5, который является Ева, тот же аргумент, как и sto предыдущий слайд все еще применяется в фильмы и , поэтому узнаваемый параметр для пользователя 5 все равно будет равным 0, 0. И так что мы собираемся получить то, что на конкретном фильме i мы будем будем предсказывать для Евы тета 5, транспонировать xi плюс добавить обратно в mu i и stots так что этот первый компонент является sporte будет равен нулю, если тета пять равно нулю. И так на фильме i, мы собираемся закончить предсказание mu i. И, это на самом деле имеет смысл. Это означает, что в фильме 1 мы собираемся предсказать Ева ставки 2,5. В фильме 2 мы прогнозируем Ева ставки 2,5. В фильме 3 мы будем предсказывать Ева ставки на 2 и так далее. Это на самом деле имеет смысл, потому что он говорит , что если Ева не оценила никаких фильмов, и мы просто ничего не знаем об этом новом пользователе Eve, то, что мы собираемся, чтобы сделать, это просто предсказать для stoth каждого из фильмов, каковы они средний рейтинг, что эти фильмы получили. Наконец, в стороне, в этом видео мы говорили о средней нормировании , где мы нормализовали каждую строку матрицы y, , чтобы иметь среднее 0. В случае, если у вас есть некоторые фильмы без оценок, так что это аналог пользователя, который ничего не оценил, , но в случае, если у вас есть некоторые фильмы без оценок, вы можете также играть с версиями алгоритма, где вы нормализуете различные столбцы, ноль, вместо нормализуя строки, чтобы иметь среднее ноль, хотя это, возможно, менее важно, потому что, если у вас действительно есть фильм без рейтинга , может быть, вы просто не должны рекомендовать этот фильм никому, в любом случае. И поэтому, заботясь о о случае пользователя, который не дал рейтинг , может быть более важным, чем заботиться о случай, когда номер фильма, который не получил ни одного рейтинга. Итак, чтобы резюмировать, вот как вы можете сделать нормализацию как своего рода шаг предварительной обработки для совместной фильтрации. В зависимости от вашего набора данных это может несколько раз заставить вашу реализацию работать немного лучше.
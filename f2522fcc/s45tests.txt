1
Тест по уроку
Total points 4
Question 1
Какой метод класса возвращает новый созданный объект?
v __new__
__create__
__init__
__get__
Question 2
Какой метод отвечает за происходящее в конце блока контекстного менеджера?
__delete__
__end__
v __exit__
__del__
Question 3
Какой метод отвечает за отображении объекта при вызове функции print?
__read__
__unicode__
v __str__
__print__
Question 4
Какой метод отвечает за обращение к объекту по индексу?
__getindex__
__getattr__
__getattribute__
__get__
v __getitem__
---
Тест по неделе
Total points 7
Question 1
Для чего нужны контекстные менеджеры?
v Они используются для определения логики в начале и конце блока кода
Они управляют переключением контекста между функциями
Они управляют переключением контекста между модулями
Question 2
Что такое дескриптор?
Описание класса
v Объект с методами __get__/__set__/__delete__
Функция с yield
Метод доступа к атрибутам класса
Question 3
Как закончить исполнение итератора?
v Выбросить исключение StopIteration
Вызвать метод __exit__
Вернуть None
Question 4
Для чего нужны метаклассы?
v Для управления процессом создания классов
Для создания дескрипторов
Для создания метаобъектов
Question 5
С помощью какого оператора можно получить значение из __enter__?
from
v as
to
Question 6
Метод setUp у наследующегося от TestCase класса
v вызывается перед запуском каждого тестового метода
v нужен для подготовки данных перед запуском тестов
вызывается перед запуском тестового класса
используется для объявления тестовых методов
Question 7
С помощью pdb можно
v выводить значения переменных
v пошагово выполнять программу
v ставить брейкпоинты
запускать тесты
---
w5
Процессы и потоки
Total points 5
Question 1
Все процессы работают в ОС
v последовательно, ОС занимается переключением контекста
параллельно, одновременно могут выполняться несколько процессов на одном ядре CPU
Question 2
Предположим вывод команды lsof для процесса с pid 1701:
lsof -p 1701
...
python3 1701 coursera  mem    REG    8,1   147688 781852 /lib/i386-linux-gnu/ld-2.23.so
python3 1701 coursera 0u   CHR  136,9      0t0     12 /dev/pts/9
python3 1701 coursera 1w   REG    8,1        0 545637 /home/coursera/log.txt
python3 1701 coursera 2u   CHR  136,9      0t0     12 /dev/pts/9
Стандартный вывод у процесса с pid 1701 – это
терминал
v файл /home/coursera/log.txt
отсутствует
область памяти в библиотеке ld-2.23.so
Question 3
Выделить истинные выражения:
выполнением Python потоков в Linux занимается процесс, в котором они запущены
v все потоки разделяют память процесса в котором они созданы
v выполнением Python потоков в Linux занимается операционная система
у каждого потока есть собственная память
v потоки в Python выполняются в рамках одного процесса, разделяя GIL
Question 4
Какие участки кода в Python могут выполняться без GIL?
Функции, занимающиеся вычислениями на CPU
Функции, выполняющиеся в ThreadPoolExecutor
v Вызовы сторонних библиотек на языке C
v Системные вызовы
Question 5
Что происходит с памятью в дочернем процессе?
Разделяется с родительским процессом
v Копируется из родительского процесса
---
Работа с сетью, сокеты
Total points 5
Question 1
Для чего нужны сокеты?
v Для организации взаимодействия процессов, работающих на разных серверах
Для хранения общих данных нескольких потоков, работающих на одном сервере
Question 2
Если программа сервер, работающая с сокетом, написана на языке, отличном от python, возможно написать программу клиент на python для отправки данных на сервер?
Нет
v Да
Question 3
Отметьте истинные утверждения: 
v контекстный менеджер позволяет контролировать закрытие сокетов
контекстный менеджер автоматически устанавливает новое соединение, если произойдет его разрыв
контекстный менеджер для сокета управляет скоростью чтения из сокета
v контекстный менеджер автоматически выполнит вызов метода close для открытого сокета
Question 4
Отметьте истинные утверждения:
v исключение типа socket.error генерируется при возникновении ошибок работы с сокетами на python
v socket timeout нужен для ограничения времени ожидания работы системных вызовов, связанных с сокетами
при возникновении socket.error сокет автоматически закрывается
socket timeout нужен для установки нового соединения
Question 5
Как можно обработать большое количество одновременных соединений к серверу?
Процессы и потоки не нужны, python автоматически обработает все соединения
v Создание отдельного процесса для каждого соединения
v Создание пула процессов и отдельных потоков для каждого соединения
v Создание отдельного потока для каждого нового соединения
---
Тест по неделе
Total points 14
Question 1
Системный вызов fork
используется для получения pid родительского процесса
используется для вызова функций в отдельных потоках
v используется для создания дочернего процесса
v создает точную копию родительского процесса
Question 2
Системный вызов fork
в родительском процессе вызов fork возвращает 0
v в дочернем процессе вызов fork возвращает 0
в дочернем процессе вызов fork возвращает pid родительского процесса
v в родительском процессе вызов fork возвращает pid дочернего
Question 3
Что происходит с памятью в дочернем процессе при работе с Python?
v Копируется из родительского процесса
Разделяется с родительским процессом
Question 4
Файловые дескрипторы в дочернем процессе
будут скопированы и переоткрыты
v будут скопированы
будут недоступны, их нужно переоткрыть заново
будут переоткрыты Python интерпретатором автоматически
Question 5
Выделить истинные выражения:
v предпочтительнее использовать контекстный менеджер для работы с блокировками в Python
v блокировки нужно брать в одном порядке, освобождать в обратном
блокировки нужно брать в одном порядке, освобождать в произвольном
блокировки нужно брать в одном порядке, освобождать строго в том же порядке
Question 6
Очереди замедляют процесс работы потоков Python, лучше использовать объекты блокировки
Да
v Нет
-Question 7
Выделить истинные выражения:
v GIL запрещает одновременное выполнение инструкций байткода в разных потоках
GIL замедляет выполнение главного потока управления в Python3, даже если нет других потоков
v GIL нужен для защиты памяти интерпретатора от разрушений
v GIL никак не влияет на выполнение отдельных процессов на Python3
Question 8
Если программа на Python выполняет много операций ввода вывода (IO-bound), то для ускорения ее работы нужно
создать отдельные процессы
v разбить ее на отдельные функции, выполнить их в потоках
Question 9
Если программа на Python выполняет операции вычисления, требующие только CPU (CPU-bound), то для ускорения ее работы нужно
разбить ее на отдельные функции, выполнить их в потоках
v создать отдельные процессы
Question 10
Генератор в Python – это
v функция в которой присутствует инструкция yield
инструкция yield
объект типа concurrent.futures.Future
специальный вызов yield from
Question 11?
Отметить все истинные утверждения:
v генератор хранит значение для генерации следующего элемента последовательности в локальных переменных
итератор прерывает свое выполнение на каждой итерации, сохраняя состояние локальных переменных
v итератор хранит значение для генерации следующего элемента последовательности в self
v исключение StopIteration используется для остановки работы итератора
Question 12
Отметить все истинные утверждения:
v из одной сопрограммы можно вызвать другую при помощи yield from
v сопрограмма может прерывать свою работу, сохраняя свое состояние и значения всех локальных переменных
исключения нельзя обрабатывать в сопрограммах, это нужно делать в основном потоке
сопрограммы исполняются в отдельных потоках параллельно
Question 13
Отметить все истинные утверждения, касающиеся asyncio event loop:
v выполняет все корутины последовательно, переключая контекст между ними
выполняет несколько корутин параллельно в разных потоках
позволяет выполнять функции и callable Python объекты
переключает контекст между Python-потоками
отвечает за выделение памяти в основном процессе
v позволяет выполнять корутины, зарегистрированные в нем
Question 14
Отметить все истинные утверждения:
v из объектов типа asyncio.Future можно создавать цепочки и дожидаться их выполнения в asyncio event loop
объект типа asyncio.Task выполняется в отдельном потоке управления, никак не влияя на выполнения других объектов типа asyncio.Task
блокирующий код в Python никак не повлияет на выполнение других корутин в asyncio event loop
v объект типа asyncio.Task хранит в себе связанную корутину и содержит статус ее выполнения
---
c2
Тест на знание PEP 8
Total points 5
Question 1
В каком блоке кода имеются нарушения правил отступа?
angle = translate_to_radians(object_height,
                             object_width)
unit_vectors = [
    [1, 0, 0],
    [0, 1, 0], 
    [0, 0, 1]]
v new_person = {"Name": "John", 
             "Surname": "Smith", 
             "Age": 31
             }
def add_user(
        login,
        password,
        email):
    database.append({"login": login,
                     "pass": password,
                     "email": email}) 
Question 2
Выберите вариант, который может использоваться как название функции в соответствии с соглашением об именах.
v getConvertedParameters
MAX_LENGTH
HTTPParser
Question 3
В каком блоке кода имеются нарушения в расстановке пробелов?
v a = np.zeros((5, 5), dtype = int)
n, m = input().split()
operators = {"plus": "+", "minus": "-", "mul": "*", "div": "/"}
c = (a+b) * (a-b)
Question 4
В каком блоке кода имеются нарушения PEP8?
weights = {
    "a": 45,
    "b": 37,
    "c": 11,
    "d": 23
}
v import os, time
total = fund
        + earned_money
        - spent_money
Question 5
В каком блоке кода нет нарушений PEP 8?
if n == 0 :
  print("No solution")
print(name[i], end = ", ")
height = rect.GetHeight()
v my_list = [1, 2, 3,
           4, 5, 6]
---
Зачем тестировать программы
Total points 6
Question 1
Проверка соответствия между реальным поведением программы и её ожидаемым поведением называется:
разработкой дизайна
программированием
документированием
v тестированием
Question 2
В чем главная цель работы тестировщика?
Найти максимальное количество ошибок.
v Повысить итоговое качество программного продукта.
Question 3
Качество программы определяется её:
v функциональностью
v надёжностью
v практичностью
v эффективностью
v переносимостью
v лёгкостью сопровождения
целями и задачами
Question 4
Тестировщик обязан:
v находить дефекты программы
делать их ясные описания в системе отслеживания ошибок
исправлять ошибки внутренней документации
составлять и уточнять требования к ПО
v создавать и хранить отчёты о тестировании
Question 5
Модульное тестирование — это
автоматизированное тестирование функциональности приложения
проверка корректности взаимодействия модулей друг с другом
v тестирование отдельных функций или классов модуля
Question 6
Отладка программы производится
пошаговым выполнением программы при помощи специальной программы-отладчика.
при помощи журналирования хода выполнения программы в момент возникновения ошибки.
v как при помощи программы отладчика, так и при помощи журналирования.
---
Использование контрактов
Total points 10
Question 1
Для чего необходимы утверждения assert в языке программирования?
Для отслеживания ошибок ввода.
Для передачи сообщений между частями программы.
v Для отслеживания контрактов функций, проверки инвариантов и контроля за недопустимыми состояниями объектов.
Question 2
Можно ли перехватывать исключение AssertionError?
Нельзя. Это не предусмотрено языком программирования.
Можно. Так же, как и любое другое исключение, его следует перехватывать и обрабатывать.
v Можно, но никогда не следует этого делать.
Question 3
Корректно ли такое использование утверждения?
x = int(input("Enter positive number, please: "))
assert x > 0, "Value should be positive!"
Да
v Нет
Question 4
Какой способ описания контракта правильный?
(При использовании библиотеки PyContracts)
@contract(x='float', returns='float,>=0')
def foo(x):
    pass
@contract
def foo(x):
    """ Function with contract.
        :type x: float
        :rtype: float,>=0
    """
    pass
@contract
def foo(x:'float') -> 'float,>=0':
    pass
v Подходит любой вариант из описанных выше.
Question 5
Дана функция gcd, вычисляющая наибольший общий делитель при помощи алгоритма Евклида.  
Сделайте проверку входных параметров функции при помощи assert. Оба параметра должны быть положительными целыми числами.  
assert a >= 0 and b >= 0 and type(a) == int and type(b) == int
def gcd(a, b):
  assert a='int,>=0',b='int,>=0'
  while b != 0:
    r = a % b
    b = a
    a = r
  return a
Reset
Question 6
Новый контракт при использовании библиотеки PyContracts:
Описывается как класс, являющийся наследником класса BaseContract.
Описывается как класс, который нужно передать функции new_contract.
v Описывается как функция или строка, которую нужно передать в качестве параметра функции new_contract, либо использовать new_contract как декоратор.
Способа создать новый контракт в библиотеке PyContracts нет.
Question 7
Какое предусловие выдвигает данный контракт к входному параметру x?
@contract
def foo(x:'list[>0]((float|int),>=1,<=1000)'):
    pass
v Параметр x должен быть непустым списком, состоящим из чисел в диапазоне от 1 до 1000. Числа могут быть целыми или дробными.
Параметр x должен быть непустым списком, содержащим положительные целые или дробные числа. При этом длина списка не должна превышать 1000.
Параметр x должен быть либо непустым списком, либо целым или дробным числом. В последнем случае число должно быть в диапазоне от 1 до 1000.  
Question 8
Какое предусловие выдвигает данный контракт к входному параметру y?
@contract
def foo(y: 'set[>0]((int,>0)|(float,<0))'):
    pass
v Параметр y должен быть непустым множеством, состоящим из положительных целых и отрицательных дробных чисел.
Параметр y должен быть непустым множеством, состоящим либо из положительных целых, либо из отрицательных дробных (не одновременно).
Параметр y должен быть непустым множеством, содержащим положительные или отрицательные числа. Допустимые типы чисел — целые и дробные.
Question 9
  Какое предусловие выдвигает данный контракт к входному параметру z?  
@contract
def foo(z: 'dict(int:)|dict(float:)'):
    return z
Параметр z должен быть словарём с числовым ключом. Числа допустимы как целые, так и дробные. Требований на тип хранимого по ключу значения не накладывается.  
v Параметр z должен быть либо словарём с ключами из целых чисел, либо словарём с ключами из дробных чисел. Требований на тип хранимого по ключу значения не накладывается.
---
Тест на модульное тестирование
Total points 5
Question 1
Что такое Test fixture в библиотеке unittest?
класс, описывающий тестовый случай
v среда исполнения теста
класс, позволяющий группировать тестовые случаи
группа запуска тестов
Question 2
Для того чтобы была выполнена проверка тестового случая...
v нужно импортировать библиотеку unittest
создать класс-потомок unittest.TestCase
v для проверки успешности прохождения теста использовать методы self.assert*
v метод, осуществляющий проверку, назвать test*
v запустить unittest.main() или создать и запустить свой TestRunner
Question 3
В одном тестовом методе можно осуществить проверку нескольких подслучаев, получая в результатах тестирования информацию по каждой, а не только по первой не пройденной проверке.
Для этого нужно:
несколько раз написать вызовы методов self.assertEqual()
v вызвать метод self.subTest() с любыми именованными параметрами
использовать логическую переменную, аккумулирующую результат всех проверок в подслучаях, и только один раз вызывать метод self.assertTrue()
Нет, это невозможно. Отдельные случаи, даже однотипные, нужно разделять на разные методы тестирующего класса.
Question 4
Для создания среды исполнения теста в классе тестового случая требуется создать методы:
setUp и setDown
tearUp и tearDown
v setUp и tearDown
tearUp и setDown
Question 5
В классе TestFactorization, потомке TestCase, создан метод test_simple_multipliers().
Требуется написать проверку того, что a умножить на b равно x, с использованием унаследованного от TestCase метода assertEqual.
(Обратите внимание, что импортировать библиотеку и запускать unittest.main() не требуется.)
class TestFactorization(unittest.TestCase):
    def test_simple_multipliers(self):
        x = 77
        a, b = factorize(x)
        ...
self.assertEqual(a*b, x)
---
w2
Объектно-ориентированное программирование
Total points 9
Question 1
Что относится к парадигмам ООП?
Методы
Классы
Абстракция
v Инкапсуляция
v Наследование
v Полиморфизм
Реализация
 Объекты
Рекурсия
Question 2
Как называются функции, относящиеся к классу?
v Методы
Поля класса
Функции
Операторы
Question 3
Что относится к достоинствам объектно-ориентированного программирования?
v Обновление отдельных компонентов системы
v Возможность повторного использования систем
v Структурированность кода
Простая отладка и тестирование
Легкость в освоении
Удобство в распараллеливании
Question 4
Вы пишете игру, в которой надо драться с противником. 
Объект "Противник"  и принадлежащий ему объект "Оружие" ссылаются друг на друга, ссылок из программы на оружие не существует. 
Когда герой побеждает противника, вы удаляете ссылку на противника из программы. Что, согласно механизму DECREF, при этом произойдет с объектом "Оружие"?
v Объект останется в памяти
Объект будет удален из памяти
Для ответа на вопрос недостаточно данных
Question 5
Что делает метод __init__(self)?
v Проводит начальную инициализацию объекта
Создает объект в памяти компьютера
Проводит сброс всех заполненных полей объекта до начального состояния
Создает в памяти переменные и методы класса
Question 6
Зачем нужен объект-класс?
v Содержит информацию о виде и способе создания некоторого объекта.
Шаблон, копиями которого является все другие объекты этого типа
Объектов-классов не существует
Question 7
Из чего состоит интерфейс?
v Собственные публичные поля класса
v Публичные поля родительского класса
Документация
Приватные поля класса
Приватные поля родительского класса
Question 8
Что описывает реализация?
v Внутреннее устройство объекта
Техническую документацию
Методы класса, доступные пользователю
Взаимодействие между объектами
Question 9
Из чего состоит реализация?
v-Собственные публичные поля класса
v-Публичные поля родительского класса
vv Приватные поля класса
vv Приватные поля родительского класса
---
Принципы и парадигмы ООП
Total points 9
Question 1
В чем смысл парадигмы полиморфизма?
v Она позволяет использовать методы производного класса, который не существует на момент создания базового 
Она позволяет скрывать некоторые данные от пользователя системы
Она позволяет корректно использовать методы класса-потомка вместо базового класса, не зная об этом.
Она предлагает добавлять в класс только существенную для системы информацию о прототипируемом  объекте, и не добавлять несущественную
Question 2
В чем заключается парадигма инкапсуляции?
v Она позволяет упаковать все данные и функции в некоторый единый компонент 
Она позволяет скрывать некоторые данные от пользователя системы  
Она позволяет реализовать класс, выполняющий одну определенную функцию
Позволяет сделать систему более гибкой
Question 3
Зачем применяется сокрытие данных объекта?
v Чтобы отделить пользовательский интерфейс объекта от служебных переменных и методов
v Чтобы защитить данные объекта от некорректного изменения
Чтобы другие программисты не могли создать такой же объект
Сокрытие данных не нужно
Question 4
Зачем применяются геттеры и сеттеры?
v Для реализации доступа к приватным атрибутам объекта
Геттеры и сеттеры не нужны
Для организации взаимодействия между объектами
Для повышения читаемости кода
Question 5
У класса MyClass есть скрытая переменная __private_variable. В программе создан объект my_object класса MyClass. Как можно получить доступ к его скрытому полю из кода программы?
my_object.__private_variable  
MyClass.__private_variable  
MyClass._my_object__private_variable
v my_object._MyClass__private_variable  
Question 6
Сколько существует принципов объектно-ориентированного программирования?
v 5
Question 7
Как формулируется принцип подстановки Барбары Лисков?
Классы должны быть закрыты для изменения, но открыты для расширения
Клиенты не должны зависеть от методов, которые они не используют
Объекты со схожим интерфейсом должны иметь общий надтип
v Функции,
которые используют базовый тип должны иметь возможность использовать его подтипы
не зная об этом    
Question 8
К чему может привести нарушение принципа открытости/закрытости?
Потеряется гибкость системы
Потеряется возможность повторного использования кода
v Изменится поведение частей программы, которые используют объекты измененного класса
Код станет менее читаемым
Question 9
Почему важно соблюдать принцип инверсии зависимостей?
vv Модули верхних уровней придется адаптировать к изменениям в модулях нижнего уровня
v-Исчезнет возможность повторного использования кода 
vv-Нарушится гибкость системы
vv-Модули нижних уровней придется адаптировать к изменениям в модулях верхнего уровня
---
Построение схемы наследования
Total points 9
Question 1
Что из родительского класса не наследуется потомком?
v Приватные переменные родительского класса
Публичные методы родительского класса
Публичные переменные родительского класса
Метод __init__
v Приватные методы родительского класса
Question 2
Что относится к сильным сторонам наследования?
Концентрация всей информации об объекте и его методах в одном классе
v Отсутствие необходимости переписывания всех классов-потомков при изменениях в базовом классе
Единый интерфейс для всех потомков базового класса
v Отсутствие необходимости дублировать код
Question 3
В чем заключается множественное наследование?
В системе существуют разные базовые классы, от которых наследуются разные классы-потомки
Все вышеперечисленное
v У одного класса-потомка есть несколько родительских классов
У одного родительского класса есть несколько классов-потомков
Question 4
Каким методом разрешается проблема Ромба Смерти?
v С3-линеаризация
Обход графа наследования в ширину
Обход графа наследования в глубину
Алгоритм Тарьяна
Question 5
Зачем нужны абстрактные классы?
v Для реализации полиморфизма
v Для создания классов, которые не предполагают создания экземпляров
Для решения проблемы Ромба Смерти
Абстрактные классы нигде не используются
-Question 6
Для чего применяются абстрактные методы?
-vvvv Чтобы предотвратить создание экземпляра класса
v---v Для указания конкретной реализации интерфейса на этапе выполнения кода
v-vvv Чтобы определить интерфейс, реализацию для которого необходимо реализовать в классах потомках
vv-v-Чтобы некоторый метод при наследовании был передан классу-потомку
-Question 7
Что позволяют делать виртуальные методы?
vv-vv Позволяют указывать конкретную реализацию интерфейса на этапе выполнения кода 
----v Позволяют определить функцию, которая может не иметь реализации
-vvvv Позволяют предотвратить создание экземпляра класса 
v-vvv Позволяют  определить интерфейс, реализацию для которого необходимо реализовать в классах потомках  
Question 8
Какая библиотека используется для работы с абстрактными классами и методами?
abstract
xyz
v abc
abs
Question 9
Что выведет приведенный ниже код?
from abc import ABC, abstractmethod
class A(ABC):
  def __init__(self):
    self.var1 = 5
    self.var2 = 7
  @abstractmethod
  def do_something(self):
a2
a9
v Ошибку, так как нет реализации абстрактного метода
  Ошибку, так как не определено значение var2 для B  
a12
---
UML-нотация
Total points 6
Question 1
Что такое UML?
Графическое представление некоторой системы
v Язык моделирования
Язык программирования
Диаграмма классов
Question 2
Что относится к типам UML-диаграмм?
v Диаграмма взаимодействия
v Диаграмма развертывания
Диаграмма рассеяния
Биржевые диаграммы
v Диаграмма классов
Question 3
Что не относится к элементам UML-диаграмм
Текст
v Изображение
Фигура
Линия
Рамка
Question 4
Как обозначаются приватные атрибуты классов в UML-диаграммах?
Символом +  
Символом #  
Символом *  
v Символом -
Question 5
Какой стрелкой на UML диаграммах обозначается имплементация?
.----->
.- - ->
v .- - -|>
.-----|>
Question 6
Что обозначается на-UML диаграммах следующей стрелкой:
<>---------
v Агрегация 
Композиция
Наследование
Зависимость
---
w3
Паттерны проектирования
Total points 7
Question 1
Для чего используются паттерны проектирования?
Для улучшения читаемости кода
v Для решения часто встречающихся на практике задач
Для улучшения производительности программ
Для создания хороших схем наследования
Question 2
В какой книге впервые описано применение паттернов в программировании?
Patterns of Enterprise Application Architecture
A Pattern Language: Towns, Buildings, Construction
Design Patterns Explained
v Design Patterns: Elements of Reusable Object-Oriented Software
Question 3
В чем преимущество использования паттернов перед написанием кода "с нуля"?
v Использование проверенных временем решений
v Адаптируемость паттернов под задачи
v Все возможные ошибки исправлены поколениями программистов
Question 4
Как называются самые низкоуровневые паттерны
v Идиомы
Примитивы
Архитектурные шаблоны
Рецепты
Question 5
Какие из указанных паттернов относятся к структурным паттернам?
v Декоратор
v Компоновщик
Цепочка обязанностей
Одиночка
Наблюдатель
Абстрактная фабрика
v Фасад
Хранитель
Question 6
Какие из указанных паттернов относятся к поведенческим паттернам?
v Наблюдатель
Абстрактная фабрика
v Хранитель
Фасад
Декоратор
Компоновщик
v Цепочка обязанностей
Одиночка
Question 7
Для чего применяются порождающие шаблоны?
v Используются при создании различных объектов    
Модифицируют структуру объектов    
Описывают способы реализации взаимодействия между объектами различных типов    
---
w1
Тест по основам сетевого взаимодействия (тренировочный)
Total points 4
Question 1
Что такое интерфейс?
v Набор примитивных операций, которые нижний уровень предоставляет верхнему
Правила и соглашения, используемые для связи уровня N одного компьютера с уровнем N другого компьютера
Question 2
Какие уровни относятся к модели OSI?
v прикладнои?
v канальныи?
v сетевои?
v уровень представления
v транспортныи?
уровень сетевых интерфейсов
v физическии?
v сеансовыи?
Question 3
За какие функции отвечает прикладной уровень стека TCP/IP
Передача данных с тои? степенью надежности, которая необходима
v Обеспечивает доступ к разделяемым ресурсам
Перемещение пакетов в пределах всеи? составнои? сети
Организация взаимодействия с подсетями разных технологий, входящими в составную сеть
Question 4
Какие свойства имеет протокол UDP?
v Является протоколом транспортного уровня
v Обеспечивает корректную доставку (без ошибок внутри пакета, но пакет может потеряться)
Является протоколом сетевого уровня
Обеспечивает гарантированную доставку всех переданных данных
Работает с установлением логического соединения
v Работает без установления логического соединения
Является масштабируемым средством передачи пакетов в составных сетях
---
Тест по основам сетевого взаимодействия
Total points 5
Question 1
Что такое протокол?
Набор примитивных операций, которые нижний уровень предоставляет верхнему
v Правила и соглашения, используемые для связи уровня N одного компьютера с уровнем N другого компьютера
Question 2
Какие уровни относятся к стеку TCP/IP?
v прикладнои?
v транспортныи?
представительныи?
v сетевои?
физическии?
мультиканальныи?
v уровень сетевых интерфейсов
сеансовыи?
Question 3
За какие функции отвечает уровень сетевых интерфейсов стека TCP/IP?
Передача данных с тои? степенью надежности, которая необходима
Обеспечивает доступ к разделяемым ресурсам
Перемещение пакетов в пределах всеи? составнои? сети
v Организация взаимодействия с подсетями разных технологий, входящими в составную сеть
Question 4
Какие свойства имеет протокол TCP?
Является масштабируемым средством передачи пакетов в составных сетях
Обеспечивает корректную доставку (без ошибок внутри пакета, но пакет может потеряться)
Является протоколом сетевого уровня
Работает без установления логического соединения
v Работает с установлением логического соединения
v Является протоколом транспортного уровня
v Обеспечивает гарантированную доставку всех переданных данных
Question 5
Какие поля в TCP пакете обеспечивают надежную доставку данных?
v Контрольная сумма
Порт источника и отправителя
Флаги
Указатели срочности
Окно
v Номер в последовательности, номер подтверждения
Question 6
Какие свойства имеет протокол IP?
v Является масштабируемым средством передачи пакетов в составных сетях
v Является протоколом сетевого уровня
Обеспечивает корректную доставку (без ошибок внутри пакета, но пакет может потеряться)
Обеспечивает гарантированную доставку всех переданных данных
Является протоколом транспортного уровня
---
Тест по HTTP + DNS (тренировочный)
Total points 6
Question 1
Как DNS обеспечивает надежность?
v За зону отвечает несколько серверов
На других узлах DNS (которые не отвечают за эту зону) дублируется информация
Question 2
Какая DNS запись содержит текстовую информацию?
SOA
MX
CNAME
A
PTR
NS
AAAA
v TXT
Question 3
Поверх какого протокола работает HTTP?
v TCP
UDP
Question 4
Из чего состоит стартовая строка HTTP запроса?
v Метода
Тела
v Версии протокола
Заголовков
Пути
Question 5
Какие функции выполняет заголовок Content-Type HTTP запроса?
перечень поддерживаемых кодировок
информация о клиенте
число символов, содержащихся в теле запроса
URL, откуда перешел клиент
MIME-типы данных, обрабатываемых клиентом
доменное имя или IP-адрес узла, к которому обращается клиент
v MIME-тип данных, содержащихся в теле запроса
Question 6
Какие функции выполняет заголовок Cache-Control HTTP ответа?
v директива управления кэшированием
MIME-тип данных, содержащихся в теле ответа сервера
дата и время, когда информация станет устаревшей
дата и время последнего изменения ресурса
число символов, содержащихся в теле ответа сервера
имя и номер версии сервера
Тест по HTTP + DNS (тренировочный)
Total points 6
Question 1
Как DNS обеспечивает надежность?
v За зону отвечает несколько серверов
На других узлах DNS (которые не отвечают за эту зону) дублируется информация
Question 2
Какая DNS запись отвечает за электронную почту?
PTR
AAAA
v MX
A
NS
SOA
CNAME
TXT
---
Тест по HTTP + DNS
Total points 7
Question 1
Для чего служит DNS?
Только определять по названию домена IP адрес
Только определять по IP адресу название домена
v Получать различную информацию о домене
Только получать текстовую информацию о домене
Question 2
Какую информацию хранит узел DNS?
информация со всех узлов
v данные, которые входят в зону его ответственности
v кешированные данные с других узлов
Question 3
Какая DNS запись отвечает за IPv4 адрес хоста?
AAAA
NS
TXT
v A
CNAME
SOA
PTR
MX
Question 4
К какому уровню относится протокол HTTP?
v прикладнои?
представительныи?
сеансовыи?
транспортныи?
сетевои?
канальныи?
физическии?
Question 5
Выберите HTTP корректный запрос?
v GET / HTTP/1.1
User-Agent: curl/7.34.0
Host: 127.0.0.1:8088
Accept: /
HTTP/1.1 404 Not Found 
Date: Sun, 18 Mar 2018 12:30:50 GMT 
Server: WSGIServer/0.2 CPython/3.6.1 
Content-Type: text/html 
Content-Length: 0
Question 6
Какие функции выполняет заголовок Accept-Charset HTTP запроса?
MIME-типы данных, обрабатываемых клиентом
число символов, содержащихся в теле запроса
MIME-тип данных, содержащихся в теле запроса
v перечень поддерживаемых кодировок
доменное имя или IP-адрес узла, к которому обращается клиент
информация о клиенте
URL, откуда перешел клиент
Question 7
Какие функции выполняет заголовок Content-Type HTTP ответа?
директива управления кэшированием
число символов, содержащихся в теле ответа сервера
дата и время, когда информация станет устаревшей
имя и номер версии сервера
дата и время последнего изменения ресурса
v MIME-тип данных, содержащихся в теле ответа сервера
---
Тест по регулярным выражениям
Total points 4
Question 1
В каких из приведенных ниже строк выражение re.search(r"[a-z]\d[a-z][\da-z]", sw) найдет хоть какое-то соответствие?
v sw = "r2d2"
v sw = "c3po"
sw = "luke"
v sw = "f0rce"
v sw = "ev9d9"
sw = "bb8"
Question 2
Какие из регулярных выражений, если мы используем их в re.findall(exp, "мама вымыла 2 рамы"), найдут ровно два соответствия?
exp = r"\d+"
v exp = "мы"
v exp = "....мы"
v exp = r"а.\D"
exp = "м.*ы"
exp = "м.+?ы"
exp = "м.*?ы"
Question 3
Напишите регулярное выражение, которое с помощью re.findall найдет все последовательности цифр в строке. Например, для строки a123b45с6d должно вернуться ['123', '45', '6']
def find_all_digits(text):
    exp = r'\d+'  #Тут напишите своё регулярное выражение  
    return re.findall(exp, text)
Reset
Question 4
Придумайте и напишите строку, которая удовлетворит регулярному выражению:
^\W\d{2}\s?\.([abc\d])\1\1$
Разложите регулярное выражение на составляющие, убедитесь что вы знаете все найденные специальные символьные классы и квантификаторы, и помните что такое группы и обратные ссылки. Подумайте, строка какой длины может удовлетворить регулярному выражению. Если ничего не помогает, сходите на regex101.com и потренируйтесь там
,11 .aaa
---
w2
Тест по сбору данных
Total points 3
Question 1
Каким методом (учитывая простоту, надежность и понятность кода) будет лучше получить фамилию пользователя VK с его странички?
Вытащить из профиля регулярным выражением
Найти с помощью BS элемент с class_="page_name" и получить его текст
Обратиться к API Вконтакте, и получить фамилию в отдельном поле JSON
v Использовать python-модуль vk
Question 2
Как найти все теги <a href="...">  на странице и получить ссылки из них в виде списка, а другие теги и теги <a> без href проигнорировать?
v re.findall('<a[^>]+href="([^"]+)', html)
[a['href'] for a in soup('a')]
v [a['href'] for a in soup.select('a[href]')]
Question 3
У каких из этих сайтов/компаний есть какое-нибудь web api? 
v maps.yandex.ru
v facebook.com
v gismeteo.ru
v avito.ru
---
Тест по хранению данных
Total points 9
Question 1
Есть данные, на подсчет которых тратится относительно много ресурсов, но их нужно отображать на каждой странице сайта. Как называется способ, который поможет ускорить отображение этих данных и сократить потребление ресурсов?
Enter answer here
кэширование
Question 2
Что из этого потеряет все данные при перезагрузке сервера?
Redis
MySQL
v Словарь в Python 
MongoDB
v Memcache
Question 3
Вы проектируете базу данных поликлиники. Помимо прочего, у вас есть таблица лекарственных препаратов и таблица пациентов. Врач может назначать препараты пациентам и это запоминается в базе. Какой вид связи будет между этими двумя таблицами?
один к одному
один ко многим
v многие ко многим
Question 4
Каким общим словом называются базы данных, содержащие таблицы, состоящие из рядов однотипных данных?
Enter answer here
sql
реляционные
Question 5
Что такое ACID в контексте реляционных баз данных?
Это акроним от "Реляционные Системы Управления Базами Данных", в английском написании
СУБД придумали в конце 60х, поэтому ACID означает Lysergic acid diethylamide
v Это акроним от "Атомарность, Согласованность, Изолированность, Устойчивость" в английском написании
Question 6
В середине незавершенной транзакции, когда часть действий по обновлению данных была выполнена, произошла ошибка. Из-за ошибки транзакция прервется и в базу попадут... 
... только те изменения, которые произошли в транзакции после возникновения ошибки
... все изменения, произошедшие внутри транзакции, кроме тех, которые непосредственно вызвали ошибку
... только те изменения, которые произошли в транзакции до возникновения ошибки
... только те изменения, которые вызвали ошибку
v ... не попадут вообще никакие изменения, произошедшие в транзакции
Question 7
В таблице пользователей создан составной индекс по трем колонкам: is_active, gender, age. Какие из выборок будут использовать индекс?
v Все активные пользователи: is_active=1
v Все неактивные женщины: is_active=0 AND gender="F"
v Все активные мужчины, которым больше 30 лет: is_active=1 AND gender="M" AND age>30
Все пользователи старше 50 лет: age>50
Все мужчины: gender="M"
Question 8
У вас есть таблица пользователей, в ней ровно 1 000 000 записей и нет индексов. В этой таблице есть ровно 20 человек, у которых age=35, и вы делаете зарос к БД, где отбираете все записи, в которых age=35. Сколько записей просмотрит база данных в процессе выполнения запроса?
от 20 до 1 000 000
не больше 1 000 000
ровно 20
v ровно 1 000 000
Question 9
Выберите верные утверждения
NoSQL базы хуже чем SQL, но зато проще
v NoSQL и SQL базы данных могут использоваться в одном проекте
NoSQL базы лучше чем SQL, но сложнее
Redis – мощная bigtable-подобная база данных
MySQL – распространенное хранилище ключ-значение
v NoSQL решения, как правило, хорошо масштабируются
---
Тест по Redis
Total points 9
Question 1
Команда hmset добавляет
несколько элементов в список
v несколько элементов в хеш
несколько элементов в множество
один элемент в множество
один элемент в список
Question 2
Команда sinter в Redis
определяет целое число
определяет целое число со знаком
v находит пересечение множеств
вычисляет синус угла
Question 3
zrangebyscore user 2 6 limit 1 2 позволяет
v получить 2 и 3 пользователя из тех, у которых score от 2 до 6
получить 1 и 2 пользователя из тех, у которых score от 2 до 6
получить 2 и 6 пользователя из тех, у которых score от 1 до 2
ой, всё!
получить от 2-ого до 6-ого пользователя из тех, у которых score от 1 до 2
Question 4
Извлечь значение из конца списка можно с помощью
rpush
v rpop
lpush
lpop
Question 5
Что из этого является типом данных Redis?
v Список (List)
v Строка (String)
v Хеш (Hash)
Гео-данные (Spatial)
Целое число (Integer)
v Множество (Set)
Индекс (Index)
Question 6
Максимальный размер ключа в Redis составляет
v 512 MB
Question 7
Команда exists
Узнаёт, сколько осталось "жить" ключу
Создаёт ключ
v Проверяет существование ключа
Немедленно выходит из redis
Question 8
Redis может выполнять на сервере код на языке
Swift
v Lua
Python
Scala
Perl
Lisp
Question 9
Какая из команд увеличит счетчик на 1?
v incr a
inc a
v decrby a -1
v incrby a 1
dec a
decr a
---
w4
Тест по сетевому взаимодействию и web-фреймворкам (тренировочный)
Total points 2
Question 1
Какие функции выполняет model?
Обработка запросов пользователя и вызов соответствующих ресурсов
Формирование ответа в конкретном формате
v Интеграция со слоем данных
Question 2
Какие фреймворки являются синхронными?
v Django
v Flask
Tornado
Aiohttp
----
Тест по сетевому взаимодействию и web-фреймворкам
Total points 3
Question 1
Что такое MVC?
v Шаблон проектирования. Является способом разделения данных приложения, пользовательского интерфейса и управляющей логики.
Шаблон проектирования. Является способом доступа к данным реляционных баз данных в объектно-ориентированном программировании.
Шаблон проектирования пользовательского интерфейса, который был разработан для облегчения модульного тестирования и улучшения разделения ответственности в презентационной логике
Question 2
Какие функции выполняет controller?
v Обработка запросов пользователя и вызов соответствующих ресурсов
Формирование ответ в конкретном формате
Интеграция со слоем данных
Question 3
Какие фреймворки являются асинхронными?
Django
Flask
v Tornado
v Aiohttp
----
Тест по HTML (тренировочный)
Total points 3
Question 1
Какой тег/теги отвечаетют за загрузку JS?
title
body
html
meta
link
v script
head
Question 2
Какие теги являются строчными?
v a
div
h1, h6
v span
v img
p
Question 3
Укажите особенности строчных элементов?
запрещено вставлять элемент внутрь строчного.
v внутрь элементов допустимо помещать текст или строчные элементы.
высота элемента вычисляется браузером автоматически, исходя из содержимого.
v cвойства, связанные с размерами (width, height) не применимы.
v ширина равна содержимому плюс значения отступов, полей и границ.
v несколько элементов идущих подряд располагаются на одной строке и переносятся на другую строку при необходимости.
по ширине элементы занимают всё допустимое пространство.
элементы располагаются по вертикали друг под другом.
----
Тест по HTML
Total points 4
Question 1
Для чего указывается DOCTYPE в начале HTML документа?
v указывает HTML парсеру, как правильно разбирать данныи? документ
указывает кодировку HTML документа
указывает MIME-тип данных
Question 2
Какой тег отвечает за указание связанных ресурсов, например, CSS?
title
script
head
html
v link
meta
body
Question 3
Какие теги являются блочными?
v p
v h1, h6
v div
img
span
a
Question 4
Укажите особенности блочных элементов?
несколько элементов идущих подряд располагаются на одной строке и переносятся на другую строку при необходимости.
v высота элемента вычисляется браузером автоматически, исходя из содержимого.
v запрещено вставлять элемент внутрь строчного.
внутрь элементов допустимо помещать только текст или строчные элементы.
cвойства, связанные с размерами (width, height) не применимы.
ширина равна содержимому плюс значения отступов, полей и границ.
v элементы располагаются по вертикали друг под другом.
v по ширине элементы занимают всё допустимое пространство.
----
Тест по CSS (тренировочный)
Total points 9
Question 1
Напишите с помощью какого тега можно подключить файл со стилями?
link
Enter answer here
Question 2
Напишите селектор для всех тегов p?
p
Enter answer here
Question 3
Напишите селектор для тегов div с классом fff?
div.fff
Enter answer here
Question 4
Укажите псевдокласс для непосещенной ссылки?
v a:link
div:hover
li:first-child
a:visited
Question 5
Укажите какого цвета будет "element"?
#fff { color: #f00 }
.bbb { color: #0f0 }
<div id="fff" class="bbb">element</div>
#f00
Enter answer here
Question 6
Что является модификатором в методологии БЭМ? (Указать стиль)
<div class="list">
   <div class="list__item">1</div>
   <div class="list__item">2</div>
   <div class="list__item list__item_red">3</div>
</div>
list
list__item
v list__item_red
Question 7
Выберите CSS свойство, позволяющее скрыть элемент.
v display
disappear
hide
show
Question 8
Укажите CSS свойство, позволяющее изменять прозрачность элементов.
display
v opacity
transparency
Question 9
Укажите CSS свойство и значение, которые преобразуют элемент в блочный?
position: fixed
float: left
display: inline
v display: block
display: none
float: right
position: absolute
display: inline-block
----
Тест по CSS
Total points 12
Question 1
Выберите синтаксически корректное CSS правило.
div: font_size-2em
div font-size:2em
v div {font-size:2em}
div {font_size:2em}
Question 2
Напишите с помощью какого тега можно определить стили внутри HTML документа?
style
Enter answer here
Question 3
Напишите селектор для тега с идентификатором fff?
#fff
Enter answer here
Question 4
Напишите селектор для тегов с классом fff, которые находятся внутри div?
div .fff
Enter answer here
Question 5
Напишите селектор для тегов h1 h2?
h1, h2
Enter answer here
Question 6
Напишите селектор для тегов, у которых есть класс fff и класс bbb?
.fff.bbb
Enter answer here
Question 7
Укажите псевдокласс для элемента, на который наведена мышь?
v div:hover
a:link
li:first-child
a:visited
Question 8
Укажите какого цвета будет “element”?
.bbb { color: #f00 }
.bbb { color: #0f0 }
<div id=“fff” class=“bbb”>element</div>
#0f0
Enter answer here
Question 9
Что является элементом в методологии БЭМ? (Указать стиль)
<div class=“list”>
   <div class=“list__item”>1</div>
   <div class=“list__item”>2</div>
   <div class=“list__item list__item_red”>3</div>
</div>
list
v list__item
list__item_red
Question 10
Укажите CSS свойство, позволяющее устанавливать размер шрифта?
font-weight
v font-size
size
weight
Question 11
Укажите CSS свойство, которое позволяет изменять фон?
v background-color
bgcolor
color
Question 12
Укажите CSS свойство и значение, которые преобразуют элемент в блочный, не разрывающий строку?
v display: inline-block
display: inline
display: none
position: fixed
position: absolute
float: left
float: right
display: block
----
Отправка данных
Total points 9
Question 1
Какие методы HTTP существуют?
v GET
v POST
v PUT
REMOVE
MAKE
Question 2
Какой метод является идемпотентным?
Если при повторном идентичном запросе невозможно предугадать, изменится ли состояние сервера.
v Если повторный идентичный запрос имеет тот же эффект, не изменяя состояние сервера.
Если повторный идентичный запрос изменяет состояние сервера.
Question 3
Какие из перечисленных методов являются идемпотентными?
v DELETE
POST
v GET
v PUT
Question 4
Каким образом можно передать данные из браузера пользователя на сервер?
v Через тело запроса
v Через заголовок запроса
v Через query string
Question 5
Как называется тег для поля ввода данных в форме?
input
Enter answer here
Question 6
Какой способ кодирования данных формы (enctype) нужно использовать, если в форме отправляется файл?
v multipart/form-data
application/x-www-form-urlencoded
text/plain
Question 7
Как согласно архитектурному стилю REST могут выглядеть путь и метод точки API, отвечающей за создание товара в каталоге товаров?
/users/:id (PUT)
v /goods/ (POST)
/goods/:id (GET)
v /shop/:id/catalog/:id (PUT)
Question 8
Каким факторам соответствует следующий тег?
<form action="/data" enctype="multipart/form-data">
Форма будет отправлена методом GET.
-v Форма будет отправлена методом POST.
v В форме можно отправить файл.
Форма будет отправлена на тот же ресурс, на котором находится форма.
Question 9
Каким факторам соответствует следующий тег?
<input id="grade" type="number" name="grade" max="100">
Если значение, введенное в этом поле ввода, будет равно 100, то форма не будет отправлена.
Минимальное значение вводимого числа равно нулю.
Поле ввода будет иметь описание в виде слова "grade", видимого пользователю.
v Это поле для ввода числа.
----
Обработка данных на сервере
Total points 9
Question 1
В экземпляре какого класса фреймворка Django хранятся данные из querystring и тела запроса?
QuerySet
View
HttpResponse
v HttpRequest
Question 2
Какой из перечисленных URL содержит корректный querystring?
http://example.com/get?name=chris brown
v http://example.com/get?name=%D0%91%D1%80%D1%8E%D1%81&surname=%D0%9B%D0%B8
v http://example.com/there?name=ivan&surname=ivanov
http://example.com/get?name=Антон&surname=Чехов
Question 3
Какие из перечисленных критериев проверяются на серверной стороне?
v Данные подходят под логические ограничения
v Данные не повреждены или частично утеряны
v Данные пришли из ожидаемого источника
v Обработка данных не приведет к неожиданному выполнению кода
Question 4
Какие функции выполняет Django Form?
v Загружает валидированные данные в модель
v Валидирует набор данных
v Рендерит форму в html код
Сериализует данные в словарь из модели
v Генерирует человекочитаемые сообщения при ошибках валидации
Question 5
Какой набор данных пройдет валидацию в этой форме?
class ProductForm(forms.Form):
    uid = forms.CharField(label='Идентификатор', max_length=10)
    title = forms.CharField(label='Наименование', max_length=100)
    price = forms.DecimalField(
      label='Цена', max_value=10000, decimal_places=2, required=False
    )
-v {'uid': 'ABC-DEF', 'title': '', 'price': '205.12'}
-v {'uid': 'ABC-DEF-123', 'title': 'sunglasses', 'price': '205.10'}
v {'uid': 'ABC-DEF', 'title': 'sunglasses', 'price': '205.1'}
{'uid': 'ABC-DEF', 'title': 'airplane', 'price': 100000000.12}
v {'uid': '123-DEF', 'title': 'spoon', 'price': 12}
Question 6
Какие функции выполняет jsonschema?
Рендерит форму в html код
v Генерирует человекочитаемые сообщения при ошибках валидации
Загружает валидированные данные в модель
Сериализует данные в словарь из модели
v Валидирует набор данных
Question 7
Какой набор данных пройдет валидацию в этой схеме?
{
  "title": "Book",
  "type": "object",
  "properties": {
    "title": {
      "type": "string"
    },
    "author": {
      "type": "object",
      "properties": {
{"title": "War and Peace", "author": "Lev Tolstoy"}
v {"title": "Divine Comedy", "author": {"firstName": "Dante", "lastName": "Alighieri"}, "year": 1320}
v {"title": "Odyssey", "author":   {"firstName": "Homer"}}
v {"title": "Don Quixote"}
Question 8
v Какие функции выполняет marshmallow?
v Сериализует данные в словарь из модели
v Валидирует набор данных
Рендерит форму в html код
v Генерирует человекочитаемые сообщения при ошибках валидации
Question 9
Какой набор данных пройдет валидацию в этой marshmallow схеме?
class CarSchema(Schema):
    brand = fields.Str(validate=Length(3, 10), required=True)
    power = fields.Int(validate=Range(1, 1000))
    year = fields.Int(validate=Range(min=1769), required=True)
{"brand": "horse", "power": 1}
v {"brand": "VAZ", "power": 64, "year": 1970, "model": "2101"}
{"brand": "cart", "power": 1, "year": 1}
{"brand": "bugatti", "model": "veyron", "power": 1001}
v {"brand": "GAZ", "year": 1956}
----
Аутентификация и авторизация
Total points 6
Question 1
Что такое аутентификация?
v Это процесс проверки подлинности пользователя или данных
Это процесс проверки прав пользователя на доступ к объекту
Это передача пользовательских данных на сервер
Получение данных о пользователе с сервера
Question 2
Что такое авторизация?
v Это процесс проверки прав пользователя на доступ к объекту
Это передача пользовательских данных на сервер
Это процесс проверки подлинности пользователя или данных
Получение данных о пользователе с сервера
Question 3
Что из нижеперечисленного можно использовать для реализации аутентификации пользователя?
v Отпечатки пальцев пользователя
Текущее время в часовом поясе, в котором находится пользователь
v Устройство, например мобильный телефон
v Пароль
Question 4
Приложение django.contib.auth помогает реализовать...
Авторизацию
v Аутентификацию
v Форму входа для пользователя
v Управление правами пользователей
Question 5
Для чего можно использовать HTTP cookie?
v Для передачи информации для аутентификации пользователя
v Для отслеживания действий пользователей
Для валидации данных
v Для передачи информации, связанной с настройками пользователя
Question 6
Для чего используется класс ListView в Django?
v Для отображения списков объектов
Для аутентификации
v Для отрисовки шаблонов
Для создания новых объектов
----
w6
Создание простого бота
Total points 3
Question 1
Как происходит обмен сообщениями между пользователем и кодом бота?
Напрямую, через HTTP запрос из клиента мессенджера
v Через сервер мессенджера
Question 2
Можно ли написать бота без специализированных пакетов от создателей мессенджера?
v Да, с помощью встроенных в Python пакетов работы с сетью
Нет, для этого нужны специализированные пакеты
Question 3
Как правильно запустить бота, сохраненного в переменной bot?
bot.run()
v bot.polling()
start(bot)
----
Кнопки и меню
Total points 3
Question 1
Какое основное отличие между InlineKeyboardMarkup и ReplyKeyboardMarkup
v Reply отправляет сообщение, а Inline нет
Reply позволяет делать больше кнопок
Question 2
Чем callback_data отличается от text в InlineKeyboardButton?
v Поле text может быть большего размера
v Поле callback_data не видно пользователю
Поле callback_data не может повторяться в разных кнопках
Question 3
Какой тип клавиатуры больше подходит для групповых чатов?
v InlineKeyboardMarkup
ReplyKeyboardMarkup
----
Тест по Git
Total points 4
Question 1
Чтобы поместить папку и ее подпапки под контроль git, нужно внутри этой папки выполнить команду
v git init
git monitor
git control
git start
git commit
Question 2
git-репозиторий можно создать
Только в пустой папке, а уже затем добавлять в нее файлы
Только в папке с файлами, потому что пустые папки git игнорирует
v В любой - и в пустой и в папке в которой уже есть какие-то файлы
Question 3
Переключиться в уже существующую ветку my-feature можно командой:
git switch my-feature
v git checkout my-feature
git commit my-feature
git checkout -b my-feature
git branch my-feature
Question 4
Отправить изменения из локальной ветки в удаленную можно командой:
git pull
git commit
git send
git branch
git remote
v git push
----
Тест по Production
Total points 6
Question 1
Можно ли хранить пароль от production базы данных в config файле, который лежит в git?
v Нет. Секретные данные не следует хранить вместе с кодом
Да. Репозиторий может быть приватным
Question 2
Что из этого облачные платформы?
v DigitalOcean
v Amazon AWS
v Microsoft Azure
v Google App Engine
v Heroku
Question 3
Как лучше подготавливать проект для production?
Запускать тесты и сборку локально, коммитить результат в git, а на production руками делать git pull и перезапускать сервисы. Так каждый шаг под вашим контролем и легко откатиться на предыдущую версию, если что-то пошло не так.
Написать bash скрипт, который запустит все тесты и сборку, отправит файлы по ssh на боевые сервера и перезапустит на них сервисы.
v Использовать CI/CD инструменты типа Jenkins или Gitlab CI, которые автоматически, при определенных условиях, запустят тесты, сборку, и выкладку на production.
Question 4
Stage сервера нужны для
Сборки проекта
v Финального тестирования
Хранения кода 
Разработки проекта
v Резервирования боевых серверов
Question 5
Модуль django_heroku нужен для
Упрощения загруки django на heroku
Интеграции интерфейса heroku в админку django
Запуска django на heroku
v Упрощения конфигурации django для heroku
Question 6
Выберите наиболее точный ответ. На heroku можно запустить приложение:
на Django
любое на Python
v на разных языках и фреймворках
----

----
----
----

2
3
4
5
6
7
8
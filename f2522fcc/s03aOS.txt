101 Week1 Navigating the System
Welcome to the Operating Systems course of the IT Support Professional Certificate! In the first week of this course, we will cover the basics of Windows and Linux operating systems (OS). We will learn about how directories and files work in Windows and Linux OS. You will also learn practical ways to manipulate files and directories in the Windows graphical user interface (GUI), Windows command line interface (CLI), and Linux shell. By the end of this module, you will interact with files and directories and perform basic text manipulation in Windows and Linux OS.
102 Course Introduction5мин
103 Lesson Overview & Practice Tips2мин
Windows
GUI (Graphical User Interface)
CLI (Command Line Interpreter)
The command line interpreter in Linux is called a shell, and the language that we’ll use to interact with this shell is called Bash.
Basic Operating System Navigation
Navigating from one directory to another
Getting file information
Removing files and directories

File and Text Manipulation
Searching through your directories
Find a specific file
Copying and pasting
Chaining commands

104 List Directories in a GUI5мин
In Windows, filesystems are assigned to drive letters, which look like C:, or D:, or X

The root directory of C: would be written C:\, and the root directory of X: would be written X:\.

Subdirectories are separated by backslashes (\), unlike Linux, which uses forward slashes (/).

105 Windows: List Directories in CLI4мин
Command Prompt: cmd.exe
PowerShell: powershell.exe

Aliases
ls
Parameter

The C: drive root folder is what we call a parent directory and the contents inside are considered child directories.

Get-Help ls
Get-Help Is -Full
-Force

106 Linux: List Directories6мин
root directory /
home directory ~
/home/cindy/ Desktop
Similar to Windows command parameters, a flag is a way to specify additional options for a command.
ls -l -a /
ls -la /
This is the same thing as: ls -l -a /. Both work the exact same way.
The -a or all flag shows all files including hidden ones.

107 Windows: Changing Directories in the GUI1мин
An absolute path is one that starts from the main directory. A relative path is the path from your current directory.

108 Windows: Changing Directories in the CLI4мин
pwd
cd ~
cd ..
Tab completion

109 Linux: Changing Directories in Bash1мин
pwd
cd ~/Desktop

110 Windows: Make Directories in the GUI & CLI2мин
mkdir my_cool_folder
mkdir 'my cool folder'
mkdir my` cool` folder

111 Linux: Make Directories in Bash1мин
mkdir my\ cool\ folder
mkdir 'my cool folder'

112 Windows: Command History2мин
history
Ctrl-R
#mkdir folder
clear

113 Linux: Command History47

114 Windows: Copying Files & Directories4мин
cp mycoolfile.txt C:\Users\cindy\Desktop\

Wildcard
A character thats used to help select files based on a certain pattern
cp	Pictures C:\Users\cindy\Desktop\
cp	C:\Users\cindy\Desktop\ -Recurse -Verbse

115 Linux: Copying Files and Directories1мин
cp -r 'Cat Pictures' ~/Desktop

116 Windows: Moving and Renaming Files, Directories2мин
mv .\blue_document.txt yellow_document.txt
mv .\ye11ow_document.txt ~\Documents

117 Linux: Moving and Renaming Files, Directories1мин
In PowerShell, the command to remove files and directories is rm or remove.

118 Windows: Removing Files & Directories3мин
In PowerShell, the command to remove files and directories is rm or remove.
rm c:\Users\cindy\important_system_file

119 Linux: Removing Files & Directories1мин
120 Cindy Why OS is Important1мин
121 Learner Story: Chelsea3мин
122 Windows: Display File Contents3мин
cat .\important_document.txt
more .\large_document.txt
The enter key advances the file by one line.
Space advances the file by one page.
The q key allows you to quit out of more and go back to your shell.
cat fruits.txt -Head 10
cat fruits.txt -Tail 10

123 Linux: Display File Contents2мин
cat important_document.txt
less large_document.txt
g - This moves to the beginning of a file.
G - This moves to the end of a text file.
/word_search - This allows you to search for a word or phrase.
q - This allows you to quit out of less and go back to your shell.
tail fruits.txt

124 Windows: Modifying Text Files2мин
start notepad++ hello.txt

125 Linux: Modifying Text Files1мин


126 Windows Powershell3мин
Get-Alias ls
Get-Childltem
Get-Childltem C:\
PowerShell	  Alias	cmd.exe
Get-Childltem ls	dir
Get-Help is used for PowerShell commands like Get-Help Is, and /? is used for other commands like dir such as dir /?.

127 Windows: Searching within Files6мин
sls
Select-String cow farm_ammals.txt
Select-String cow *.txt
The -Filter parameter will filter the results for file names that match a pattern.

128 Windows: Searching within Directories1мин
129 Linux: Searching within Files1мин
grep cow farm_aninals.txt

130 Windows: Input, Output, and the Pipeline7мин
echo woof > dog.txt
stdin
stdout
stderr

cat .\dog.txt 
echo woof
echo woof >> dog.txt

cat words.txt | Select-String st
rm secure_file 2 > errors.txt 
cat errors.txt

rm secure_file 2> $null

131 Linux: Input, Output and Pipeline3мин
echo woof > dog.txt 
cat dog.txt
echo woof >> dog.txt

ls /dir/fake_dir 2> error_output.txt
less /var/log/syslog 2> /dev/null

ls -la /etc | grep bluetooth

132 Windows and Linux Advanced Navigation1мин
Regular expressions
Used to help you do advanced pattern-based selection



133 Ben First Tech Job1мин
134 10 материалов для самостоятельного изучения
135 Navigating Coursera10мин
136 Program Surveys10мин
137 How to Use Discussion Forums10мин
138 Get to Know Your Classmates10мин
139 Supplemental Reading for Windows CLI & Unix Bash10мин
140 Supplemental Reading for 'Size' vs 'Size of Disk' in Windows10мин
141 Supplemental Reading for Notepad++10мин
142 Supplemental Reading for GNU Documentation10мин
143 Supplemental Reading for Windows PowerShell10мин
144 Instructions for Accessing Linux and Windows Qwiklabs10мин
145 3 практических упражнения
146 Basic Commands30мин
147 File and Text Manipulation30мин
148 Accessing Qwiklabs16мин



201 Week2 Users and Permissions
In the second week of this course, we'll learn about configuring users and permissions in Windows and Linux OS. As an IT Support Specialist, it's important to know how to grant the appropriate permissions to users and groups for both Windows and Linux OS. By the end of this module, you will know how to add, modify, and remove users for a computer and for specific files and folders by using the Windows GUI, Windows CLI, and Linux shell.
202 Users, Administrators, and Groups, Oh My!3мин
Standard users
Administrators

Standard user
One who is given access to a machine but has restricted access to do things like install software or change certain settings

Administrator (admin)
A user that has complete control machine

Groups

203 Windows: View User and Group Information6мин
Windows domain
A network of computers, users, files, etc that are added to a central database

User Access Control (UAC)
A feature in Windows that prevents unauthorized changes to a system

204 Windows: View User and Group Information using CLI2мин
Users and Groups
Windows: Viewing User and Group Information using CLI

Get-LocalUser
Get-LocalGroup

Get-LocalGroupMember Admini strators

205 Linux: Users, Superuser and Beyond4мин
sudo command or superuser do

cat /etc/sudoers Permission denied sudo cat /etc/sudoers|
sudo su
sudo su exit

cat /etc/group|

cat /etc/passwd|

206 Windows: Passwords4мин
net

PS C:\Users\cmdy> net user cindy * 
Type a password for the user:

/logonpasswordchg:yes

net user victor /logonpasswordchg:yes

207 Linux: Passwords1мин
passwd cindy

cindy@cindy-nyc:~$ sudo passwd -e victor 
passwd: password expiry information changed. 
cindy@cindy-nyc:~$

208 Windows: Adding and Removing Users5мин
net user andrea * /add

net user andrea /logonpasswordchg:yes

net user cesar pa5swOrd /add /logonpasswordchg:yes

net user andrea /del

Remove-Local User cesar

209 Linux: Adding and Removing Users50

sudo useradd juan 
sudo userdel juan

Biometric data
Something about you that's unique to you, like a fingerprint, a voice, or a face

210 Mobile Users and Accounts3мин

Mobile device management
MDM

211 Ben Life as a CIO1мин
212 Windows: File Permissions5мин

In Windows, files and directory permissions are assigned using Access Control Lists or ACLs. Specifically, we Ye going to be working with Discretionary Access Control Lists or DACLs.

Windows files and folders can also have System Access Control Lists or SACLs assigned to them. SACLs are used to tell Windows that it should use an event log to make a note of every time someone accesses a file or folder.

Read: The Read permission lets you see that a file exists, and allows you to read its contents. It also lets you read the files and directories in a directory.

Read & Execute: The Read & Execute permission lets you read files, and if the file is an executable, you can run the file. Read & Execute includes Read, so if you select Read & Execute, Read will be automatically selected.

List folder contents: List folder contents is an alias for Read & Execute on a directory. Checking one will check the other. It means that you can read and execute files in that directory.

Write: The Write permission lets you make changes to a file. It might be surprising to you, but you can have write access to a file without having read permission to that file!

The Write permission also lets you create subdirectories, and write to files in the directory.

Modify: The Modify permission is an umbrella permission that includes read, execute, and write.

Full control: A user or group with full control can do anything they want to the file! It includes all of the permissions of Modify, and adds the ability to take ownership of a file and change its ACLs.

icacls C:\users\cindy\Desktop\

NT AUTHORITY\SYSTEM:(0I)(CI)(F) 
BUlLTlN\Administrators:(OI)(CI)(F) 
CINDY-NYC\cindy:(OI)(CI)(F)

213 Linux: File Permissions2мин
Read - This allows someone to read the contents of a file or folder.

Write - This allows someone to write information to a file or folder.

Execute - This allows someone to execute a program.

Is -l ~/my_file

214 Windows: Modifying Permissions7мин
icacls
icacls "C:\Vacation Pictures" /grant Everyone:(OI)(CI)(R)

PC C:\Windows\system32>icacls "C:\Vacation Pictures"

C:\Vacation Pictures Everyone:(OI)(CI)(R)

CINDY-NYC\devan:(OI)(CI)(M)
BUILTIN\Administrators:(I)(OI)(CI)(F)
NT AUTHORITY\SYSTEM:(I)(OI)(CI)(F)
BUILTIN\Users:(I)(OI)(CI)(RX)
NT AUTHORITY\Authenticated Users:(I)(M)
NT AUTHORITY\Authenticated Users:(I)(OI)(CI)(10)(M)


PS C:\windows\system32> icacls "C:\Vacation Pictures" /grant

processed file: C:\Vacation Pictures

Successfully processed 1 files; Failed processing 0 files PS
C:\Windows\system32>

Guest users: This is a special type of user that’s allowed to use the computer without a password. Guest users are disabled by default. You might enable them in very specific situations


PS C:\windows\system32> icacls "C:\Vacation Pictures" /grant

processed file: C:\Vacation Pictures

Successfully processed 1 files; Failed processing 0 files PS C:\windows\system32> _


PS C:\Windows\system32> icacls "C:\Vacation Pictures" /remove Everyone

processed file: C:\Vacation Pictures

Successfully processed 1 files; Failed processing 0 files PS C:\windows\system32>


PS C:\wmdows\system32> icacls "C:\Vacation Pictures"

C:\Vacation Pictures NT AUTHORITY\Authenticated Users:(0I)(CI)(R)

CINDY-NYC\devan:(0I)(CI)(M)

BUILTIN\Admi ni strators:(I)(0I)(CI)(F)

NT AUTHORITY\SYSTEM:(I)(0I)(CI)(F)

BUILTIN\Users:(I)(0I)(CI)(RX)

NT AUTHORITY\Authenticated Users:(I)(M)

NT AUTHORITY\Authenticated Users:(I)(0I)(CI)(10)(M)

Successfully processed 1 files; Failed processing 0 files

PS C:\windows\system32> .

215 Linux: Modifying Permissions4мин
The owner, which is denoted by a “u”

The group the file belongs to, which is denoted by a “g”

Or other users, which is denoted by an “o”


cindy@cindy-nyc:~$ Is -l my_cool_file

--w------- 1 cindy cool_group 0 Oct 9 17:49 my_cool_file

cindy@cindy-nyc:~$ chmod u+x my_cool_file cindy@cindy-nyc:~$ Is -l my_cool-file

Is: cannot access 'my_cool-file': No such file or directory cindy@cindy-nyc:~$ Is -l my_cool_file

--wx------ 1 cindy cool_group 0 Oct 9 17:49 my_cool_file

wcindy-nyc:~$ chmod u-x my_cool_file cindy@cindy-nyc:~$ Is -l my_cool_file

--w------- 1 cindy cool_group 0 Oct 9 17:49 my_cool_file

cindy@cindy-nyc:~$

The numerical equivalent of rwx is:

•	4 for read or r

•	2 for write or w

•	1 for execute or x

chmod 754 my_cool_file

cindy@cindy-nyc:~$ Is -l my_cool_file

-rwxr-xr-- 1 cindy cool_group 0 Oct 9


cindy@cindy-nyc:~$ chmod u+rwx ny_cool_file cindy@cindy-nyc:~$ chmod g+rw ny_cool_file cindy@cindy-nyc:~$ chmod o+r ny_cool_file cindy@cindy-nyc:~$ chmod 754 ny_cool_file ctndy@cindy-nyc:~$ sudo chown devan ny_cool_file cindy@cindy-nyc:~$ Is -l ny_cool_file

-rwxr-xr-- 1 devan cool_group 0 Oct 9 17:49 ny_cool_file cindy@cindy-nyc:~$


my_cool_file cindy@ctndy-nyc:~$ sudo chown devan my_cool_file cindy@cindy-nyc:~$ Is -l my_cool_file

-rwxr-xr-- 1 devan cool_group 0 Oct 9 17:49 my_cool_file cindy@cindy-nyc:~$ sudo chgrp best_group_ever my_cool_file cindy@cindy-nyc:~$ Is -l my_cool_file

-rwxr-xr-- 1 devan best_group_ever 0 Oct 9 17:49 my_cool_file cindy@cindy-nyc:~$ 

216 Windows: Special Permissions4мин
Simple permissions are actually sets of special, or specific permissions.

PS C:\Windows\system32> leads C:\Wmdows\Temp c:\windows\Temp BUiLTiN\users:(CI)(s,wd,ad,x)

BUILTlN\Administrators:(F)

BUILTlN\Administrators:(01)(Cl)(10)(F) NT AUTHORITY\SYSTEM:(F)

NT AUTHORITY\SYSTEM:(01)(Cl)(10)(F) CREATOR OWNER:(01)(Cl)(10)(F)


Inherit Only

WD: Create Files/Write Data AD: Create Folders/Append Data
S: Synchronize


PS C:\Windows\Temp\example> icacls C:\Windows\Temp\example >> icacls.txt 
PS C:\Windows\Temp\example> cat .\icacls.txt C:\windows\Ternp\example BUILTIN\Users:(I)(CI)(S,WD,AD,X)

BUILTIN\Administrators:(I)(F)

BUlLTlN\Administrators:(I)(oi)(ci)(IO)(f)

NT AUTHORITY\SYSTEM:(I)(F)

NT AUTHORITY\SYSTEM:(I)(01)(Cl)(10)(F)

217 Linux: SetUID, SetGID, Sticky Bit5мин


cindy@cindy-nyc:~$ passwd Changing password for cindy.

(current) UNIX password:

Enter new UNIX password:

Retype new UNIX password:

passwd: password updated successfully


cindy@cindy-nyc:~$ ls -l /etc/shadow

-rw-r-----	 1 root shadow 1297 Oct 10 10:42 /etc/shadow

cindy@cindy-nyc:~$


cindy@clndy-nyc:~$ ls -l /usr/bin/passwd

-rwsr-xr-x 1 root root 54256 May 16 19:37 /usr/bin/passwd

cindy@cindy-nyc:~$


cindy@clndy-nyc:~$ ls -l /usr/bin/passwd

-rwsr-xr-x 1 root root 54256 May 16 19:37 /usr/bin/passwd

cindy@cindy-nyc:~$


:indy@cindy-nyc:~$ Is -l /usr/bin/passwd

-rwsr-xr-x 1 root root 54256 May 16 19:37 /usr/bin/passwd

cindy@cindy-nyc:~$ sudo chmod u+s my_cool_file

[sudo] password for cindy:

:indy@cindy-nyc:~$ sudo chmod 4755 my_cool_file :indy@cindy-nyc:~$ Is -l my_cool_file

-rwsr-xr-x 1 devan best_group_ever 0 Oct 9 17:49 my_cool_file :indy@clndy-nyc:~$ Is -l /usr/bin/wall -rwxr-sr-x 1 root tty 27368 Jun 14 17:51 :indy@cindy-nyc:~$ sudo chmod 2755 my_cool_file

:indy@cindy-nyc:~$ Is -l my_cool_file		

-rwxr-sr-x 1 devan best_group_ever 0 Oct 9 17:49 cindy@cindy-nyc:~$ []


sudo chmod 1755 my_folder/

cindy@cindy-nyc:~$ Is -Id my_folder/

drwxr-xr-t 2 cindy cindy 4096 Oct 5 16:14 my_folder/

cindy@cindy-nyc:~$

218 4 материала для самостоятельного изучения
219 Supplemental Reading for Windows Passwords10мин
220 Supplemental Readings for Mobile Users and Accounts10мин
221 Supplemental Reading for Windows ACL10мин
222 Supplemental Reading for Special Permissions in Windows10мин

ICACLS C:\Users\Qwiklab\Documents\important_document

C:\Users\Qwiklab\Documents\important_document QWIKLABS-BB-254\Kara:(R,W)
                                              NT AUTHORITY\SYSTEM:(I)(F)
                                              BUILTIN\Administrators:(I)(F)
                                              BUILTIN\Users:(I)(RX)
                                              Everyone:(I)(RX)


ICACLS C:\Users\Qwiklab\Documents\important_document /remove "Kara"

ICACLS C:\Users\Qwiklab\Documents\important_document /grant "Kara:(r)"

ICACLS C:\Users\Qwiklab\Secret\

C:\Users\Qwiklab\Secret\ QWIKLABS-BB-254\Kara:(R)
                         NT AUTHORITY\SYSTEM:(I)(OI)(CI)(F)
                         BUILTIN\Administrators:(I)(OI)(CI)(F)
                         BUILTIN\Users:(I)(RX)
                         BUILTIN\Users:(I)(OI)(CI)(IO)(GR,GE)
                         Everyone:(I)(RX)
                         Everyone:(I)(OI)(CI)(IO)(GR,GE)

ICACLS C:\Users\Qwiklab\Secret\ /grant "Phoebe:(r)"

ICACLS C:\Users\Qwiklab\Secret\ /grant "Kara:(w)"

ICACLS C:\Users\Qwiklab\Music\

ICACLS C:\Users\Qwiklab\Music\ /remove "Everyone"
ICACLS C:\Users\Qwiklab\Music\ /grant "Everyone:(r)"

ICACLS C:\Users\Qwiklab\Documents\not_so_important_document
ICACLS C:\Users\Qwiklab\Documents\not_so_important_document /grant "Authenticated Users:(w)"

Example 5
ICACLS C:\Users\Qwiklab\Documents\public_document
ICACLS C:\Users\Qwiklab\Documents\public_document /grant "Everyone:(r)"


223 1 практическое упражнение
224 Permissions30мин


301 Week3 Package and Software Management
In the third week of this course, we'll learn about package and software management in Windows and Linux OS. It's important to know how package installs work and how devices and drivers are managed within these operating systems. We will also learn about different packaging and file compression methods. By the end of this module, you will know how to create, update, and remove software by using the Windows GUI, Windows CLI and Linux shell.
302 Module Introduction43
303 Windows: Software Packages6мин

Executable file (.exe)
Contain instructions for a computer to execute when they’re run

Portable Executable
PE format

Microsoft install package (.msi)

Used to guide a program called the Windows Installer in the installation, maintenance, and removal of programs on the Windows operating system

Windows Store
APPX

PS C:\users\cindy> C:\users\cindy\Desktop\hello.exe 
Hello there, IT Specialist!!

Press any key to exit.

304 Linux: Software Packages3мин

RPM (Red Hat)

Debian

Packaged as a .deb file for Debian

sudo dpkg -i atom-amd64.deb

sudo dpkg -r atom

dpkg -l

dpkg -l | grep atom

305 Mobile App Packages3мин

Mobile applications
Apps
App stores
A central, managed marketplace for app developers to publish and sell mobile apps

App store app

App store service

Enrerprise app
management

Mobile device management
MDM

Side-loading

Where you install mobile apps directly, without using an app store

Mobile apps are standalone software packages, so they contain all their dependencies.

cache
Clearing the cache will remove all changes to the settings, and sign out of any accounts that the app was signed into.

306 Windows: Archives3мин
Archive
Comprised of one or more files that's compressed into a single file

Package archives
The core or source software files that are compressed into one file

Installing from source

7-zip

Compress-Archive -Path C:\Users\cindy\Desktop\CoolFiles\ ~\Desktop\CoolArchive.zip

307 Linux: Archives1мин

To extract a file using 7zip, use the command 7z and the flag e for extract and then the file you want to extract.

7z e my_archive.tar

308 Windows: Package Dependencies7мин

Having dependencies

Counting on other pieces of software to make an application work, since one bit of code depends on another, in order to work

Library

A way to package a bunch of useful code that someone else wrote

Dynamic-link Libraries
DLL
(DLL Hell)

Side-by-side Assemblies
SxS
C:\Windows\WinSxS
Manifest

Find-Package
cmdlet
Sysinternals package
PackageManagement
Chocolatey
Register-PackageSource
Register-PackageSource Name chocolatey ProviderName Chocolatey -Location http://chocolatey.org/api/v2

Get-PackageSource

Find-Package sysinternals -includeDependencies

Find-Package sysinternals -IncludeDependencies

Install-Package

309 Linux: Package Dependencies1мин

sudo dpkg -i google-chrome-stable_current_arnd64.deb

Package managers
Come with the works to make package installation and removal easier, including installing package dependencies


310 Windows: Package Manager4мин

apt
Package manager
Makes sure that the process of software installation, removal, update, and dependency management is as easy and automatic as possible

SCCM  Puppet

Install-Package Name sysinternaIs

Install-Package -Name sysinternals

Get-Package
Get-Package -name sysinternals


311 Linux: Package Manager Apt5мин
312 Windows: Underneath the Hood3мин
313 Linux: Underneath the Hood1мин
314 Windows: Devices and Drivers3мин
315 Linux: Devices and Drivers4мин
316 Window: Operating System Updates4мин
317 Linux: Operating System Updates2мин
318 14 материалов для самостоятельного изучения
319 Supplemental Reading for Windows Software Packages10мин
320 Supplemental Reading for Mobile App Packages10мин
321 Supplemental Reading for 7-Zip and PowerShell Zips10мин
322 Supplemental Reading for the Linux Tar Command10мин
323 Supplemental reading for Windows Package Dependencies10мин
324 Supplemental Reading for Linux Package Dependencies10мин
325 Supplemental Reading for Windows Package Managers10мин
326 Supplemental Reading for Linux PPAs10мин
327 Supplemental Reading on GIMP10мин
328 Supplemental Reading for Windows Installers and Process Monitors10мин
329 Supplemental Reading Windows Devices and Drivers10мин
330 Supplemental reading for Linux Devices and Drivers10мин
331 Supplemental Reading for Windows Update10мин
332 Supplemental Reading for Linux Update10мин
333 4 практических упражнения
334 Software Distribution30мин

Packaging and File Archiving on Windows

Checking permissions 1
Before you can even begin changing the permission of a file or folder, you need to first check the permissions of the specific file/folder. To display ownership and permissions for a file, you can use ls with the -l flag and the name of the file you're interested in with the command ls -l [FILENAME]

There's a file named "important_document" on your machine in the "/home/qwiklab/documents" directory. You can change to this directory from your current one using this command:

cd ../qwiklab/documents

Copied!
Check out its current permissions with this command, and take a look at the output below:

-rw------- 1 student student 16 Dec 20 13:35 important_document

Copied!
-rw------- 1 student student 16 Aug  4 11:38 important_document
You can see that it's owned by the "root" user, and that the owner has read and write (but not execute) permissions while everyone else has none at all.

Changing file permissions
Now, change the permissions of "important_document" (from the previous step) so that the owner has execute permissions on top of their current permissions. To do this, you'll use the chmod command, with the argument 700. The two zeros keep everyone, but the owner, from having any permissions at all, and the seven grants all available permissions to the owner (including execute). Keep in mind that because the file is owned by "root" you'll need to use sudo:

sudo chmod 700 important_document

-rwx------ 1 student student 16 Dec 20 13:35 important_document

Copied!
You can check the permissions from the below command. You'll now see that the execution permission has been added:

ls -l important_document
Copied!
-rwx------ 1 student student 16 Aug  4 11:38 important_document
Click Check my progress to verify the objective.
Modify permissions on important_document

Changing folder permissions 2
Now you'll do a similar process, this time on a directory. First, move up one directory:

cd ..
Copied!
In this directory there's a folder called "secret_folder". View its current permissions using ls, this time with the -ld flag rather than -l because you're viewing a directory instead of a normal file:

ls -ld secret_folder/

drw-r--r-- 2 root root 4096 Dec 20 13:35 secret_folder/



Copied!
drw-r--r-- 2 root root 4096 Aug  4 11:38 secret_folder/
As you can see, the owner of the file (the root user) has read and write permissions, and everyone else can read only.

The goals for the lab, related to this file, are below:

The owner should have all permissions.
The group should have only write permission.
People other than the owner and the group should have no permissions.
Head's up: When using chmod on a directory, files within that directory are not affected. While this isn't relevant to this specific lab, it's important to remember.

Previously, we used a numerical argument to set the permissions for a file. If you want to avoid figuring out the number that matches the permission levels, you can use an alternate syntax. To satisfy the first condition, you only need to add the execute permission to the owner, since they already have read and write permissions. To add execute to the owner's permission, you can use the command below. (Note that "u" stands for "user" and "x" stands for "execute".)

sudo chmod u+x secret_folder/
Copied!
You can check the permissions again to see that the owner can now read, write, and execute:

ls -ld secret_folder/

drwxr--r-- 2 root root 4096 Dec 20 13:35 secret_folder/


Copied!
drwxr--r-- 2 root root 4096 Aug  4 11:38 secret_folder/
Now you can fix the group's permission. They currently have read permission and don't have write permission, which you can fix with two similar commands. These can be done in either order; "g" stands for "group" (like "u" from before), and "w" and "r" stand for "write" and "read" respectively:

sudo chmod g+w secret_folder/

drwxrw-r-- 2 root root 4096 Dec 20 13:35 secret_folder/

Copied!
sudo chmod g-r secret_folder/

drwx-w-r-- 2 root root 4096 Dec 20 13:35 secret_folder/

Copied!
You can check the permissions again to see that the group now has only write permissions, and the owner has the same permissions as before:

ls -ld secret_folder/
Copied!
drwx-w-r-- 2 root root 4096 Aug  4 11:38 secret_folder/
Finally, you can remove read permissions from everyone else using the command below ("o" stands for "other"):

sudo chmod o-r secret_folder/

drwx-w---- 2 root root 4096 Dec 20 13:35 secret_folder/

Copied!
You can see that all the criteria for this file are now met using ls again:

ls -ld secret_folder/
Copied!
drwx-w---- 2 root root 4096 Aug  4 11:38 secret_folder/
Using chmod this way is easier to remember, but takes lots more commands. All the previous steps could also have been done using the numerical notation, like this:

sudo chmod 720 secret_folder/

drwx-w---- 2 root root 4096 Dec 20 13:35 secret_folder/


Copied!
Click Check my progress to verify the objective.
Modify permissions on secret_folder

Changing owners
Now you'll change the owner of a file. In your current directory, there's a folder called "taco". Use ls to examine its permissions and see who the owner of the file is:

ls -ld taco/


drwxr-xr-x 2 root root 4096 Dec 20 13:35 taco/

Copied!
drwxr-xr-x 2 root root 4096 Aug  4 11:38 taco/
You can see from this that the root user currently owns this file. There's another user account on the machine called "cook". Go ahead and make "cook" the owner of the file, using the chown command like this:

sudo chown cook /home/qwiklab/taco
Copied!
Now you can use ls again to see that the owner of the file has been successfully changed:

ls -ld taco/

drwxr-xr-x 2 cook root 4096 Dec 20 13:35 taco/

Copied!
drwxr-xr-x 2 cook root 4096 Aug  4 11:38 taco/
Click Check my progress to verify the objective.
Change owner of Taco

More practices
There are a few more files present on your machine that you can practice on. First, move into the "documents" folder:

cd documents/
Copied!
There's a file in this folder called "not_so_important_document". View its permissions to see its current state:

ls -l not_so_important_document

-rw-r----- 1 student student 20 Dec 20 13:35 not_so_important_document

Copied!
-rw-r----- 1 student student 20 Aug  4 11:38 not_so_important_document
The owner can read and write, the group can read, and everybody else has no permissions at all. Now, use chmod to change the permissions so that these criteria are met:

The owner has all permissions.
The group has read and write permissions.
Everyone has read permissions.
To give the owner execution permissions, you can use the same command from earlier:

sudo chmod u+x not_so_important_document
Copied!
Remember to use ls to double-check that everything you do behaves how you expect:

ls -l not_so_important_document
Copied!
-rwxr----- 1 student student 20 Aug  4 11:38 not_so_important_document
The group already has read permissions, so all you need to do is add write permissions:

sudo chmod g+w not_so_important_document
Copied!
ls -l not_so_important_document
Copied!
-rwxrw---- 1 student student 20 Aug  4 11:38 not_so_important_document
Finally, you need to give everyone else read permissions. You can use the "o+r" argument to add read permissions to people other than the owner or group, but you can also use "a+r". This adds read permission to everyone (owner, group, and other). Because the owner and the group already have read permissions, this will only change the permissions for everyone else, but the end result is the same:

sudo chmod a+r not_so_important_document
Copied!
You should be able to view the permissions again and see that all criteria for this file have been met:

ls -l not_so_important_document
Copied!
-rwxrw-r-- 1 student student 20 Aug  4 11:38 not_so_important_document
Again, you can accomplish the same result using a numerical argument to set the permissions, rather than incrementally changing them. Here's the command that meets all three criteria at once:

sudo chmod 764 not_so_important_document

-rwxrw-r-- 1 student student 20 Dec 20 13:35 not_so_important_document


Copied!
Click Check my progress to verify the objective.
Change permissions of not_so_important_document

Adding multiple permissions at once
Finally, you'll learn how to use the non-numeric argument to add multiple permissions at once. There's one more file in the current directory, named "public_document". First, view its current permissions:

ls -l public_document
Copied!
-rw-r--r-- 1 student student 14 Aug  4 11:38 public_document
For this file, you want everyone (owner, group, and anyone else) to have all permissions. You can add read, write, and execute permissions to everyone at once using this command:

sudo chmod a+rwx public_document
Copied!
This should make the file as open as possible, where every user has every permission:

ls -l public_document
Copied!
-rwxrwxrwx 1 student student 14 Aug  4 11:38 public_document
Using the numeric argument form of chmod, this same result could be accomplished with this command:

sudo chmod 777 public_document
Copied!
Click Check my progress to verify the objective.
Change owner of public_document

-rwxrwxrwx 1 student student 14 Dec 20 13:35 public_document


335 Package Managers30мин

Packaging and File Archiving on Linux

Install and uninstall software using Windows GUI
Installing Atom

First, you'll install the Atom text editor. Using Google Chrome, visit http://www.atom.io to download the latest version of Atom. Once you have downloaded the file, open your "Downloads" folder under C:\Users\qwiklabs\Downloads. You should see the installer, called "AtomSetup-x64". Double click the executable and the process should begin:

Screenshot of Atom installer graphics.

When it's finished, Atom will automatically open:

Screenshot of Atom, opened automatically to the Welcome Guide.

You won't need to use Atom during this lab, so feel free to close the program. Later tater!

Click Check my progress to verify the objective.

Atom
Extracting using 7-Zip
-7-Zip is a super useful program for working with archived or zipped files, and it's already been installed on your system. Using File Explorer navigate to "C:\Users\Qwiklab\Downloads". This folder contains a .tar archive called "example.tar". You don't have permissions to extract files in this .tar file's current folder, so click-and-drag the file to the Desktop. After moving the file, you'll be prompted to confirm the move; click "Continue" to finish the move. Then, you can use it to extract the contents of the archive by right-clicking "example.tar" (now on the Desktop), hovering over "7-Zip", and clicking "Extract Here":

Screenshot of Windows desktop. The right-click / context menu has been opened for a file on the desktop called "example.tar". On the right-click / context menu, "7-Zip" has been selected and an additional menu is visible (including the option to Extract Here).

Afterwards, you'll see the contents of the .tar file on the Desktop, alongside the archive:

Screenshot of the contents on the Windows desktop, including the example.tar file and 3 other files: one image, and two text files.

Click Check my progress to verify the objective.

Extract with 7-zip
Archiving files
Now you'll perform the other half of the process, bundling multiple files into a .zip archive. Navigate to "C:\Users\Qwiklab\Documents" and find the three files named, "Earth", "Mercury", and "Venus":

Screenshot of File Explorer, showing a list of 3 files named Earth, Mercury, and Venus.

Archiving files with Powershell

Now you'll build multiple files into a .zip archive using Powershell. Open Powershell and navigate to this folder. (Make sure you have administrative privileges enabled!). So, search for Windows Powershell, right-click it, and select "Run as Administrator".

Screenshot of Windows Desktop. Windows Search is open and searching for Windows PowerShell. The screenshot is annotated to highlight the application as it appears in the Windows Search.

Now, Use the following command:

cd C:\Users\Qwiklab\Documents\
Copied!
to navigate to the "Documents" folder. Once you're there, you can create a .zip archive (called Planets.zip) using this command:

Compress-Archive -Path Earth, Mercury, Venus Planets.zip
Copied!
Click Check my progress to verify the objective.

Archiving Files with PowerShell
Install and uninstall software using Windows CLI
Installing VLC

There are alternatives to manually downloading and running installers when you need to install or manage programs on Windows. To install or remove programs, you need administrative privileges. So, open Windows Powershell by searching for it in the Windows start menu, then right-click it and select "Run as Administrator".

In the Windows Powershell terminal, enter the following commands to download and install VLC media player.

$VLC_URL = "https://download.videolan.org/vlc/last/win64/"
Copied!
$GET_HTML = Invoke-WebRequest $VLC_URL
Copied!
$FILE = $GET_HTML.Links | Select-Object @{Label='href';Expression={@{$true=$_.href}[$_.href.EndsWith('win64.exe')]}} | Select-Object -ExpandProperty href
Copied!
$URL = ($VLC_URL+$FILE)
Copied!
$DOWNLOAD_DIR = "C:\users\qwiklabs\Downloads\"
Copied!
$OUTPUT_FILE = ($DOWNLOAD_DIR+$FILE)
Copied!
(new-object System.Net.WebClient).DownloadFile($URL, $OUTPUT_FILE)
Copied!
cmd.exe /c $OUTPUT_FILE /S
Copied!
Once the installation process is successfully completed, verify that VLC has successfully been installed with the following command:

Get-Package -Name *vlc*
Copied!
Name              Version  Source  ProviderName
----              -------  ------  ------------
VLC media player  3.0.16           Programs
Click Check my progress to verify the objective.

VLC
Uninstalling GIMP
You can use Windows Powershell to uninstall programs. If you've closed your Powershell window, reopen it again by searching for it in the Start Menu, then right-clicking it and selecting "Run as Administrator".

You can uninstall GIMP, a photo editor, using this command:

cmd.exe /c "C:\Program Files\GIMP 2\uninst\unins000.exe" /VERYSILENT /NORESTART
Copied!
Once the process finishes, GIMP will no longer be available on your system. You can verify this with the following command and notice that GIMP is not listed:

Get-Package


======

Software Packaging and File Archiving on Linux
Introduction
This lab focuses on installing and removing software in Linux, and working with zipped files. You'll be installing a text editor called Atom, and extracting/un-extracting .tar files. You'll also use apt to install/uninstall programs.

Head's up: You'll experience a delay as the labs initially load (particularly for Windows labs). So, please wait a couple of minutes for the labs to load. The grade is calculated when the lab is complete, so be sure to hit "End Lab" when you're done!

You'll have 60 minutes to complete this lab.

Start the lab
You'll need to start the lab before you can access the materials. To do this, click the green “Start Lab” button at the top of the screen.

Green "Start Lab" button

After you click the “Start Lab” button, you will see a shell, where you will be performing further steps in the lab. You should have a shell that looks like this:

Screenshot of shell terminal CLI. CLI reads "student@864a6934570a: -$"

Installing Atom
First, use dpkg to install a text editor, called Atom. A .deb file is located at "/home/qwiklab/downloads/atom-amd64.deb", which you can install using this command:

sudo dpkg -i /home/qwiklab/downloads/atom-amd64.deb
Copied!
You'll see some errors after this command, but that's okay! The atom package has some dependencies that aren't installed on your machine yet, and dpkg is just warning you that they need to be installed:

Selecting previously unselected package atom.
(Reading database ... 36819 files and directories currently installed.)
Preparing to unpack .../downloads/atom-amd64.deb ...
Unpacking atom (1.21.0) ...
dpkg: dependency problems prevent configuration of atom:
 atom depends on git; however:
  Package git is not installed.
 atom depends on gconf2; however:
  Package gconf2 is not installed.
 atom depends on gconf-service; however:
  Package gconf-service is not installed.
 atom depends on libnotify4; however:
  Package libnotify4 is not installed.
 atom depends on python; however:
  Package python is not installed.
 atom depends on gvfs-bin; however:
  Package gvfs-bin is not installed.
dpkg: error processing package atom (--install):
 dependency problems - leaving unconfigured
Processing triggers for mime-support (3.62) ...
Errors were encountered while processing:
 atom
You can remedy this by using apt to fix the missing dependencies, using this command:

sudo apt install -f
Copied!
You'll be prompted to confirm your decision to continue with the operation by typing "Y" (for "Yes"), midway through the process.

Now Atom is successfully installed, which you can verify using dpkg:

dpkg -s atom
Copied!
Package: atom
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 456200
Maintainer: GitHub <atom@github.com>
Architecture: amd64
Version: 1.21.0
Click Check my progress to verify the objective.

Install Atom
Extracting an archive
Next, you will extract a .tar archive. The archive "extract_me.tar" is located in "/home/qwiklab/downloads/". Move to that directory, using this command:

cd /home/qwiklab/downloads
Copied!
You can use the Linux tar command to extract it using this command:

sudo tar -xvf extract_me.tar
Copied!
The contents of the archive (the file named "great_job") are then extracted:

home/qwiklab/extract_me/
home/qwiklab/extract_me/great_job
Click Check my progress to verify the objective.

Extract Archive
Archiving files
First, move back to the original directory:

cd ~
Copied!
You can also use the tar command to do the reverse operation, creating an archive. There are three files in your /home/qwiklab/documents folder named "Earth", "Mercury", and "Venus". Use tar to archive them into the file "Planets.tar" using this command (one line):

tar -cvf Planets.tar --absolute-names /home/qwiklab/documents/Earth /home/qwiklab/documents/Mercury /home/qwiklab/documents/Venus
Copied!
"Planets.tar" will then be added to your current directory, and will contain the three planet files:

/home/qwiklab/documents/Earth
/home/qwiklab/documents/Mercury
/home/qwiklab/documents/Venus
Click Check my progress to verify the objective.

Archive Files
Installing 7-Zip
You can also install programs on Linux, using apt too, which handles dependencies for you to simplify the installation process. You can install the program 7-Zip, using apt, with a simple one-line command:

sudo apt install p7zip-full
Copied!
When it's finished, 7-Zip will be installed:

Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following additional packages will be installed:
  p7zip
Suggested packages:
  p7zip-rar
The following NEW packages will be installed:
  p7zip p7zip-full
-0 upgraded, 2 newly installed, 0 to remove and 21 not upgraded.
Need to get 1540 kB of archives.
After this operation, 5780 kB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://deb.debian.org/debian buster/main amd64 p7zip amd64 16.02+dfsg-6 [376 kB]
Get:2 http://deb.debian.org/debian buster/main amd64 p7zip-full amd64 16.02+dfsg-6 [1164 kB]
Fetched 1540 kB in 0s (8625 kB/s)
debconf: delaying package configuration, since apt-utils is not installed
Selecting previously unselected package p7zip.
(Reading database ... 48397 files and directories currently installed.)
Preparing to unpack .../p7zip_16.02+dfsg-6_amd64.deb ...
Unpacking p7zip (16.02+dfsg-6) ...
Selecting previously unselected package p7zip-full.
Preparing to unpack .../p7zip-full_16.02+dfsg-6_amd64.deb ...
Unpacking p7zip-full (16.02+dfsg-6) ...
Setting up p7zip (16.02+dfsg-6) ...
Setting up p7zip-full (16.02+dfsg-6) ...
You'll be prompted to confirm your decision midway through the installation process. Confirm this by typing "Y" (for "Yes"). Then, 7-Zip will be installed:

You can verify the installation using dpkg, with this command:

dpkg -s p7zip-full
Copied!
Package: p7zip-full
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 4659
Maintainer: Robert Luberda<robert@debian.org>
Architecture: amd64
Source: p7zip
Version: 16.02+dfsg-6
Click Check my progress to verify the objective.

Install 7-Zip
Uninstalling GIMP
Uninstallation can also be handled by apt by using "remove" instead of "install" as the argument. GIMP, an image-editing program, is already installed on your machine. Uninstall it now, using apt with this command:

sudo apt remove gimp
Copied!
You'll be prompted to confirm your decision midway through the uninstallation process. Confirm this by typing "Y" (for "Yes"). Then, GIMP will be uninstalled:

Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following packages were automatically installed and are no longer required:
  fonts-droid-fallback fonts-noto-mono ghostscript gimp-data gsfonts
  i965-va-driver intel-media-va-driver libaa1 libamd2 libaom0 libasound2
  libasound2-data libasyncns0 libavcodec58 libavformat58 libavutil56
  libbabl-0.1-0 libblas3 libcaca0 libcamd2 libccolamd2 libcholmod3
  libchromaprint1 libcodec2-0.8.1 libcolamd2 libcrystalhd3
  libcupsfilters1 libcupsimage2 libde265-0 libexiv2-14 libflac8
  libgegl-0.4-0 libgegl-common libgexiv2-2 libgfortran5 libgimp2.0
  libgme0 libgs9 libgs9-common libgsm1 libheif1 libigdgmm5 libijs-0.35
  libilmbase23 libjbig2dec0 liblapack3 libmetis5 libmng1 libmp3lame0
  libmpg123-0 libmypaint-1.3-0 libmypaint-common libnuma1 libogg0
  libopenexr23 libopenjp2-7 libopenmpt0 libopus0 libpaper-utils libpaper1
  libpoppler-glib8 libpoppler82 libpulse0 libraw19 libsdl1.2debian
  libshine3 libslang2 libsnappy1v5 libsndfile1 libsoxr0 libspeex1
  libssh-gcrypt-4 libsuitesparseconfig5 libswresample3 libswscale5
  libtheora0 libtwolame0 libumfpack5 libva-drm2 libva-x11-2 libva2
  libvdpau-va-gl1 libvdpau1 libvorbis0a libvorbisenc2 libvorbisfile3
  libvpx5 libwavpack1 libwebpdemux2 libwebpmux3 libwmf0.2-7 libx264-155
  libx265-165 libxcb-xfixes0 libxvidcore4 libzvbi-common libzvbi0
  mesa-va-drivers mesa-vdpau-drivers poppler-data va-driver-all
  vdpau-driver-all
Use 'sudo apt autoremove' to remove them.
The following packages will be REMOVED:
  gimp
-0 upgraded, 0 newly installed, 1 to remove and 21 not upgraded.
After this operation, 19.5 MB disk space will be freed.
Do you want to continue? [Y/n] y
(Reading database ... 48496 files and directories currently installed.)
Removing gimp (2.10.8-2) ...
Processing triggers for mime-support (3.62) ...
Processing triggers for desktop-file-utils (0.23-4) ...
You can verify this using dpkg (like before) with this command:

dpkg -s gimp
Copied!
dpkg-query: package 'gimp' is not installed and no information is available
Use dpkg --info (= dpkg-deb --info) to examine archive files.
Click Check my progress to verify the objective.

Uninstall GIMP


336 What’s happening in the background?30мин
337 Device Software Management30мин


401 Week4 Filesystems
In the fourth week of this course, we'll learn about how filesystems work for Windows and Linux OS. We'll learn about filesystem types and why they're different for certain OS. We'll learn about disk partitioning and virtual memory and why these are so important for an IT Support Specialist's role. We'll also cover ways mount and unmount filesystems, read disk usage, and repair filesystems. By the end of this module, you will partition and format a disk drive yourself in both Windows and Linux.
402 Module Introduction49
403 Review of Filesystems2мин
Filesystem
Used to keep track of files and file storage a disk

404 Disk Anatomy3мин
Partition
The piece of a disk that you can manage

Partition table
Tells the OS how the disk is partitioned

Master Boot Record (MBR)
GUID Partition Table (GPT)

UEFI

405 Windows: Disk Partitioning and Formatting a Filesystem6мин
Disk Management
C:\Windows\system32>Diskpart
DISKPART> list disk
DISKPART> select disk 1
clean
create partition primary
select partition 1
active
format FS=NTFS label=my-thumb-drive quick

406 Windows: Mounting and Unmounting a Filesystem51
Mounting
Making something accessible to the computer, like a filesystem or a hard disk

407 Linux: Disk Partitioning and Formatting a Filesystem6мин
Parted tool
Interactive
Command Line
parted -l
sudo parted -l
sudo parted /dev/sdb
(parted) print

(parted) mklabel gpt (parted) print

Model: Kingston DataTraveler 2.0 (scsi) Disk /dev/sdb: 7803MB

Sector size (logical/physical): 512B/512B Partition Table: gpt Disk Flags:
Number Start End Size File system Name Flags

(parted) mkpart primary ext4 IMiB 5G1B (parted) print

Model: Kingston DataTraveler 2.0 (scsi)

Disk /dev/sdb: 7803MB

Sector size (logical/physical): 512B/512B Partition Table: gpt Disk Flags:

Number	Start	End	Size	File	system Name	Flags

1	1049kB	5369MB	5368MB	ext4	primary

cindy@cindy-nyc:~$ sudo mkfs -t ext4 /dev/sdb1
sudo mkfs -t ext4 /dev/sdb1
sudo parted -l

408 Linux: Mounting and Unmounting a Filesystem3мин
sudo mount /dev/sdb1 /my_usb/
cindy@cindy-nyc:~$ sudo mount /dev/sdb1 /my_usb/
cindy@cindy-nyc:~$ cd /my_usb/ 
cindy@cindy-nyc:/my_usb$

sudo umount /my_usb/

sudo umount /dev/sdb1

/etc/fstab
cat /etc/fstab
sudo blkid

409 Windows: Swap3мин
Swap space
pagefile.sys
Virtual memory
How our OS provides the physical memory available in our computer (like RAM) to the applications that run on the computer

Memory Manager
System Properties

410 Linux: Swap2мин
Swap space
In Linux, the dedicated area of the hard drive used for virtual memory

(parted) mkpart primary linux-swap 5GiB 100%

sudo parted /dev/sdb

mkswap
sudo mkswap /dev/sdb2

swapon
sudo swapon /dev/sdb2

411 Windows: Files6мин
Master File Table
MFT
file record number
shortcut
Symbolic links
mklink
mklink file_1_symlink file_1.txt
Hard link
mklink /H
mklink /H file_1_handlink file_1.txt

412 Linux: Files2мин
Softlink
Hardlink

cindy@cindy-nyc:~/Desktop$ ls -l important_file 
-rw-rw-r-- 1 cindy cindy 0 Oct 5 16:40 important_file 
cindy@cindy-nyc:~/Desktop$ ln -s important_file important_file_softlink 
cindy@cindy-nyc:~/Desktop$ ls important_file inportant_file_softlink

cindy@cindy-nyc:~/Desktop$ In inportant_file important_file_hardlink 
cindy@cindy-nyc:~/Desktop$ ls

important_file important_file_hardlink important_file_softlink 
cindy@cindy-nyc:~/Desktop$ Is -l important_file -rw-rw-r-- 2 cindy cindy 0 Oct 5 16:40 important_file 
cindy@cindy-nyc:~/Desktop$ 

413 Windows: Disk Usage3мин
Defragmentation
The idea behind disk defragmentation is to take all the files stored on a given disk, and reorganize them into neighboring locations.
Trim
Disk Defragmenter

414 Linux: Disk Usage1мин
du -h
df

415 Windows: Filesystem Repair4мин
Data buffer
A region of RAM that’s used to temporarily store data while it’s being moved around

Self-healing
fsutil

C:\Windows\system32>fsutil repair query C: 
Self healing state on C: is: 0x9
Values: 0x1 - Enable general repair.

0x9 - Enable repair and warn about potential data loss.

0x10 - Disable repair and bugcheck once on first corruption

Chkdsk
chkdsk /F D:

416 Linux: Filesystem Repair1мин

fsck
sudo fsck /dev/sda

417 Ben Passion1мин
418 9 материалов для самостоятельного изучения
419 Supplemental Reading for FAT32 File System10мин
420 Supplemental Reading for Disk Partitioning and Formatting in Windows10мин
421 Supplemental reading Mounting and Unmounting a Filesystem in Linux10мин
422 Supplemental Reading for Windows Paging10мин
423 Supplemental Reading for Linux Swap10мин
424 Supplemental Reading on NTFS File System10мин
425 Supplemental Reading for Windows Disk Usage10мин
426 Supplemental reading for Linux Disk Usage10мин
427 Supplemental Reading for Linux Filesystem Repair10мин
428 1 практическое упражнение
429 Filesystem Types30мин



501 Week5 Process Management
In the fifth week of this course, we'll explore process management. As an IT Support Specialist, it is important to use system tools to read and understand process statuses of machines. We will cover ways to start and terminate a process in Windows and Linux. We will also apply troubleshooting tools to solve problems with processes and resources. By the end of this module, you will use Windows and Linux commands to do practical process maintenance.
502 Module Introduction1мин

503 Programs vs Processes Revisited2мин
Programs
The applications that we can run, like the Chrome web browser
Processes
Programs that are running
Background processes
Daemon processes

504 Windows: Process Creation and Termination3мин
Session Manager Subsystem
smss.exe
winlogon.exe

Client/Server Runtime Subsystem
csrss.exe
init
Environment
taskkill
Process ID
PID
C:\Windows\system32>taskkill /pid 5856

SUCCESS: Sent termination signal to the process with PID 5856.

505 Linux: Process Creation and Termination1мин

When you startup your computer, the kernel creates a process called init, which has a PID of 1.

506 Jess Passions1мин

507 Windows: Reading Process Information3мин
Task Manager
taskmgr.exe
CTRL-SHIFT-ESC
taskkill
tasklist
Get-Process

508 Linux: Reading Process Information4мин
ps -x
R: running
T: stopped
S: interruptible sleep
ps -ef

cindy@cindy-nyc:~$ ps -ef | grep Chrome

cindy 10165 10123	0 15:15 pts/1 00:00:00 grep --color=auto

cindy@cindy-nyc:~$

ls -l /proc
cat /proc/1805/status
ps -ef

509 Windows: Signals1мин
Signal
A way to tell a process that something's just happened
SIGINT

510 Linux: Signals1мин

511 Windows: Managing Processes5мин
Process Explorer
A utility Microsoft created to let IT Support Specialists, system administrators and other users look at running processes
CTRL-F
MUI
Multilingual User Interface
procexp.exe

512 Linux: Managing Processes4мин
Kill
Termination signal
SIGTERM
kill 10235
SIGKILL
-KILL
kill 10235 kill -KILL 10392
SIGTSTP
terminal stop
-TSTP
ps -x|
kill -TSTP 10754
Ctrl-Z
SIGCONT
kill -CONT 10829

SIGTERM
SIGKILL
SIGTSTP

513 Mobile App Management4мин

515 Linux: Resource Monitoring3мин
Resource Monitoring tool
Get-Process

Get-Process | Sort CPU -descending | Select first 3 -Property ID,ProcessName,CPU
Id ProcessName	CPU
332 explorer 124.71875 
2988 SearchUI 32.25 
5468 RuntimeBroker 27.875

514 Windows: Resource Monitoring4мин
top
q
uptime

cindy@cindy-nyc:~$ uptime
16:43:12 up 5:08,	1 user, load average: 0.04, 0.05, 0.01
cindy@cindy-nyc:~$

lsof

516 8 материалов для самостоятельного изучения
517 Supplemental Reading for Process Creation and Termination in Windows10мин
518 Supplemental Reading for Reading Process Information in Windows10мин
519 Supplemental Reading for Reading Process Information in Linux10мин
520 Supplemental Reading for Windows Signal10мин
521 Supplemental Reading for Managing Processes in Windows10мин
522 Supplemental Readings for Mobile App Management10мин
523 Supplemental Reading Resource Monitoring in Windows10мин
524 Supplemental reading for Resource Monitoring in Linux10мин
525 3 практических упражнения
526 Life of a Process30мин
527 Managing Processes30мин
528 Process Utilization30мин



601 Week6 Operating Systems in Practice
Congratulations, you've made it to the final week in the course! In the last week of this course, we will cover some of the practical aspects of operating systems that you'll use all the time in IT Support. We will cover remote access and how to troubleshoot a computer from afar. We'll explore virtualization tools to manage and remove virtual instances, use logs for system monitoring, and show you a few different techniques for OS deployment. By the end of this module, you will apply all the skills from this course to debug some issues within Windows and Linux OS. Good luck!
602 Remote Connection and SSH5мин
Remote connection
Allows us to manage multiple machines from anywhere in the world
Secure shell (SSH)
A protocol implemented by other programs to securely access one computer from another
OpenSSH program
PuTTY

cindy@cindy-nyc:~$ ssh cindy@104.131.122.215
The authenticity of host '104.131.122.215 (104.131.122.215)' can't be established. ECDSA key fingerprint is SHA256:6hENLcR4X5nPF52anwMRrwENeBHha4Sn+0tnhvEeckA.
Are you sure you want to continue connecting (yes/no)? 
Private
Public

Virtual private network (VPN)
Allows you to connect to a private network, like your work network, over the Internet

603 Remote Connections on Windows4мин
PuTTY
A free, open source software that you can use to make remote connections through several network protocols, including SSH
putty.exe -ssh cindy@104.131.122.215:
putty.exe
Plink
PuTTY Link
Remote Desktop Protocol
RDP
Microsoft Terminal Services Client
mstsc.exe
/admin

604 Remote Connection File Transfer1мин
Secure copy (SCP)
A command you can use in Linux to copy files between computers on a network

scp /home/cindy/Desktop/myfile.txt cindy@104.131.122.215

605 Remote Connection File Transfer on Windows3мин
PuTTY Secure Copy Client
pscp.exe
pscp.exe C:\Users\cindy\Desktop\my_file.txt cindy@104.131.122.215:
Shared folders
net share
net share ShareMe=C:\Users\cindy\Desktop\ShareMe /grant:everyone,full

606 Virtual Machines4мин
Virtual instance
A single virtual machine
VirtualBox

607 System Monitoring1мин
tail -f /var/log/syslog

Logging
The act of creating log events

608 The Windows Event Viewer4мин
Event Viewer
eventvwr.msc

609 Linux Logs4мин
/var/log
Variable
/var/log/auth.log
/var/log/kern.log
/var/log/dmesg
/var/log/syslog
logrotate
Centralized logging
Epoch time
1501538594
Mon Jul 31:15:03:14
PDT 2017

Dct 10 07:41:15 cindy-nyc dhclient[1531]: DHCPACK of 100.111.161.45 from 100.109.169.81

610 Working with Logs4мин
error
less /var/log/svslog | qrep error
tail
tail -f /var/log/syslog

611 Imaging Software56
612 Operating Systems Deployment Methods4мин
Clonezilla
Symantec Ghost
Disk-to-disk cloning
dd
dd if=/dev/sdd of=~/Desktop/my_usb_image.img bs=100M

cindy@cindy-nyc:~$ sudo dd if=/dev/sdd of=~/Disktop/my_usb_image.img bs=100M 
[sudo] password for cindy:
76+1 records in 
76+1 records out
8011120640 bytes (8.0 GB, 7.5 GiB) copied, 223.46 s, 35.9 MB/s 
cindy@cindy-nyc:~$

613 Mobile Device Resetting and Imaging2мин
Factoryreset
Over the air
OTA
Re-flash
-1.	Download the update to a computer.

-2.	Attach the mobile device to a computer using a USB cable.

-3.	Run some software on the computer that will re-flash the mobile device.

Fonow-up questions
Do what you love and love what you do.

614 Interview Role Play: Operating Systems5мин
615 Course Wrap Up1мин
616 Heather Early Career Advice1мин
617 Congratulations!7
618 6 материалов для самостоятельного изучения
619 Supplemental reading for Remote Connections in Windows10мин
620 Supplemental Reading for Remote Connection File Transfer in Windows10мин
621 Supplemental reading for Virtual Machines10мин
622 Supplemental Reading for Linux Logs10мин
623 Supplemental Reading for OS Deployment Methods10мин
624 Supplemental Readings for Mobile Device Resetting and Imaging10мин
625 2 практических упражнения
626 Remote Access30мин
627 Logging30мин
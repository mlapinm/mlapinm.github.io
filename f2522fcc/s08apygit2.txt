200 WEEK2 Using Git Locally In this module, you’ll dive into advanced Git interactions by skipping the staging area for small code changes, and understand how Git uses the HEAD alias to represent checked-out snapshots. Next, you’ll explore how to move and remove files before finally getting a cheat sheet to help you in your Git explorations! The next step of your learning will include how to undo changes before committing and how to amend commits once they’re submitted. Finally, you’ll be able to identify errors in commits that were submitted a while back. In the final section of this module, you’ll explore the concept of branching and merging. You’ll learn what a branch is, how to create one, and how they work in harmony with you and your code. Once you’re comfortable with branching, you’ll dive into merging, how it works with branched data, and how to deal with merge conflicts.
201 SHOW ALL SYLLABUSSHOW ALL
202 Intro to Module 2: Using Git Locally1m

203 Skipping the Staging Area4m
git commit -a
A shortcut to stage any changes to tracked files and commit them in one step

#!/usr/bin/env python3 

import os

def check reboot():
  """Returns True if the computer has a pending reboot."""
  return os.path.exist("/run/reboot-required")

def main():
  pass
  
main()

git diff
-p
atom all_checks.py
git commit -a -m "Call check reboot from main, exit with 1 on error"
git log

Git uses the HEAD alias to represent the currently checked-out snapshot of your project.

204 Getting More Information About Our Changes6m
patch
git log -p
diff -u
git show
--stat
git diff

#!/usr/bin/env python3 import os 

import sys

def check_reboot():
  """Returns True if the computer has a pending reboot."""	
  return os.path.exist("/run/reboot-required")

def main():
  if checkreboot():
    print("Pending Reboot.") 
	sys.exit(1)
  print("Everything ok.")
  sys.exit(0)
	
main()

git add -p

git diff --staged

git commit -m 'Add a message when everything is ok'

205 Deleting and Renaming Files4m
206 Undoing Changes Before Committing5m
207 Amending Commits4m
208 Rollbacks5m
209 Identifying a Commit6m
210 What is a branch?3m
211 Creating New Branches4m
212 Working with Branches3m
213 Merging2m
214 Merge Conflicts6m
215 Module 2 Wrap Up: Using Git Locally1m
216 Advanced Git Cheat Sheet10m
217 Git Revert Cheat Sheet10m
218 Git Branches and Merging Cheat Sheet10m
219 Practice Quiz: Advanced Git Interaction25m
220 Practice Quiz: Undoing Things25m
221 Practice Quiz: Branching & Merging25m



ls
You can view more details about the files, like ownership and permissions, by adding the flag -l to the ls command.
ls -l
You can see hidden files in the current directory by passing flag a to the ls command.
ls -a
You can find out where you are in relation to the rest of the file system using the pwd command.
pwd
/home/student
You can navigate to different directories using the cd command.
cd /path/to/other/directory
You can check out the contents of a file using the cat command.
cat /path/to/file/file_name
For large input files, the less commands allows movement within the files. The syntax is similar to that of the cat command, but you can move.
Reading large file using less
less /path/to/file/file_namecd

Creating directories (folders)
Directories (folders) in Linux are created using the mkdir command. The command takes the directory name as the argument.
mkdir dir_name
mkdir dir1 dir2 dir3
mkdir can take three options:

-p: allow mkdir to create parent directories if they don't exist
-m: (mode) used to set permissions of directories during creation
-v: run command in verbose mode

cd /home/user/Documents
mkdir red blue green yellow magenta

Step 1: Change into the Pictures directory.
cd /home/user/Pictures
Step 2: Show the directory contents, including hidden files.
ls -a
Step 3: Move the hidden files into the target directory.
mv .apple .banana .broccoli .milk /home/user/Documents/Hidden

mv /home/user/Movies/Europe\ Pictures /home/user/Pictures

cd /home/user/Pictures

mv /home/user/Images/Vacation.JPG .

Step 1: Navigate to the Music folder.
cd /home/user/Music
Step 2: Remove files.
rm Best_of_the_90s 80s_jams Classical
Step 3: Remove the directory.
rmdir Rock

Searching in files
grep
Options and flags

-r: search recursively
-w: match the whole word
-n: only in line number
-e: match pattern
--include and --exclude: include and exclude files in the search
--include-dir and --exclude-dir: include or exclude directories in the search

Step 1: Find files.
grep -rw /home/user/Downloads -e "vacation"
Step 2: Move the directories that match into the target directory.
mv /home/user/Downloads/Iceland /home/user/Downloads/Japan /home/user/Documents

Editing files
Example:

nano /path/to/existing/file
Copied!
The command will open the file in the terminal and display the current file contents. To modify, you can edit the content in the terminal, just like a normal editor. The editor is managed using various shortcuts.

To save modifications to the file, use Ctrl+O-:

CTRL-O
Copied!
Once editing is done, we can close and exit the program using Ctrl+X

CTRL-X
Copied!
NB: At any point in using the editor, you can get help using Ctrl+G

CTRL-G
Copied!
To exit help mode, use Ctrl+X

CTRL-X
Copied!
Alright, now let's practice how to edit files using nano.

In the current directory, create an empty file called editor_test.txt

touch editor_test.txt
Copied!
Open the file with the Nano editor.

nano editor_test.txt
CTRL-O





My New Folder
My New Text Document
====

Question 1
In Bash, which of the following commands can you use to view the contents of a document. Check all that apply. 
open
v cat
v less
dog
Question 2
In a Linux machine, you have the following files: 
apple.txt
banana.jpg 
chocolate.txt
orange.txt
 What command can you use to search for the word "fruit" in the text files in the above directory? Check all that apply.
grep fruit apple.txt chocolate.txt orange.txt
v grep fruit *.txt
find fruit apple.txt chocolate.txt
find fruit apple.txt chocolate.txt orange.txt
Question 3
In a Linux machine, you have a file named "types_of_fish.txt" and you want to append the word "trout" to the file contents. Which of the following commands can you use?
echo trout < types_of_fish.txt
echo trout > types_of_fish.txt
v echo trout >> types_of_fish.txt
echo trout 2> types_of_fish.txt
Question 4
In a Linux machine, you want to list through a directory called /home/ben/Documents and search for the word "important" in the filenames in that directory. Which of the following commands can you use? 
v ls /home/ben/Documents | grep important
ls /home/ben/Documents >> grep important
ls /home/ben/Documents < grep important
ls /home/ben/Documents > grep important

